(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

// rawAsap provides everything we need except exception management.
var rawAsap = require("./raw");
// RawTasks are recycled to reduce GC churn.
var freeTasks = [];
// We queue errors to ensure they are thrown in right order (FIFO).
// Array-as-queue is good enough here, since we are just dealing with exceptions.
var pendingErrors = [];
var requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);

function throwFirstError() {
    if (pendingErrors.length) {
        throw pendingErrors.shift();
    }
}

/**
 * Calls a task as soon as possible after returning, in its own event, with priority
 * over other events like animation, reflow, and repaint. An error thrown from an
 * event will not interrupt, nor even substantially slow down the processing of
 * other events, but will be rather postponed to a lower priority event.
 * @param {{call}} task A callable object, typically a function that takes no
 * arguments.
 */
module.exports = asap;
function asap(task) {
    var rawTask;
    if (freeTasks.length) {
        rawTask = freeTasks.pop();
    } else {
        rawTask = new RawTask();
    }
    rawTask.task = task;
    rawAsap(rawTask);
}

// We wrap tasks with recyclable task objects.  A task object implements
// `call`, just like a function.
function RawTask() {
    this.task = null;
}

// The sole purpose of wrapping the task is to catch the exception and recycle
// the task object after its single use.
RawTask.prototype.call = function () {
    try {
        this.task.call();
    } catch (error) {
        if (asap.onerror) {
            // This hook exists purely for testing purposes.
            // Its name will be periodically randomized to break any code that
            // depends on its existence.
            asap.onerror(error);
        } else {
            // In a web browser, exceptions are not fatal. However, to avoid
            // slowing down the queue of pending tasks, we rethrow the error in a
            // lower priority turn.
            pendingErrors.push(error);
            requestErrorThrow();
        }
    } finally {
        this.task = null;
        freeTasks[freeTasks.length] = this;
    }
};

},{"./raw":2}],2:[function(require,module,exports){
(function (global){
"use strict";

// Use the fastest means possible to execute a task in its own turn, with
// priority over other events including IO, animation, reflow, and redraw
// events in browsers.
//
// An exception thrown by a task will permanently interrupt the processing of
// subsequent tasks. The higher level `asap` function ensures that if an
// exception is thrown by a task, that the task queue will continue flushing as
// soon as possible, but if you use `rawAsap` directly, you are responsible to
// either ensure that no exceptions are thrown from your task, or to manually
// call `rawAsap.requestFlush` if an exception is thrown.
module.exports = rawAsap;
function rawAsap(task) {
    if (!queue.length) {
        requestFlush();
        flushing = true;
    }
    // Equivalent to push, but avoids a function call.
    queue[queue.length] = task;
}

var queue = [];
// Once a flush has been requested, no further calls to `requestFlush` are
// necessary until the next `flush` completes.
var flushing = false;
// `requestFlush` is an implementation-specific method that attempts to kick
// off a `flush` event as quickly as possible. `flush` will attempt to exhaust
// the event queue before yielding to the browser's own event loop.
var requestFlush;
// The position of the next task to execute in the task queue. This is
// preserved between calls to `flush` so that it can be resumed if
// a task throws an exception.
var index = 0;
// If a task schedules additional tasks recursively, the task queue can grow
// unbounded. To prevent memory exhaustion, the task queue will periodically
// truncate already-completed tasks.
var capacity = 1024;

// The flush function processes all tasks that have been scheduled with
// `rawAsap` unless and until one of those tasks throws an exception.
// If a task throws an exception, `flush` ensures that its state will remain
// consistent and will resume where it left off when called again.
// However, `flush` does not make any arrangements to be called again if an
// exception is thrown.
function flush() {
    while (index < queue.length) {
        var currentIndex = index;
        // Advance the index before calling the task. This ensures that we will
        // begin flushing on the next task the task throws an error.
        index = index + 1;
        queue[currentIndex].call();
        // Prevent leaking memory for long chains of recursive calls to `asap`.
        // If we call `asap` within tasks scheduled by `asap`, the queue will
        // grow, but to avoid an O(n) walk for every task we execute, we don't
        // shift tasks off the queue after they have been executed.
        // Instead, we periodically shift 1024 tasks off the queue.
        if (index > capacity) {
            // Manually shift all values starting at the index back to the
            // beginning of the queue.
            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {
                queue[scan] = queue[scan + index];
            }
            queue.length -= index;
            index = 0;
        }
    }
    queue.length = 0;
    index = 0;
    flushing = false;
}

// `requestFlush` is implemented using a strategy based on data collected from
// every available SauceLabs Selenium web driver worker at time of writing.
// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593

// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that
// have WebKitMutationObserver but not un-prefixed MutationObserver.
// Must use `global` or `self` instead of `window` to work in both frames and web
// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.

/* globals self */
var scope = typeof global !== "undefined" ? global : self;
var BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;

// MutationObservers are desirable because they have high priority and work
// reliably everywhere they are implemented.
// They are implemented in all modern browsers.
//
// - Android 4-4.3
// - Chrome 26-34
// - Firefox 14-29
// - Internet Explorer 11
// - iPad Safari 6-7.1
// - iPhone Safari 7-7.1
// - Safari 6-7
if (typeof BrowserMutationObserver === "function") {
    requestFlush = makeRequestCallFromMutationObserver(flush);

// MessageChannels are desirable because they give direct access to the HTML
// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera
// 11-12, and in web workers in many engines.
// Although message channels yield to any queued rendering and IO tasks, they
// would be better than imposing the 4ms delay of timers.
// However, they do not work reliably in Internet Explorer or Safari.

// Internet Explorer 10 is the only browser that has setImmediate but does
// not have MutationObservers.
// Although setImmediate yields to the browser's renderer, it would be
// preferrable to falling back to setTimeout since it does not have
// the minimum 4ms penalty.
// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and
// Desktop to a lesser extent) that renders both setImmediate and
// MessageChannel useless for the purposes of ASAP.
// https://github.com/kriskowal/q/issues/396

// Timers are implemented universally.
// We fall back to timers in workers in most engines, and in foreground
// contexts in the following browsers.
// However, note that even this simple case requires nuances to operate in a
// broad spectrum of browsers.
//
// - Firefox 3-13
// - Internet Explorer 6-9
// - iPad Safari 4.3
// - Lynx 2.8.7
} else {
    requestFlush = makeRequestCallFromTimer(flush);
}

// `requestFlush` requests that the high priority event queue be flushed as
// soon as possible.
// This is useful to prevent an error thrown in a task from stalling the event
// queue if the exception handled by Node.jsâ€™s
// `process.on("uncaughtException")` or by a domain.
rawAsap.requestFlush = requestFlush;

// To request a high priority event, we induce a mutation observer by toggling
// the text of a text node between "1" and "-1".
function makeRequestCallFromMutationObserver(callback) {
    var toggle = 1;
    var observer = new BrowserMutationObserver(callback);
    var node = document.createTextNode("");
    observer.observe(node, {characterData: true});
    return function requestCall() {
        toggle = -toggle;
        node.data = toggle;
    };
}

// The message channel technique was discovered by Malte Ubl and was the
// original foundation for this library.
// http://www.nonblocking.io/2011/06/windownexttick.html

// Safari 6.0.5 (at least) intermittently fails to create message ports on a
// page's first load. Thankfully, this version of Safari supports
// MutationObservers, so we don't need to fall back in that case.

// function makeRequestCallFromMessageChannel(callback) {
//     var channel = new MessageChannel();
//     channel.port1.onmessage = callback;
//     return function requestCall() {
//         channel.port2.postMessage(0);
//     };
// }

// For reasons explained above, we are also unable to use `setImmediate`
// under any circumstances.
// Even if we were, there is another bug in Internet Explorer 10.
// It is not sufficient to assign `setImmediate` to `requestFlush` because
// `setImmediate` must be called *by name* and therefore must be wrapped in a
// closure.
// Never forget.

// function makeRequestCallFromSetImmediate(callback) {
//     return function requestCall() {
//         setImmediate(callback);
//     };
// }

// Safari 6.0 has a problem where timers will get lost while the user is
// scrolling. This problem does not impact ASAP because Safari 6.0 supports
// mutation observers, so that implementation is used instead.
// However, if we ever elect to use timers in Safari, the prevalent work-around
// is to add a scroll event listener that calls for a flush.

// `setTimeout` does not call the passed callback if the delay is less than
// approximately 7 in web workers in Firefox 8 through 18, and sometimes not
// even then.

function makeRequestCallFromTimer(callback) {
    return function requestCall() {
        // We dispatch a timeout with a specified delay of 0 for engines that
        // can reliably accommodate that request. This will usually be snapped
        // to a 4 milisecond delay, but once we're flushing, there's no delay
        // between events.
        var timeoutHandle = setTimeout(handleTimer, 0);
        // However, since this timer gets frequently dropped in Firefox
        // workers, we enlist an interval handle that will try to fire
        // an event 20 times per second until it succeeds.
        var intervalHandle = setInterval(handleTimer, 50);

        function handleTimer() {
            // Whichever timer succeeds will cancel both timers and
            // execute the callback.
            clearTimeout(timeoutHandle);
            clearInterval(intervalHandle);
            callback();
        }
    };
}

// This is for `asap.js` only.
// Its name will be periodically randomized to break any code that depends on
// its existence.
rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;

// ASAP was originally a nextTick shim included in Q. This was factored out
// into this ASAP package. It was later adapted to RSVP which made further
// amendments. These decisions, particularly to marginalize MessageChannel and
// to capture the MutationObserver implementation in a closure, were integrated
// back into ASAP proper.
// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],3:[function(require,module,exports){
(function (global){
"use strict";

require("core-js/shim");

require("regenerator-runtime/runtime");

require("core-js/fn/regexp/escape");

if (global._babelPolyfill) {
  throw new Error("only one instance of babel-polyfill is allowed");
}
global._babelPolyfill = true;

var DEFINE_PROPERTY = "defineProperty";
function define(O, key, value) {
  O[key] || Object[DEFINE_PROPERTY](O, key, {
    writable: true,
    configurable: true,
    value: value
  });
}

define(String.prototype, "padLeft", "".padStart);
define(String.prototype, "padRight", "".padEnd);

"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
  [][key] && define(Array, key, Function.call.bind([][key]));
});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"core-js/fn/regexp/escape":13,"core-js/shim":336,"regenerator-runtime/runtime":4}],4:[function(require,module,exports){
(function (global){
/**
 * Copyright (c) 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
 * additional grant of patent rights can be found in the PATENTS file in
 * the same directory.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    if (typeof global.process === "object" && global.process.domain) {
      invoke = global.process.domain.bind(invoke);
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // Among the various tricks for obtaining a reference to the global
  // object, this seems to be the most reliable technique that does not
  // use indirect eval (which violates Content Security Policy).
  typeof global === "object" ? global :
  typeof window === "object" ? window :
  typeof self === "object" ? self : this
);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],5:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return (b64.length * 3 / 4) - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr((len * 3 / 4) - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0; i < l; i += 4) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}

},{}],6:[function(require,module,exports){
var document = require('global/document')
var hyperx = require('hyperx')
var onload = require('on-load')

var SVGNS = 'http://www.w3.org/2000/svg'
var XLINKNS = 'http://www.w3.org/1999/xlink'

var BOOL_PROPS = {
  autofocus: 1,
  checked: 1,
  defaultchecked: 1,
  disabled: 1,
  formnovalidate: 1,
  indeterminate: 1,
  readonly: 1,
  required: 1,
  selected: 1,
  willvalidate: 1
}
var COMMENT_TAG = '!--'
var SVG_TAGS = [
  'svg',
  'altGlyph', 'altGlyphDef', 'altGlyphItem', 'animate', 'animateColor',
  'animateMotion', 'animateTransform', 'circle', 'clipPath', 'color-profile',
  'cursor', 'defs', 'desc', 'ellipse', 'feBlend', 'feColorMatrix',
  'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting',
  'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB',
  'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode',
  'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting',
  'feSpotLight', 'feTile', 'feTurbulence', 'filter', 'font', 'font-face',
  'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri',
  'foreignObject', 'g', 'glyph', 'glyphRef', 'hkern', 'image', 'line',
  'linearGradient', 'marker', 'mask', 'metadata', 'missing-glyph', 'mpath',
  'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect',
  'set', 'stop', 'switch', 'symbol', 'text', 'textPath', 'title', 'tref',
  'tspan', 'use', 'view', 'vkern'
]

function belCreateElement (tag, props, children) {
  var el

  // If an svg tag, it needs a namespace
  if (SVG_TAGS.indexOf(tag) !== -1) {
    props.namespace = SVGNS
  }

  // If we are using a namespace
  var ns = false
  if (props.namespace) {
    ns = props.namespace
    delete props.namespace
  }

  // Create the element
  if (ns) {
    el = document.createElementNS(ns, tag)
  } else if (tag === COMMENT_TAG) {
    return document.createComment(props.comment)
  } else {
    el = document.createElement(tag)
  }

  // If adding onload events
  if (props.onload || props.onunload) {
    var load = props.onload || function () {}
    var unload = props.onunload || function () {}
    onload(el, function belOnload () {
      load(el)
    }, function belOnunload () {
      unload(el)
    },
    // We have to use non-standard `caller` to find who invokes `belCreateElement`
    belCreateElement.caller.caller.caller)
    delete props.onload
    delete props.onunload
  }

  // Create the properties
  for (var p in props) {
    if (props.hasOwnProperty(p)) {
      var key = p.toLowerCase()
      var val = props[p]
      // Normalize className
      if (key === 'classname') {
        key = 'class'
        p = 'class'
      }
      // The for attribute gets transformed to htmlFor, but we just set as for
      if (p === 'htmlFor') {
        p = 'for'
      }
      // If a property is boolean, set itself to the key
      if (BOOL_PROPS[key]) {
        if (val === 'true') val = key
        else if (val === 'false') continue
      }
      // If a property prefers being set directly vs setAttribute
      if (key.slice(0, 2) === 'on') {
        el[p] = val
      } else {
        if (ns) {
          if (p === 'xlink:href') {
            el.setAttributeNS(XLINKNS, p, val)
          } else if (/^xmlns($|:)/i.test(p)) {
            // skip xmlns definitions
          } else {
            el.setAttributeNS(null, p, val)
          }
        } else {
          el.setAttribute(p, val)
        }
      }
    }
  }

  function appendChild (childs) {
    if (!Array.isArray(childs)) return
    for (var i = 0; i < childs.length; i++) {
      var node = childs[i]
      if (Array.isArray(node)) {
        appendChild(node)
        continue
      }

      if (typeof node === 'number' ||
        typeof node === 'boolean' ||
        typeof node === 'function' ||
        node instanceof Date ||
        node instanceof RegExp) {
        node = node.toString()
      }

      if (typeof node === 'string') {
        if (el.lastChild && el.lastChild.nodeName === '#text') {
          el.lastChild.nodeValue += node
          continue
        }
        node = document.createTextNode(node)
      }

      if (node && node.nodeType) {
        el.appendChild(node)
      }
    }
  }
  appendChild(children)

  return el
}

module.exports = hyperx(belCreateElement, {comments: true})
module.exports.default = module.exports
module.exports.createElement = belCreateElement

},{"global/document":340,"hyperx":343,"on-load":355}],7:[function(require,module,exports){

},{}],8:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],9:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],10:[function(require,module,exports){
(function (global){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"base64-js":5,"ieee754":344,"isarray":11}],11:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],12:[function(require,module,exports){
var charenc = {
  // UTF-8 encoding
  utf8: {
    // Convert a string to a byte array
    stringToBytes: function(str) {
      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));
    },

    // Convert a byte array to a string
    bytesToString: function(bytes) {
      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));
    }
  },

  // Binary encoding
  bin: {
    // Convert a string to a byte array
    stringToBytes: function(str) {
      for (var bytes = [], i = 0; i < str.length; i++)
        bytes.push(str.charCodeAt(i) & 0xFF);
      return bytes;
    },

    // Convert a byte array to a string
    bytesToString: function(bytes) {
      for (var str = [], i = 0; i < bytes.length; i++)
        str.push(String.fromCharCode(bytes[i]));
      return str.join('');
    }
  }
};

module.exports = charenc;

},{}],13:[function(require,module,exports){
require('../../modules/core.regexp.escape');
module.exports = require('../../modules/_core').RegExp.escape;

},{"../../modules/_core":34,"../../modules/core.regexp.escape":139}],14:[function(require,module,exports){
module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

},{}],15:[function(require,module,exports){
var cof = require('./_cof');
module.exports = function (it, msg) {
  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
  return +it;
};

},{"./_cof":29}],16:[function(require,module,exports){
// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = require('./_wks')('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};

},{"./_hide":53,"./_wks":137}],17:[function(require,module,exports){
module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

},{}],18:[function(require,module,exports){
var isObject = require('./_is-object');
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

},{"./_is-object":62}],19:[function(require,module,exports){
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
'use strict';
var toObject = require('./_to-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');

module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};

},{"./_to-absolute-index":122,"./_to-length":126,"./_to-object":127}],20:[function(require,module,exports){
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
'use strict';
var toObject = require('./_to-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var aLen = arguments.length;
  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
  var end = aLen > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};

},{"./_to-absolute-index":122,"./_to-length":126,"./_to-object":127}],21:[function(require,module,exports){
var forOf = require('./_for-of');

module.exports = function (iter, ITERATOR) {
  var result = [];
  forOf(iter, false, result.push, result, ITERATOR);
  return result;
};

},{"./_for-of":50}],22:[function(require,module,exports){
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');
var toAbsoluteIndex = require('./_to-absolute-index');
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

},{"./_to-absolute-index":122,"./_to-iobject":125,"./_to-length":126}],23:[function(require,module,exports){
// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = require('./_ctx');
var IObject = require('./_iobject');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var asc = require('./_array-species-create');
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};

},{"./_array-species-create":26,"./_ctx":36,"./_iobject":58,"./_to-length":126,"./_to-object":127}],24:[function(require,module,exports){
var aFunction = require('./_a-function');
var toObject = require('./_to-object');
var IObject = require('./_iobject');
var toLength = require('./_to-length');

module.exports = function (that, callbackfn, aLen, memo, isRight) {
  aFunction(callbackfn);
  var O = toObject(that);
  var self = IObject(O);
  var length = toLength(O.length);
  var index = isRight ? length - 1 : 0;
  var i = isRight ? -1 : 1;
  if (aLen < 2) for (;;) {
    if (index in self) {
      memo = self[index];
      index += i;
      break;
    }
    index += i;
    if (isRight ? index < 0 : length <= index) {
      throw TypeError('Reduce of empty array with no initial value');
    }
  }
  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {
    memo = callbackfn(memo, self[index], index, O);
  }
  return memo;
};

},{"./_a-function":14,"./_iobject":58,"./_to-length":126,"./_to-object":127}],25:[function(require,module,exports){
var isObject = require('./_is-object');
var isArray = require('./_is-array');
var SPECIES = require('./_wks')('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};

},{"./_is-array":60,"./_is-object":62,"./_wks":137}],26:[function(require,module,exports){
// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = require('./_array-species-constructor');

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};

},{"./_array-species-constructor":25}],27:[function(require,module,exports){
'use strict';
var aFunction = require('./_a-function');
var isObject = require('./_is-object');
var invoke = require('./_invoke');
var arraySlice = [].slice;
var factories = {};

var construct = function (F, len, args) {
  if (!(len in factories)) {
    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  } return factories[len](F, args);
};

module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = arraySlice.call(arguments, 1);
  var bound = function (/* args... */) {
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };
  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
  return bound;
};

},{"./_a-function":14,"./_invoke":57,"./_is-object":62}],28:[function(require,module,exports){
// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = require('./_cof');
var TAG = require('./_wks')('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

},{"./_cof":29,"./_wks":137}],29:[function(require,module,exports){
var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

},{}],30:[function(require,module,exports){
'use strict';
var dP = require('./_object-dp').f;
var create = require('./_object-create');
var redefineAll = require('./_redefine-all');
var ctx = require('./_ctx');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var $iterDefine = require('./_iter-define');
var step = require('./_iter-step');
var setSpecies = require('./_set-species');
var DESCRIPTORS = require('./_descriptors');
var fastKey = require('./_meta').fastKey;
var validate = require('./_validate-collection');
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};

},{"./_an-instance":17,"./_ctx":36,"./_descriptors":40,"./_for-of":50,"./_iter-define":66,"./_iter-step":68,"./_meta":76,"./_object-create":81,"./_object-dp":82,"./_redefine-all":101,"./_set-species":108,"./_validate-collection":134}],31:[function(require,module,exports){
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var classof = require('./_classof');
var from = require('./_array-from-iterable');
module.exports = function (NAME) {
  return function toJSON() {
    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
    return from(this);
  };
};

},{"./_array-from-iterable":21,"./_classof":28}],32:[function(require,module,exports){
'use strict';
var redefineAll = require('./_redefine-all');
var getWeak = require('./_meta').getWeak;
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var createArrayMethod = require('./_array-methods');
var $has = require('./_has');
var validate = require('./_validate-collection');
var arrayFind = createArrayMethod(5);
var arrayFindIndex = createArrayMethod(6);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (that) {
  return that._l || (that._l = new UncaughtFrozenStore());
};
var UncaughtFrozenStore = function () {
  this.a = [];
};
var findUncaughtFrozen = function (store, key) {
  return arrayFind(store.a, function (it) {
    return it[0] === key;
  });
};
UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.a.push([key, value]);
  },
  'delete': function (key) {
    var index = arrayFindIndex(this.a, function (it) {
      return it[0] === key;
    });
    if (~index) this.a.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;      // collection type
      that._i = id++;      // collection id
      that._l = undefined; // leak store for uncaught frozen objects
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function (key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
        return data && $has(data, this._i) && delete data[this._i];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
        return data && $has(data, this._i);
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var data = getWeak(anObject(key), true);
    if (data === true) uncaughtFrozenStore(that).set(key, value);
    else data[that._i] = value;
    return that;
  },
  ufstore: uncaughtFrozenStore
};

},{"./_an-instance":17,"./_an-object":18,"./_array-methods":23,"./_for-of":50,"./_has":52,"./_is-object":62,"./_meta":76,"./_redefine-all":101,"./_validate-collection":134}],33:[function(require,module,exports){
'use strict';
var global = require('./_global');
var $export = require('./_export');
var redefine = require('./_redefine');
var redefineAll = require('./_redefine-all');
var meta = require('./_meta');
var forOf = require('./_for-of');
var anInstance = require('./_an-instance');
var isObject = require('./_is-object');
var fails = require('./_fails');
var $iterDetect = require('./_iter-detect');
var setToStringTag = require('./_set-to-string-tag');
var inheritIfRequired = require('./_inherit-if-required');

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  var fixMethod = function (KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new C();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
    // weak collections should not contains .clear method
    if (IS_WEAK && proto.clear) delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};

},{"./_an-instance":17,"./_export":44,"./_fails":46,"./_for-of":50,"./_global":51,"./_inherit-if-required":56,"./_is-object":62,"./_iter-detect":67,"./_meta":76,"./_redefine":102,"./_redefine-all":101,"./_set-to-string-tag":109}],34:[function(require,module,exports){
var core = module.exports = { version: '2.5.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

},{}],35:[function(require,module,exports){
'use strict';
var $defineProperty = require('./_object-dp');
var createDesc = require('./_property-desc');

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};

},{"./_object-dp":82,"./_property-desc":100}],36:[function(require,module,exports){
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

},{"./_a-function":14}],37:[function(require,module,exports){
'use strict';
// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var fails = require('./_fails');
var getTime = Date.prototype.getTime;
var $toISOString = Date.prototype.toISOString;

var lz = function (num) {
  return num > 9 ? num : '0' + num;
};

// PhantomJS / old WebKit has a broken implementations
module.exports = (fails(function () {
  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
}) || !fails(function () {
  $toISOString.call(new Date(NaN));
})) ? function toISOString() {
  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
  var d = this;
  var y = d.getUTCFullYear();
  var m = d.getUTCMilliseconds();
  var s = y < 0 ? '-' : y > 9999 ? '+' : '';
  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
} : $toISOString;

},{"./_fails":46}],38:[function(require,module,exports){
'use strict';
var anObject = require('./_an-object');
var toPrimitive = require('./_to-primitive');
var NUMBER = 'number';

module.exports = function (hint) {
  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
  return toPrimitive(anObject(this), hint != NUMBER);
};

},{"./_an-object":18,"./_to-primitive":128}],39:[function(require,module,exports){
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

},{}],40:[function(require,module,exports){
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_fails":46}],41:[function(require,module,exports){
var isObject = require('./_is-object');
var document = require('./_global').document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

},{"./_global":51,"./_is-object":62}],42:[function(require,module,exports){
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

},{}],43:[function(require,module,exports){
// all enumerable object keys, includes symbols
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

},{"./_object-gops":88,"./_object-keys":91,"./_object-pie":92}],44:[function(require,module,exports){
var global = require('./_global');
var core = require('./_core');
var hide = require('./_hide');
var redefine = require('./_redefine');
var ctx = require('./_ctx');
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;

},{"./_core":34,"./_ctx":36,"./_global":51,"./_hide":53,"./_redefine":102}],45:[function(require,module,exports){
var MATCH = require('./_wks')('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};

},{"./_wks":137}],46:[function(require,module,exports){
module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

},{}],47:[function(require,module,exports){
'use strict';
var hide = require('./_hide');
var redefine = require('./_redefine');
var fails = require('./_fails');
var defined = require('./_defined');
var wks = require('./_wks');

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);
  var fns = exec(defined, SYMBOL, ''[KEY]);
  var strfn = fns[0];
  var rxfn = fns[1];
  if (fails(function () {
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  })) {
    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};

},{"./_defined":39,"./_fails":46,"./_hide":53,"./_redefine":102,"./_wks":137}],48:[function(require,module,exports){
'use strict';
// 21.2.5.3 get RegExp.prototype.flags
var anObject = require('./_an-object');
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};

},{"./_an-object":18}],49:[function(require,module,exports){
'use strict';
// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var isArray = require('./_is-array');
var isObject = require('./_is-object');
var toLength = require('./_to-length');
var ctx = require('./_ctx');
var IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');

function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
  var element, spreadable;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      spreadable = false;
      if (isObject(element)) {
        spreadable = element[IS_CONCAT_SPREADABLE];
        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
      }

      if (spreadable && depth > 0) {
        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1fffffffffffff) throw TypeError();
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
}

module.exports = flattenIntoArray;

},{"./_ctx":36,"./_is-array":60,"./_is-object":62,"./_to-length":126,"./_wks":137}],50:[function(require,module,exports){
var ctx = require('./_ctx');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var anObject = require('./_an-object');
var toLength = require('./_to-length');
var getIterFn = require('./core.get-iterator-method');
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;

},{"./_an-object":18,"./_ctx":36,"./_is-array-iter":59,"./_iter-call":64,"./_to-length":126,"./core.get-iterator-method":138}],51:[function(require,module,exports){
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

},{}],52:[function(require,module,exports){
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

},{}],53:[function(require,module,exports){
var dP = require('./_object-dp');
var createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

},{"./_descriptors":40,"./_object-dp":82,"./_property-desc":100}],54:[function(require,module,exports){
var document = require('./_global').document;
module.exports = document && document.documentElement;

},{"./_global":51}],55:[function(require,module,exports){
module.exports = !require('./_descriptors') && !require('./_fails')(function () {
  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_descriptors":40,"./_dom-create":41,"./_fails":46}],56:[function(require,module,exports){
var isObject = require('./_is-object');
var setPrototypeOf = require('./_set-proto').set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};

},{"./_is-object":62,"./_set-proto":107}],57:[function(require,module,exports){
// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};

},{}],58:[function(require,module,exports){
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

},{"./_cof":29}],59:[function(require,module,exports){
// check on default Array iterator
var Iterators = require('./_iterators');
var ITERATOR = require('./_wks')('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

},{"./_iterators":69,"./_wks":137}],60:[function(require,module,exports){
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

},{"./_cof":29}],61:[function(require,module,exports){
// 20.1.2.3 Number.isInteger(number)
var isObject = require('./_is-object');
var floor = Math.floor;
module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};

},{"./_is-object":62}],62:[function(require,module,exports){
module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

},{}],63:[function(require,module,exports){
// 7.2.8 IsRegExp(argument)
var isObject = require('./_is-object');
var cof = require('./_cof');
var MATCH = require('./_wks')('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};

},{"./_cof":29,"./_is-object":62,"./_wks":137}],64:[function(require,module,exports){
// call something on iterator step with safe closing on error
var anObject = require('./_an-object');
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};

},{"./_an-object":18}],65:[function(require,module,exports){
'use strict';
var create = require('./_object-create');
var descriptor = require('./_property-desc');
var setToStringTag = require('./_set-to-string-tag');
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};

},{"./_hide":53,"./_object-create":81,"./_property-desc":100,"./_set-to-string-tag":109,"./_wks":137}],66:[function(require,module,exports){
'use strict';
var LIBRARY = require('./_library');
var $export = require('./_export');
var redefine = require('./_redefine');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var $iterCreate = require('./_iter-create');
var setToStringTag = require('./_set-to-string-tag');
var getPrototypeOf = require('./_object-gpo');
var ITERATOR = require('./_wks')('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

},{"./_export":44,"./_hide":53,"./_iter-create":65,"./_iterators":69,"./_library":70,"./_object-gpo":89,"./_redefine":102,"./_set-to-string-tag":109,"./_wks":137}],67:[function(require,module,exports){
var ITERATOR = require('./_wks')('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};

},{"./_wks":137}],68:[function(require,module,exports){
module.exports = function (done, value) {
  return { value: value, done: !!done };
};

},{}],69:[function(require,module,exports){
module.exports = {};

},{}],70:[function(require,module,exports){
module.exports = false;

},{}],71:[function(require,module,exports){
// 20.2.2.14 Math.expm1(x)
var $expm1 = Math.expm1;
module.exports = (!$expm1
  // Old FF bug
  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || $expm1(-2e-17) != -2e-17
) ? function expm1(x) {
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
} : $expm1;

},{}],72:[function(require,module,exports){
// 20.2.2.16 Math.fround(x)
var sign = require('./_math-sign');
var pow = Math.pow;
var EPSILON = pow(2, -52);
var EPSILON32 = pow(2, -23);
var MAX32 = pow(2, 127) * (2 - EPSILON32);
var MIN32 = pow(2, -126);

var roundTiesToEven = function (n) {
  return n + 1 / EPSILON - 1 / EPSILON;
};

module.exports = Math.fround || function fround(x) {
  var $abs = Math.abs(x);
  var $sign = sign(x);
  var a, result;
  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
  a = (1 + EPSILON32 / EPSILON) * $abs;
  result = a - (a - $abs);
  // eslint-disable-next-line no-self-compare
  if (result > MAX32 || result != result) return $sign * Infinity;
  return $sign * result;
};

},{"./_math-sign":75}],73:[function(require,module,exports){
// 20.2.2.20 Math.log1p(x)
module.exports = Math.log1p || function log1p(x) {
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
};

},{}],74:[function(require,module,exports){
// https://rwaldron.github.io/proposal-math-extensions/
module.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {
  if (
    arguments.length === 0
      // eslint-disable-next-line no-self-compare
      || x != x
      // eslint-disable-next-line no-self-compare
      || inLow != inLow
      // eslint-disable-next-line no-self-compare
      || inHigh != inHigh
      // eslint-disable-next-line no-self-compare
      || outLow != outLow
      // eslint-disable-next-line no-self-compare
      || outHigh != outHigh
  ) return NaN;
  if (x === Infinity || x === -Infinity) return x;
  return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;
};

},{}],75:[function(require,module,exports){
// 20.2.2.28 Math.sign(x)
module.exports = Math.sign || function sign(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};

},{}],76:[function(require,module,exports){
var META = require('./_uid')('meta');
var isObject = require('./_is-object');
var has = require('./_has');
var setDesc = require('./_object-dp').f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !require('./_fails')(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

},{"./_fails":46,"./_has":52,"./_is-object":62,"./_object-dp":82,"./_uid":132}],77:[function(require,module,exports){
var Map = require('./es6.map');
var $export = require('./_export');
var shared = require('./_shared')('metadata');
var store = shared.store || (shared.store = new (require('./es6.weak-map'))());

var getOrCreateMetadataMap = function (target, targetKey, create) {
  var targetMetadata = store.get(target);
  if (!targetMetadata) {
    if (!create) return undefined;
    store.set(target, targetMetadata = new Map());
  }
  var keyMetadata = targetMetadata.get(targetKey);
  if (!keyMetadata) {
    if (!create) return undefined;
    targetMetadata.set(targetKey, keyMetadata = new Map());
  } return keyMetadata;
};
var ordinaryHasOwnMetadata = function (MetadataKey, O, P) {
  var metadataMap = getOrCreateMetadataMap(O, P, false);
  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
};
var ordinaryGetOwnMetadata = function (MetadataKey, O, P) {
  var metadataMap = getOrCreateMetadataMap(O, P, false);
  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
};
var ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {
  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
};
var ordinaryOwnMetadataKeys = function (target, targetKey) {
  var metadataMap = getOrCreateMetadataMap(target, targetKey, false);
  var keys = [];
  if (metadataMap) metadataMap.forEach(function (_, key) { keys.push(key); });
  return keys;
};
var toMetaKey = function (it) {
  return it === undefined || typeof it == 'symbol' ? it : String(it);
};
var exp = function (O) {
  $export($export.S, 'Reflect', O);
};

module.exports = {
  store: store,
  map: getOrCreateMetadataMap,
  has: ordinaryHasOwnMetadata,
  get: ordinaryGetOwnMetadata,
  set: ordinaryDefineOwnMetadata,
  keys: ordinaryOwnMetadataKeys,
  key: toMetaKey,
  exp: exp
};

},{"./_export":44,"./_shared":111,"./es6.map":169,"./es6.weak-map":275}],78:[function(require,module,exports){
var global = require('./_global');
var macrotask = require('./_task').set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = require('./_cof')(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    var promise = Promise.resolve();
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};

},{"./_cof":29,"./_global":51,"./_task":121}],79:[function(require,module,exports){
'use strict';
// 25.4.1.5 NewPromiseCapability(C)
var aFunction = require('./_a-function');

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};

},{"./_a-function":14}],80:[function(require,module,exports){
'use strict';
// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
var toObject = require('./_to-object');
var IObject = require('./_iobject');
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || require('./_fails')(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;

},{"./_fails":46,"./_iobject":58,"./_object-gops":88,"./_object-keys":91,"./_object-pie":92,"./_to-object":127}],81:[function(require,module,exports){
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = require('./_an-object');
var dPs = require('./_object-dps');
var enumBugKeys = require('./_enum-bug-keys');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

},{"./_an-object":18,"./_dom-create":41,"./_enum-bug-keys":42,"./_html":54,"./_object-dps":83,"./_shared-key":110}],82:[function(require,module,exports){
var anObject = require('./_an-object');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var toPrimitive = require('./_to-primitive');
var dP = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

},{"./_an-object":18,"./_descriptors":40,"./_ie8-dom-define":55,"./_to-primitive":128}],83:[function(require,module,exports){
var dP = require('./_object-dp');
var anObject = require('./_an-object');
var getKeys = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

},{"./_an-object":18,"./_descriptors":40,"./_object-dp":82,"./_object-keys":91}],84:[function(require,module,exports){
'use strict';
// Forced replacement prototype accessors methods
module.exports = require('./_library') || !require('./_fails')(function () {
  var K = Math.random();
  // In FF throws only define methods
  // eslint-disable-next-line no-undef, no-useless-call
  __defineSetter__.call(null, K, function () { /* empty */ });
  delete require('./_global')[K];
});

},{"./_fails":46,"./_global":51,"./_library":70}],85:[function(require,module,exports){
var pIE = require('./_object-pie');
var createDesc = require('./_property-desc');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var has = require('./_has');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};

},{"./_descriptors":40,"./_has":52,"./_ie8-dom-define":55,"./_object-pie":92,"./_property-desc":100,"./_to-iobject":125,"./_to-primitive":128}],86:[function(require,module,exports){
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = require('./_to-iobject');
var gOPN = require('./_object-gopn').f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

},{"./_object-gopn":87,"./_to-iobject":125}],87:[function(require,module,exports){
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = require('./_object-keys-internal');
var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};

},{"./_enum-bug-keys":42,"./_object-keys-internal":90}],88:[function(require,module,exports){
exports.f = Object.getOwnPropertySymbols;

},{}],89:[function(require,module,exports){
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = require('./_has');
var toObject = require('./_to-object');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

},{"./_has":52,"./_shared-key":110,"./_to-object":127}],90:[function(require,module,exports){
var has = require('./_has');
var toIObject = require('./_to-iobject');
var arrayIndexOf = require('./_array-includes')(false);
var IE_PROTO = require('./_shared-key')('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

},{"./_array-includes":22,"./_has":52,"./_shared-key":110,"./_to-iobject":125}],91:[function(require,module,exports){
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = require('./_object-keys-internal');
var enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

},{"./_enum-bug-keys":42,"./_object-keys-internal":90}],92:[function(require,module,exports){
exports.f = {}.propertyIsEnumerable;

},{}],93:[function(require,module,exports){
// most Object methods by ES6 should accept primitives
var $export = require('./_export');
var core = require('./_core');
var fails = require('./_fails');
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};

},{"./_core":34,"./_export":44,"./_fails":46}],94:[function(require,module,exports){
var getKeys = require('./_object-keys');
var toIObject = require('./_to-iobject');
var isEnum = require('./_object-pie').f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) if (isEnum.call(O, key = keys[i++])) {
      result.push(isEntries ? [key, O[key]] : O[key]);
    } return result;
  };
};

},{"./_object-keys":91,"./_object-pie":92,"./_to-iobject":125}],95:[function(require,module,exports){
// all object keys, includes non-enumerable and symbols
var gOPN = require('./_object-gopn');
var gOPS = require('./_object-gops');
var anObject = require('./_an-object');
var Reflect = require('./_global').Reflect;
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = gOPN.f(anObject(it));
  var getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};

},{"./_an-object":18,"./_global":51,"./_object-gopn":87,"./_object-gops":88}],96:[function(require,module,exports){
var $parseFloat = require('./_global').parseFloat;
var $trim = require('./_string-trim').trim;

module.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {
  var string = $trim(String(str), 3);
  var result = $parseFloat(string);
  return result === 0 && string.charAt(0) == '-' ? -0 : result;
} : $parseFloat;

},{"./_global":51,"./_string-trim":119,"./_string-ws":120}],97:[function(require,module,exports){
var $parseInt = require('./_global').parseInt;
var $trim = require('./_string-trim').trim;
var ws = require('./_string-ws');
var hex = /^[-+]?0[xX]/;

module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
  var string = $trim(String(str), 3);
  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
} : $parseInt;

},{"./_global":51,"./_string-trim":119,"./_string-ws":120}],98:[function(require,module,exports){
module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};

},{}],99:[function(require,module,exports){
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var newPromiseCapability = require('./_new-promise-capability');

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

},{"./_an-object":18,"./_is-object":62,"./_new-promise-capability":79}],100:[function(require,module,exports){
module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

},{}],101:[function(require,module,exports){
var redefine = require('./_redefine');
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};

},{"./_redefine":102}],102:[function(require,module,exports){
var global = require('./_global');
var hide = require('./_hide');
var has = require('./_has');
var SRC = require('./_uid')('src');
var TO_STRING = 'toString';
var $toString = Function[TO_STRING];
var TPL = ('' + $toString).split(TO_STRING);

require('./_core').inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});

},{"./_core":34,"./_global":51,"./_has":52,"./_hide":53,"./_uid":132}],103:[function(require,module,exports){
module.exports = function (regExp, replace) {
  var replacer = replace === Object(replace) ? function (part) {
    return replace[part];
  } : replace;
  return function (it) {
    return String(it).replace(regExp, replacer);
  };
};

},{}],104:[function(require,module,exports){
// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};

},{}],105:[function(require,module,exports){
'use strict';
// https://tc39.github.io/proposal-setmap-offrom/
var $export = require('./_export');
var aFunction = require('./_a-function');
var ctx = require('./_ctx');
var forOf = require('./_for-of');

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
    var mapFn = arguments[1];
    var mapping, A, n, cb;
    aFunction(this);
    mapping = mapFn !== undefined;
    if (mapping) aFunction(mapFn);
    if (source == undefined) return new this();
    A = [];
    if (mapping) {
      n = 0;
      cb = ctx(mapFn, arguments[2], 2);
      forOf(source, false, function (nextItem) {
        A.push(cb(nextItem, n++));
      });
    } else {
      forOf(source, false, A.push, A);
    }
    return new this(A);
  } });
};

},{"./_a-function":14,"./_ctx":36,"./_export":44,"./_for-of":50}],106:[function(require,module,exports){
'use strict';
// https://tc39.github.io/proposal-setmap-offrom/
var $export = require('./_export');

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { of: function of() {
    var length = arguments.length;
    var A = new Array(length);
    while (length--) A[length] = arguments[length];
    return new this(A);
  } });
};

},{"./_export":44}],107:[function(require,module,exports){
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = require('./_is-object');
var anObject = require('./_an-object');
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

},{"./_an-object":18,"./_ctx":36,"./_is-object":62,"./_object-gopd":85}],108:[function(require,module,exports){
'use strict';
var global = require('./_global');
var dP = require('./_object-dp');
var DESCRIPTORS = require('./_descriptors');
var SPECIES = require('./_wks')('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};

},{"./_descriptors":40,"./_global":51,"./_object-dp":82,"./_wks":137}],109:[function(require,module,exports){
var def = require('./_object-dp').f;
var has = require('./_has');
var TAG = require('./_wks')('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

},{"./_has":52,"./_object-dp":82,"./_wks":137}],110:[function(require,module,exports){
var shared = require('./_shared')('keys');
var uid = require('./_uid');
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

},{"./_shared":111,"./_uid":132}],111:[function(require,module,exports){
var global = require('./_global');
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});
module.exports = function (key) {
  return store[key] || (store[key] = {});
};

},{"./_global":51}],112:[function(require,module,exports){
// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = require('./_an-object');
var aFunction = require('./_a-function');
var SPECIES = require('./_wks')('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};

},{"./_a-function":14,"./_an-object":18,"./_wks":137}],113:[function(require,module,exports){
'use strict';
var fails = require('./_fails');

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
  });
};

},{"./_fails":46}],114:[function(require,module,exports){
var toInteger = require('./_to-integer');
var defined = require('./_defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

},{"./_defined":39,"./_to-integer":124}],115:[function(require,module,exports){
// helper for String#{startsWith, endsWith, includes}
var isRegExp = require('./_is-regexp');
var defined = require('./_defined');

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};

},{"./_defined":39,"./_is-regexp":63}],116:[function(require,module,exports){
var $export = require('./_export');
var fails = require('./_fails');
var defined = require('./_defined');
var quot = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
var createHTML = function (string, tag, attribute, value) {
  var S = String(defined(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};
module.exports = function (NAME, exec) {
  var O = {};
  O[NAME] = exec(createHTML);
  $export($export.P + $export.F * fails(function () {
    var test = ''[NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  }), 'String', O);
};

},{"./_defined":39,"./_export":44,"./_fails":46}],117:[function(require,module,exports){
// https://github.com/tc39/proposal-string-pad-start-end
var toLength = require('./_to-length');
var repeat = require('./_string-repeat');
var defined = require('./_defined');

module.exports = function (that, maxLength, fillString, left) {
  var S = String(defined(that));
  var stringLength = S.length;
  var fillStr = fillString === undefined ? ' ' : String(fillString);
  var intMaxLength = toLength(maxLength);
  if (intMaxLength <= stringLength || fillStr == '') return S;
  var fillLen = intMaxLength - stringLength;
  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};

},{"./_defined":39,"./_string-repeat":118,"./_to-length":126}],118:[function(require,module,exports){
'use strict';
var toInteger = require('./_to-integer');
var defined = require('./_defined');

module.exports = function repeat(count) {
  var str = String(defined(this));
  var res = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
  return res;
};

},{"./_defined":39,"./_to-integer":124}],119:[function(require,module,exports){
var $export = require('./_export');
var defined = require('./_defined');
var fails = require('./_fails');
var spaces = require('./_string-ws');
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;

},{"./_defined":39,"./_export":44,"./_fails":46,"./_string-ws":120}],120:[function(require,module,exports){
module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

},{}],121:[function(require,module,exports){
var ctx = require('./_ctx');
var invoke = require('./_invoke');
var html = require('./_html');
var cel = require('./_dom-create');
var global = require('./_global');
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (require('./_cof')(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};

},{"./_cof":29,"./_ctx":36,"./_dom-create":41,"./_global":51,"./_html":54,"./_invoke":57}],122:[function(require,module,exports){
var toInteger = require('./_to-integer');
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

},{"./_to-integer":124}],123:[function(require,module,exports){
// https://tc39.github.io/ecma262/#sec-toindex
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length!');
  return length;
};

},{"./_to-integer":124,"./_to-length":126}],124:[function(require,module,exports){
// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

},{}],125:[function(require,module,exports){
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject');
var defined = require('./_defined');
module.exports = function (it) {
  return IObject(defined(it));
};

},{"./_defined":39,"./_iobject":58}],126:[function(require,module,exports){
// 7.1.15 ToLength
var toInteger = require('./_to-integer');
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

},{"./_to-integer":124}],127:[function(require,module,exports){
// 7.1.13 ToObject(argument)
var defined = require('./_defined');
module.exports = function (it) {
  return Object(defined(it));
};

},{"./_defined":39}],128:[function(require,module,exports){
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

},{"./_is-object":62}],129:[function(require,module,exports){
'use strict';
if (require('./_descriptors')) {
  var LIBRARY = require('./_library');
  var global = require('./_global');
  var fails = require('./_fails');
  var $export = require('./_export');
  var $typed = require('./_typed');
  var $buffer = require('./_typed-buffer');
  var ctx = require('./_ctx');
  var anInstance = require('./_an-instance');
  var propertyDesc = require('./_property-desc');
  var hide = require('./_hide');
  var redefineAll = require('./_redefine-all');
  var toInteger = require('./_to-integer');
  var toLength = require('./_to-length');
  var toIndex = require('./_to-index');
  var toAbsoluteIndex = require('./_to-absolute-index');
  var toPrimitive = require('./_to-primitive');
  var has = require('./_has');
  var classof = require('./_classof');
  var isObject = require('./_is-object');
  var toObject = require('./_to-object');
  var isArrayIter = require('./_is-array-iter');
  var create = require('./_object-create');
  var getPrototypeOf = require('./_object-gpo');
  var gOPN = require('./_object-gopn').f;
  var getIterFn = require('./core.get-iterator-method');
  var uid = require('./_uid');
  var wks = require('./_wks');
  var createArrayMethod = require('./_array-methods');
  var createArrayIncludes = require('./_array-includes');
  var speciesConstructor = require('./_species-constructor');
  var ArrayIterators = require('./es6.array.iterator');
  var Iterators = require('./_iterators');
  var $iterDetect = require('./_iter-detect');
  var setSpecies = require('./_set-species');
  var arrayFill = require('./_array-fill');
  var arrayCopyWithin = require('./_array-copy-within');
  var $DP = require('./_object-dp');
  var $GOPD = require('./_object-gopd');
  var dP = $DP.f;
  var gOPD = $GOPD.f;
  var RangeError = global.RangeError;
  var TypeError = global.TypeError;
  var Uint8Array = global.Uint8Array;
  var ARRAY_BUFFER = 'ArrayBuffer';
  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var PROTOTYPE = 'prototype';
  var ArrayProto = Array[PROTOTYPE];
  var $ArrayBuffer = $buffer.ArrayBuffer;
  var $DataView = $buffer.DataView;
  var arrayForEach = createArrayMethod(0);
  var arrayFilter = createArrayMethod(2);
  var arraySome = createArrayMethod(3);
  var arrayEvery = createArrayMethod(4);
  var arrayFind = createArrayMethod(5);
  var arrayFindIndex = createArrayMethod(6);
  var arrayIncludes = createArrayIncludes(true);
  var arrayIndexOf = createArrayIncludes(false);
  var arrayValues = ArrayIterators.values;
  var arrayKeys = ArrayIterators.keys;
  var arrayEntries = ArrayIterators.entries;
  var arrayLastIndexOf = ArrayProto.lastIndexOf;
  var arrayReduce = ArrayProto.reduce;
  var arrayReduceRight = ArrayProto.reduceRight;
  var arrayJoin = ArrayProto.join;
  var arraySort = ArrayProto.sort;
  var arraySlice = ArrayProto.slice;
  var arrayToString = ArrayProto.toString;
  var arrayToLocaleString = ArrayProto.toLocaleString;
  var ITERATOR = wks('iterator');
  var TAG = wks('toStringTag');
  var TYPED_CONSTRUCTOR = uid('typed_constructor');
  var DEF_CONSTRUCTOR = uid('def_constructor');
  var ALL_CONSTRUCTORS = $typed.CONSTR;
  var TYPED_ARRAY = $typed.TYPED;
  var VIEW = $typed.VIEW;
  var WRONG_LENGTH = 'Wrong length!';

  var $map = createArrayMethod(1, function (O, length) {
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });

  var LITTLE_ENDIAN = fails(function () {
    // eslint-disable-next-line no-undef
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });

  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
    new Uint8Array(1).set({});
  });

  var toOffset = function (it, BYTES) {
    var offset = toInteger(it);
    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function (it) {
    if (isObject(it) && TYPED_ARRAY in it) return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function (C, length) {
    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
      throw TypeError('It is not a typed array constructor!');
    } return new C(length);
  };

  var speciesFromList = function (O, list) {
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function (C, list) {
    var index = 0;
    var length = list.length;
    var result = allocate(C, length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var addGetter = function (it, key, internal) {
    dP(it, key, { get: function () { return this._d[internal]; } });
  };

  var $from = function from(source /* , mapfn, thisArg */) {
    var O = toObject(source);
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var iterFn = getIterFn(O);
    var i, length, values, result, step, iterator;
    if (iterFn != undefined && !isArrayIter(iterFn)) {
      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
        values.push(step.value);
      } O = values;
    }
    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $of = function of(/* ...items */) {
    var index = 0;
    var length = arguments.length;
    var result = allocate(this, length);
    while (length > index) result[index] = arguments[index++];
    return result;
  };

  // iOS Safari 6.x fails here
  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });

  var $toLocaleString = function toLocaleString() {
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start /* , end */) {
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn /* , thisArg */) {
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn /* , thisArg */) {
      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
        arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate /* , thisArg */) {
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate /* , thisArg */) {
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn /* , thisArg */) {
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement /* , fromIndex */) {
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement /* , fromIndex */) {
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator) { // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn /* , thisArg */) {
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse() {
      var that = this;
      var length = validate(that).length;
      var middle = Math.floor(length / 2);
      var index = 0;
      var value;
      while (index < middle) {
        value = that[index];
        that[index++] = that[--length];
        that[length] = value;
      } return that;
    },
    some: function some(callbackfn /* , thisArg */) {
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn) {
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end) {
      var O = validate(this);
      var length = O.length;
      var $begin = toAbsoluteIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
        O.buffer,
        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
      );
    }
  };

  var $slice = function slice(start, end) {
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike /* , offset */) {
    validate(this);
    var offset = toOffset(arguments[1], 1);
    var length = this.length;
    var src = toObject(arrayLike);
    var len = toLength(src.length);
    var index = 0;
    if (len + offset > length) throw RangeError(WRONG_LENGTH);
    while (index < len) this[offset + index] = src[index++];
  };

  var $iterators = {
    entries: function entries() {
      return arrayEntries.call(validate(this));
    },
    keys: function keys() {
      return arrayKeys.call(validate(this));
    },
    values: function values() {
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function (target, key) {
    return isObject(target)
      && target[TYPED_ARRAY]
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };
  var $getDesc = function getOwnPropertyDescriptor(target, key) {
    return isTAIndex(target, key = toPrimitive(key, true))
      ? propertyDesc(2, target[key])
      : gOPD(target, key);
  };
  var $setDesc = function defineProperty(target, key, desc) {
    if (isTAIndex(target, key = toPrimitive(key, true))
      && isObject(desc)
      && has(desc, 'value')
      && !has(desc, 'get')
      && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable
      && (!has(desc, 'writable') || desc.writable)
      && (!has(desc, 'enumerable') || desc.enumerable)
    ) {
      target[key] = desc.value;
      return target;
    } return dP(target, key, desc);
  };

  if (!ALL_CONSTRUCTORS) {
    $GOPD.f = $getDesc;
    $DP.f = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty: $setDesc
  });

  if (fails(function () { arrayToString.call({}); })) {
    arrayToString = arrayToLocaleString = function toString() {
      return arrayJoin.call(this);
    };
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice: $slice,
    set: $set,
    constructor: function () { /* noop */ },
    toString: arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function () { return this[TYPED_ARRAY]; }
  });

  // eslint-disable-next-line max-statements
  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
    CLAMPED = !!CLAMPED;
    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + KEY;
    var SETTER = 'set' + KEY;
    var TypedArray = global[NAME];
    var Base = TypedArray || {};
    var TAC = TypedArray && getPrototypeOf(TypedArray);
    var FORCED = !TypedArray || !$typed.ABV;
    var O = {};
    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
    var getter = function (that, index) {
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };
    var setter = function (that, index, value) {
      var data = that._d;
      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };
    var addElement = function (that, index) {
      dP(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if (FORCED) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME, '_d');
        var index = 0;
        var offset = 0;
        var buffer, byteLength, length, klass;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new $ArrayBuffer(byteLength);
        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (TYPED_ARRAY in data) {
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }
        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if (!fails(function () {
      TypedArray(1);
    }) || !fails(function () {
      new TypedArray(-1); // eslint-disable-line no-new
    }) || !$iterDetect(function (iter) {
      new TypedArray(); // eslint-disable-line no-new
      new TypedArray(null); // eslint-disable-line no-new
      new TypedArray(1.5); // eslint-disable-line no-new
      new TypedArray(iter); // eslint-disable-line no-new
    }, true)) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME);
        var klass;
        // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645
        if (!isObject(data)) return new Base(toIndex(data));
        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          return $length !== undefined
            ? new Base(data, toOffset($offset, BYTES), $length)
            : $offset !== undefined
              ? new Base(data, toOffset($offset, BYTES))
              : new Base(data);
        }
        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
    }
    var $nativeIterator = TypedArrayPrototype[ITERATOR];
    var CORRECT_ITER_NAME = !!$nativeIterator
      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
    var $iterator = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
      dP(TypedArrayPrototype, TAG, {
        get: function () { return NAME; }
      });
    }

    O[NAME] = TypedArray;

    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES
    });

    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
      from: $from,
      of: $of
    });

    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

    $export($export.P, NAME, proto);

    setSpecies(NAME);

    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

    $export($export.P + $export.F * fails(function () {
      new TypedArray(1).slice();
    }), NAME, { slice: $slice });

    $export($export.P + $export.F * (fails(function () {
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
    }) || !fails(function () {
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, { toLocaleString: $toLocaleString });

    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function () { /* empty */ };

},{"./_an-instance":17,"./_array-copy-within":19,"./_array-fill":20,"./_array-includes":22,"./_array-methods":23,"./_classof":28,"./_ctx":36,"./_descriptors":40,"./_export":44,"./_fails":46,"./_global":51,"./_has":52,"./_hide":53,"./_is-array-iter":59,"./_is-object":62,"./_iter-detect":67,"./_iterators":69,"./_library":70,"./_object-create":81,"./_object-dp":82,"./_object-gopd":85,"./_object-gopn":87,"./_object-gpo":89,"./_property-desc":100,"./_redefine-all":101,"./_set-species":108,"./_species-constructor":112,"./_to-absolute-index":122,"./_to-index":123,"./_to-integer":124,"./_to-length":126,"./_to-object":127,"./_to-primitive":128,"./_typed":131,"./_typed-buffer":130,"./_uid":132,"./_wks":137,"./core.get-iterator-method":138,"./es6.array.iterator":150}],130:[function(require,module,exports){
'use strict';
var global = require('./_global');
var DESCRIPTORS = require('./_descriptors');
var LIBRARY = require('./_library');
var $typed = require('./_typed');
var hide = require('./_hide');
var redefineAll = require('./_redefine-all');
var fails = require('./_fails');
var anInstance = require('./_an-instance');
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
var toIndex = require('./_to-index');
var gOPN = require('./_object-gopn').f;
var dP = require('./_object-dp').f;
var arrayFill = require('./_array-fill');
var setToStringTag = require('./_set-to-string-tag');
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length!';
var WRONG_INDEX = 'Wrong index!';
var $ArrayBuffer = global[ARRAY_BUFFER];
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var Infinity = global.Infinity;
var BaseBuffer = $ArrayBuffer;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;
var BUFFER = 'buffer';
var BYTE_LENGTH = 'byteLength';
var BYTE_OFFSET = 'byteOffset';
var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
function packIEEE754(value, mLen, nBytes) {
  var buffer = new Array(nBytes);
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var i = 0;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  var e, m, c;
  value = abs(value);
  // eslint-disable-next-line no-self-compare
  if (value != value || value === Infinity) {
    // eslint-disable-next-line no-self-compare
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);
    if (value * (c = pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }
    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }
  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
  e = e << mLen | m;
  eLen += mLen;
  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
  buffer[--i] |= s * 128;
  return buffer;
}
function unpackIEEE754(buffer, mLen, nBytes) {
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = eLen - 7;
  var i = nBytes - 1;
  var s = buffer[i--];
  var e = s & 127;
  var m;
  s >>= 7;
  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  } return (s ? -1 : 1) * m * pow(2, e - mLen);
}

function unpackI32(bytes) {
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
}
function packI8(it) {
  return [it & 0xff];
}
function packI16(it) {
  return [it & 0xff, it >> 8 & 0xff];
}
function packI32(it) {
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
}
function packF64(it) {
  return packIEEE754(it, 52, 8);
}
function packF32(it) {
  return packIEEE754(it, 23, 4);
}

function addGetter(C, key, internal) {
  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
}

function get(view, bytes, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
}
function set(view, bytes, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = conversion(+value);
  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
}

if (!$typed.ABV) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    this._b = arrayFill.call(new Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH];
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if (!fails(function () {
    $ArrayBuffer(1);
  }) || !fails(function () {
    new $ArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new $ArrayBuffer(); // eslint-disable-line no-new
    new $ArrayBuffer(1.5); // eslint-disable-line no-new
    new $ArrayBuffer(NaN); // eslint-disable-line no-new
    return $ArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new BaseBuffer(toIndex(length));
    };
    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
    }
    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var view = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;

},{"./_an-instance":17,"./_array-fill":20,"./_descriptors":40,"./_fails":46,"./_global":51,"./_hide":53,"./_library":70,"./_object-dp":82,"./_object-gopn":87,"./_redefine-all":101,"./_set-to-string-tag":109,"./_to-index":123,"./_to-integer":124,"./_to-length":126,"./_typed":131}],131:[function(require,module,exports){
var global = require('./_global');
var hide = require('./_hide');
var uid = require('./_uid');
var TYPED = uid('typed_array');
var VIEW = uid('view');
var ABV = !!(global.ArrayBuffer && global.DataView);
var CONSTR = ABV;
var i = 0;
var l = 9;
var Typed;

var TypedArrayConstructors = (
  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
).split(',');

while (i < l) {
  if (Typed = global[TypedArrayConstructors[i++]]) {
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV: ABV,
  CONSTR: CONSTR,
  TYPED: TYPED,
  VIEW: VIEW
};

},{"./_global":51,"./_hide":53,"./_uid":132}],132:[function(require,module,exports){
var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

},{}],133:[function(require,module,exports){
var global = require('./_global');
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';

},{"./_global":51}],134:[function(require,module,exports){
var isObject = require('./_is-object');
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};

},{"./_is-object":62}],135:[function(require,module,exports){
var global = require('./_global');
var core = require('./_core');
var LIBRARY = require('./_library');
var wksExt = require('./_wks-ext');
var defineProperty = require('./_object-dp').f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};

},{"./_core":34,"./_global":51,"./_library":70,"./_object-dp":82,"./_wks-ext":136}],136:[function(require,module,exports){
exports.f = require('./_wks');

},{"./_wks":137}],137:[function(require,module,exports){
var store = require('./_shared')('wks');
var uid = require('./_uid');
var Symbol = require('./_global').Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

},{"./_global":51,"./_shared":111,"./_uid":132}],138:[function(require,module,exports){
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

},{"./_classof":28,"./_core":34,"./_iterators":69,"./_wks":137}],139:[function(require,module,exports){
// https://github.com/benjamingr/RexExp.escape
var $export = require('./_export');
var $re = require('./_replacer')(/[\\^$*+?.()|[\]{}]/g, '\\$&');

$export($export.S, 'RegExp', { escape: function escape(it) { return $re(it); } });

},{"./_export":44,"./_replacer":103}],140:[function(require,module,exports){
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
var $export = require('./_export');

$export($export.P, 'Array', { copyWithin: require('./_array-copy-within') });

require('./_add-to-unscopables')('copyWithin');

},{"./_add-to-unscopables":16,"./_array-copy-within":19,"./_export":44}],141:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var $every = require('./_array-methods')(4);

$export($export.P + $export.F * !require('./_strict-method')([].every, true), 'Array', {
  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
  every: function every(callbackfn /* , thisArg */) {
    return $every(this, callbackfn, arguments[1]);
  }
});

},{"./_array-methods":23,"./_export":44,"./_strict-method":113}],142:[function(require,module,exports){
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = require('./_export');

$export($export.P, 'Array', { fill: require('./_array-fill') });

require('./_add-to-unscopables')('fill');

},{"./_add-to-unscopables":16,"./_array-fill":20,"./_export":44}],143:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var $filter = require('./_array-methods')(2);

$export($export.P + $export.F * !require('./_strict-method')([].filter, true), 'Array', {
  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments[1]);
  }
});

},{"./_array-methods":23,"./_export":44,"./_strict-method":113}],144:[function(require,module,exports){
'use strict';
// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = require('./_export');
var $find = require('./_array-methods')(6);
var KEY = 'findIndex';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
require('./_add-to-unscopables')(KEY);

},{"./_add-to-unscopables":16,"./_array-methods":23,"./_export":44}],145:[function(require,module,exports){
'use strict';
// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = require('./_export');
var $find = require('./_array-methods')(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
require('./_add-to-unscopables')(KEY);

},{"./_add-to-unscopables":16,"./_array-methods":23,"./_export":44}],146:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var $forEach = require('./_array-methods')(0);
var STRICT = require('./_strict-method')([].forEach, true);

$export($export.P + $export.F * !STRICT, 'Array', {
  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
  forEach: function forEach(callbackfn /* , thisArg */) {
    return $forEach(this, callbackfn, arguments[1]);
  }
});

},{"./_array-methods":23,"./_export":44,"./_strict-method":113}],147:[function(require,module,exports){
'use strict';
var ctx = require('./_ctx');
var $export = require('./_export');
var toObject = require('./_to-object');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var toLength = require('./_to-length');
var createProperty = require('./_create-property');
var getIterFn = require('./core.get-iterator-method');

$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});

},{"./_create-property":35,"./_ctx":36,"./_export":44,"./_is-array-iter":59,"./_iter-call":64,"./_iter-detect":67,"./_to-length":126,"./_to-object":127,"./core.get-iterator-method":138}],148:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var $indexOf = require('./_array-includes')(false);
var $native = [].indexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? $native.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments[1]);
  }
});

},{"./_array-includes":22,"./_export":44,"./_strict-method":113}],149:[function(require,module,exports){
// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = require('./_export');

$export($export.S, 'Array', { isArray: require('./_is-array') });

},{"./_export":44,"./_is-array":60}],150:[function(require,module,exports){
'use strict';
var addToUnscopables = require('./_add-to-unscopables');
var step = require('./_iter-step');
var Iterators = require('./_iterators');
var toIObject = require('./_to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

},{"./_add-to-unscopables":16,"./_iter-define":66,"./_iter-step":68,"./_iterators":69,"./_to-iobject":125}],151:[function(require,module,exports){
'use strict';
// 22.1.3.13 Array.prototype.join(separator)
var $export = require('./_export');
var toIObject = require('./_to-iobject');
var arrayJoin = [].join;

// fallback for not array-like strings
$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {
  join: function join(separator) {
    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
  }
});

},{"./_export":44,"./_iobject":58,"./_strict-method":113,"./_to-iobject":125}],152:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var toIObject = require('./_to-iobject');
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
var $native = [].lastIndexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
    // convert -0 to +0
    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
    var O = toIObject(this);
    var length = toLength(O.length);
    var index = length - 1;
    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
    if (index < 0) index = length + index;
    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
    return -1;
  }
});

},{"./_export":44,"./_strict-method":113,"./_to-integer":124,"./_to-iobject":125,"./_to-length":126}],153:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var $map = require('./_array-methods')(1);

$export($export.P + $export.F * !require('./_strict-method')([].map, true), 'Array', {
  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments[1]);
  }
});

},{"./_array-methods":23,"./_export":44,"./_strict-method":113}],154:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var createProperty = require('./_create-property');

// WebKit Array.of isn't generic
$export($export.S + $export.F * require('./_fails')(function () {
  function F() { /* empty */ }
  return !(Array.of.call(F) instanceof F);
}), 'Array', {
  // 22.1.2.3 Array.of( ...items)
  of: function of(/* ...args */) {
    var index = 0;
    var aLen = arguments.length;
    var result = new (typeof this == 'function' ? this : Array)(aLen);
    while (aLen > index) createProperty(result, index, arguments[index++]);
    result.length = aLen;
    return result;
  }
});

},{"./_create-property":35,"./_export":44,"./_fails":46}],155:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var $reduce = require('./_array-reduce');

$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {
  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
  }
});

},{"./_array-reduce":24,"./_export":44,"./_strict-method":113}],156:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var $reduce = require('./_array-reduce');

$export($export.P + $export.F * !require('./_strict-method')([].reduce, true), 'Array', {
  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
  reduce: function reduce(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
  }
});

},{"./_array-reduce":24,"./_export":44,"./_strict-method":113}],157:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var html = require('./_html');
var cof = require('./_cof');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');
var arraySlice = [].slice;

// fallback for not array-like ES3 strings and DOM objects
$export($export.P + $export.F * require('./_fails')(function () {
  if (html) arraySlice.call(html);
}), 'Array', {
  slice: function slice(begin, end) {
    var len = toLength(this.length);
    var klass = cof(this);
    end = end === undefined ? len : end;
    if (klass == 'Array') return arraySlice.call(this, begin, end);
    var start = toAbsoluteIndex(begin, len);
    var upTo = toAbsoluteIndex(end, len);
    var size = toLength(upTo - start);
    var cloned = new Array(size);
    var i = 0;
    for (; i < size; i++) cloned[i] = klass == 'String'
      ? this.charAt(start + i)
      : this[start + i];
    return cloned;
  }
});

},{"./_cof":29,"./_export":44,"./_fails":46,"./_html":54,"./_to-absolute-index":122,"./_to-length":126}],158:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var $some = require('./_array-methods')(3);

$export($export.P + $export.F * !require('./_strict-method')([].some, true), 'Array', {
  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments[1]);
  }
});

},{"./_array-methods":23,"./_export":44,"./_strict-method":113}],159:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var aFunction = require('./_a-function');
var toObject = require('./_to-object');
var fails = require('./_fails');
var $sort = [].sort;
var test = [1, 2, 3];

$export($export.P + $export.F * (fails(function () {
  // IE8-
  test.sort(undefined);
}) || !fails(function () {
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !require('./_strict-method')($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});

},{"./_a-function":14,"./_export":44,"./_fails":46,"./_strict-method":113,"./_to-object":127}],160:[function(require,module,exports){
require('./_set-species')('Array');

},{"./_set-species":108}],161:[function(require,module,exports){
// 20.3.3.1 / 15.9.4.4 Date.now()
var $export = require('./_export');

$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });

},{"./_export":44}],162:[function(require,module,exports){
// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var $export = require('./_export');
var toISOString = require('./_date-to-iso-string');

// PhantomJS / old WebKit has a broken implementations
$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {
  toISOString: toISOString
});

},{"./_date-to-iso-string":37,"./_export":44}],163:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var toPrimitive = require('./_to-primitive');

$export($export.P + $export.F * require('./_fails')(function () {
  return new Date(NaN).toJSON() !== null
    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
}), 'Date', {
  // eslint-disable-next-line no-unused-vars
  toJSON: function toJSON(key) {
    var O = toObject(this);
    var pv = toPrimitive(O);
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});

},{"./_export":44,"./_fails":46,"./_to-object":127,"./_to-primitive":128}],164:[function(require,module,exports){
var TO_PRIMITIVE = require('./_wks')('toPrimitive');
var proto = Date.prototype;

if (!(TO_PRIMITIVE in proto)) require('./_hide')(proto, TO_PRIMITIVE, require('./_date-to-primitive'));

},{"./_date-to-primitive":38,"./_hide":53,"./_wks":137}],165:[function(require,module,exports){
var DateProto = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var $toString = DateProto[TO_STRING];
var getTime = DateProto.getTime;
if (new Date(NaN) + '' != INVALID_DATE) {
  require('./_redefine')(DateProto, TO_STRING, function toString() {
    var value = getTime.call(this);
    // eslint-disable-next-line no-self-compare
    return value === value ? $toString.call(this) : INVALID_DATE;
  });
}

},{"./_redefine":102}],166:[function(require,module,exports){
// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
var $export = require('./_export');

$export($export.P, 'Function', { bind: require('./_bind') });

},{"./_bind":27,"./_export":44}],167:[function(require,module,exports){
'use strict';
var isObject = require('./_is-object');
var getPrototypeOf = require('./_object-gpo');
var HAS_INSTANCE = require('./_wks')('hasInstance');
var FunctionProto = Function.prototype;
// 19.2.3.6 Function.prototype[@@hasInstance](V)
if (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {
  if (typeof this != 'function' || !isObject(O)) return false;
  if (!isObject(this.prototype)) return O instanceof this;
  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
  return false;
} });

},{"./_is-object":62,"./_object-dp":82,"./_object-gpo":89,"./_wks":137}],168:[function(require,module,exports){
var dP = require('./_object-dp').f;
var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// 19.2.4.2 name
NAME in FProto || require('./_descriptors') && dP(FProto, NAME, {
  configurable: true,
  get: function () {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});

},{"./_descriptors":40,"./_object-dp":82}],169:[function(require,module,exports){
'use strict';
var strong = require('./_collection-strong');
var validate = require('./_validate-collection');
var MAP = 'Map';

// 23.1 Map Objects
module.exports = require('./_collection')(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);

},{"./_collection":33,"./_collection-strong":30,"./_validate-collection":134}],170:[function(require,module,exports){
// 20.2.2.3 Math.acosh(x)
var $export = require('./_export');
var log1p = require('./_math-log1p');
var sqrt = Math.sqrt;
var $acosh = Math.acosh;

$export($export.S + $export.F * !($acosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  && Math.floor($acosh(Number.MAX_VALUE)) == 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN
  && $acosh(Infinity) == Infinity
), 'Math', {
  acosh: function acosh(x) {
    return (x = +x) < 1 ? NaN : x > 94906265.62425156
      ? Math.log(x) + Math.LN2
      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});

},{"./_export":44,"./_math-log1p":73}],171:[function(require,module,exports){
// 20.2.2.5 Math.asinh(x)
var $export = require('./_export');
var $asinh = Math.asinh;

function asinh(x) {
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
}

// Tor Browser bug: Math.asinh(0) -> -0
$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });

},{"./_export":44}],172:[function(require,module,exports){
// 20.2.2.7 Math.atanh(x)
var $export = require('./_export');
var $atanh = Math.atanh;

// Tor Browser bug: Math.atanh(-0) -> 0
$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
  atanh: function atanh(x) {
    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
  }
});

},{"./_export":44}],173:[function(require,module,exports){
// 20.2.2.9 Math.cbrt(x)
var $export = require('./_export');
var sign = require('./_math-sign');

$export($export.S, 'Math', {
  cbrt: function cbrt(x) {
    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
  }
});

},{"./_export":44,"./_math-sign":75}],174:[function(require,module,exports){
// 20.2.2.11 Math.clz32(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  clz32: function clz32(x) {
    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
  }
});

},{"./_export":44}],175:[function(require,module,exports){
// 20.2.2.12 Math.cosh(x)
var $export = require('./_export');
var exp = Math.exp;

$export($export.S, 'Math', {
  cosh: function cosh(x) {
    return (exp(x = +x) + exp(-x)) / 2;
  }
});

},{"./_export":44}],176:[function(require,module,exports){
// 20.2.2.14 Math.expm1(x)
var $export = require('./_export');
var $expm1 = require('./_math-expm1');

$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });

},{"./_export":44,"./_math-expm1":71}],177:[function(require,module,exports){
// 20.2.2.16 Math.fround(x)
var $export = require('./_export');

$export($export.S, 'Math', { fround: require('./_math-fround') });

},{"./_export":44,"./_math-fround":72}],178:[function(require,module,exports){
// 20.2.2.17 Math.hypot([value1[, value2[, â€¦ ]]])
var $export = require('./_export');
var abs = Math.abs;

$export($export.S, 'Math', {
  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});

},{"./_export":44}],179:[function(require,module,exports){
// 20.2.2.18 Math.imul(x, y)
var $export = require('./_export');
var $imul = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
$export($export.S + $export.F * require('./_fails')(function () {
  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
}), 'Math', {
  imul: function imul(x, y) {
    var UINT16 = 0xffff;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});

},{"./_export":44,"./_fails":46}],180:[function(require,module,exports){
// 20.2.2.21 Math.log10(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  log10: function log10(x) {
    return Math.log(x) * Math.LOG10E;
  }
});

},{"./_export":44}],181:[function(require,module,exports){
// 20.2.2.20 Math.log1p(x)
var $export = require('./_export');

$export($export.S, 'Math', { log1p: require('./_math-log1p') });

},{"./_export":44,"./_math-log1p":73}],182:[function(require,module,exports){
// 20.2.2.22 Math.log2(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  log2: function log2(x) {
    return Math.log(x) / Math.LN2;
  }
});

},{"./_export":44}],183:[function(require,module,exports){
// 20.2.2.28 Math.sign(x)
var $export = require('./_export');

$export($export.S, 'Math', { sign: require('./_math-sign') });

},{"./_export":44,"./_math-sign":75}],184:[function(require,module,exports){
// 20.2.2.30 Math.sinh(x)
var $export = require('./_export');
var expm1 = require('./_math-expm1');
var exp = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
$export($export.S + $export.F * require('./_fails')(function () {
  return !Math.sinh(-2e-17) != -2e-17;
}), 'Math', {
  sinh: function sinh(x) {
    return Math.abs(x = +x) < 1
      ? (expm1(x) - expm1(-x)) / 2
      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
  }
});

},{"./_export":44,"./_fails":46,"./_math-expm1":71}],185:[function(require,module,exports){
// 20.2.2.33 Math.tanh(x)
var $export = require('./_export');
var expm1 = require('./_math-expm1');
var exp = Math.exp;

$export($export.S, 'Math', {
  tanh: function tanh(x) {
    var a = expm1(x = +x);
    var b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});

},{"./_export":44,"./_math-expm1":71}],186:[function(require,module,exports){
// 20.2.2.34 Math.trunc(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  trunc: function trunc(it) {
    return (it > 0 ? Math.floor : Math.ceil)(it);
  }
});

},{"./_export":44}],187:[function(require,module,exports){
'use strict';
var global = require('./_global');
var has = require('./_has');
var cof = require('./_cof');
var inheritIfRequired = require('./_inherit-if-required');
var toPrimitive = require('./_to-primitive');
var fails = require('./_fails');
var gOPN = require('./_object-gopn').f;
var gOPD = require('./_object-gopd').f;
var dP = require('./_object-dp').f;
var $trim = require('./_string-trim').trim;
var NUMBER = 'Number';
var $Number = global[NUMBER];
var Base = $Number;
var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
var BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default: return +it;
      }
      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for (var keys = require('./_descriptors') ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(Base, key = keys[j]) && !has($Number, key)) {
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  require('./_redefine')(global, NUMBER, $Number);
}

},{"./_cof":29,"./_descriptors":40,"./_fails":46,"./_global":51,"./_has":52,"./_inherit-if-required":56,"./_object-create":81,"./_object-dp":82,"./_object-gopd":85,"./_object-gopn":87,"./_redefine":102,"./_string-trim":119,"./_to-primitive":128}],188:[function(require,module,exports){
// 20.1.2.1 Number.EPSILON
var $export = require('./_export');

$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });

},{"./_export":44}],189:[function(require,module,exports){
// 20.1.2.2 Number.isFinite(number)
var $export = require('./_export');
var _isFinite = require('./_global').isFinite;

$export($export.S, 'Number', {
  isFinite: function isFinite(it) {
    return typeof it == 'number' && _isFinite(it);
  }
});

},{"./_export":44,"./_global":51}],190:[function(require,module,exports){
// 20.1.2.3 Number.isInteger(number)
var $export = require('./_export');

$export($export.S, 'Number', { isInteger: require('./_is-integer') });

},{"./_export":44,"./_is-integer":61}],191:[function(require,module,exports){
// 20.1.2.4 Number.isNaN(number)
var $export = require('./_export');

$export($export.S, 'Number', {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare
    return number != number;
  }
});

},{"./_export":44}],192:[function(require,module,exports){
// 20.1.2.5 Number.isSafeInteger(number)
var $export = require('./_export');
var isInteger = require('./_is-integer');
var abs = Math.abs;

$export($export.S, 'Number', {
  isSafeInteger: function isSafeInteger(number) {
    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
  }
});

},{"./_export":44,"./_is-integer":61}],193:[function(require,module,exports){
// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = require('./_export');

$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });

},{"./_export":44}],194:[function(require,module,exports){
// 20.1.2.10 Number.MIN_SAFE_INTEGER
var $export = require('./_export');

$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });

},{"./_export":44}],195:[function(require,module,exports){
var $export = require('./_export');
var $parseFloat = require('./_parse-float');
// 20.1.2.12 Number.parseFloat(string)
$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });

},{"./_export":44,"./_parse-float":96}],196:[function(require,module,exports){
var $export = require('./_export');
var $parseInt = require('./_parse-int');
// 20.1.2.13 Number.parseInt(string, radix)
$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });

},{"./_export":44,"./_parse-int":97}],197:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var toInteger = require('./_to-integer');
var aNumberValue = require('./_a-number-value');
var repeat = require('./_string-repeat');
var $toFixed = 1.0.toFixed;
var floor = Math.floor;
var data = [0, 0, 0, 0, 0, 0];
var ERROR = 'Number.toFixed: incorrect invocation!';
var ZERO = '0';

var multiply = function (n, c) {
  var i = -1;
  var c2 = c;
  while (++i < 6) {
    c2 += n * data[i];
    data[i] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};
var divide = function (n) {
  var i = 6;
  var c = 0;
  while (--i >= 0) {
    c += data[i];
    data[i] = floor(c / n);
    c = (c % n) * 1e7;
  }
};
var numToString = function () {
  var i = 6;
  var s = '';
  while (--i >= 0) {
    if (s !== '' || i === 0 || data[i] !== 0) {
      var t = String(data[i]);
      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
    }
  } return s;
};
var pow = function (x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};
var log = function (x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  } return n;
};

$export($export.P + $export.F * (!!$toFixed && (
  0.00008.toFixed(3) !== '0.000' ||
  0.9.toFixed(0) !== '1' ||
  1.255.toFixed(2) !== '1.25' ||
  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
) || !require('./_fails')(function () {
  // V8 ~ Android 4.3-
  $toFixed.call({});
})), 'Number', {
  toFixed: function toFixed(fractionDigits) {
    var x = aNumberValue(this, ERROR);
    var f = toInteger(fractionDigits);
    var s = '';
    var m = ZERO;
    var e, z, j, k;
    if (f < 0 || f > 20) throw RangeError(ERROR);
    // eslint-disable-next-line no-self-compare
    if (x != x) return 'NaN';
    if (x <= -1e21 || x >= 1e21) return String(x);
    if (x < 0) {
      s = '-';
      x = -x;
    }
    if (x > 1e-21) {
      e = log(x * pow(2, 69, 1)) - 69;
      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(0, z);
        j = f;
        while (j >= 7) {
          multiply(1e7, 0);
          j -= 7;
        }
        multiply(pow(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(1 << 23);
          j -= 23;
        }
        divide(1 << j);
        multiply(1, 1);
        divide(2);
        m = numToString();
      } else {
        multiply(0, z);
        multiply(1 << -e, 0);
        m = numToString() + repeat.call(ZERO, f);
      }
    }
    if (f > 0) {
      k = m.length;
      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
    } else {
      m = s + m;
    } return m;
  }
});

},{"./_a-number-value":15,"./_export":44,"./_fails":46,"./_string-repeat":118,"./_to-integer":124}],198:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var $fails = require('./_fails');
var aNumberValue = require('./_a-number-value');
var $toPrecision = 1.0.toPrecision;

$export($export.P + $export.F * ($fails(function () {
  // IE7-
  return $toPrecision.call(1, undefined) !== '1';
}) || !$fails(function () {
  // V8 ~ Android 4.3-
  $toPrecision.call({});
})), 'Number', {
  toPrecision: function toPrecision(precision) {
    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
  }
});

},{"./_a-number-value":15,"./_export":44,"./_fails":46}],199:[function(require,module,exports){
// 19.1.3.1 Object.assign(target, source)
var $export = require('./_export');

$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });

},{"./_export":44,"./_object-assign":80}],200:[function(require,module,exports){
var $export = require('./_export');
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: require('./_object-create') });

},{"./_export":44,"./_object-create":81}],201:[function(require,module,exports){
var $export = require('./_export');
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });

},{"./_descriptors":40,"./_export":44,"./_object-dps":83}],202:[function(require,module,exports){
var $export = require('./_export');
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });

},{"./_descriptors":40,"./_export":44,"./_object-dp":82}],203:[function(require,module,exports){
// 19.1.2.5 Object.freeze(O)
var isObject = require('./_is-object');
var meta = require('./_meta').onFreeze;

require('./_object-sap')('freeze', function ($freeze) {
  return function freeze(it) {
    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
  };
});

},{"./_is-object":62,"./_meta":76,"./_object-sap":93}],204:[function(require,module,exports){
// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = require('./_to-iobject');
var $getOwnPropertyDescriptor = require('./_object-gopd').f;

require('./_object-sap')('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});

},{"./_object-gopd":85,"./_object-sap":93,"./_to-iobject":125}],205:[function(require,module,exports){
// 19.1.2.7 Object.getOwnPropertyNames(O)
require('./_object-sap')('getOwnPropertyNames', function () {
  return require('./_object-gopn-ext').f;
});

},{"./_object-gopn-ext":86,"./_object-sap":93}],206:[function(require,module,exports){
// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = require('./_to-object');
var $getPrototypeOf = require('./_object-gpo');

require('./_object-sap')('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});

},{"./_object-gpo":89,"./_object-sap":93,"./_to-object":127}],207:[function(require,module,exports){
// 19.1.2.11 Object.isExtensible(O)
var isObject = require('./_is-object');

require('./_object-sap')('isExtensible', function ($isExtensible) {
  return function isExtensible(it) {
    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
  };
});

},{"./_is-object":62,"./_object-sap":93}],208:[function(require,module,exports){
// 19.1.2.12 Object.isFrozen(O)
var isObject = require('./_is-object');

require('./_object-sap')('isFrozen', function ($isFrozen) {
  return function isFrozen(it) {
    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
  };
});

},{"./_is-object":62,"./_object-sap":93}],209:[function(require,module,exports){
// 19.1.2.13 Object.isSealed(O)
var isObject = require('./_is-object');

require('./_object-sap')('isSealed', function ($isSealed) {
  return function isSealed(it) {
    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
  };
});

},{"./_is-object":62,"./_object-sap":93}],210:[function(require,module,exports){
// 19.1.3.10 Object.is(value1, value2)
var $export = require('./_export');
$export($export.S, 'Object', { is: require('./_same-value') });

},{"./_export":44,"./_same-value":104}],211:[function(require,module,exports){
// 19.1.2.14 Object.keys(O)
var toObject = require('./_to-object');
var $keys = require('./_object-keys');

require('./_object-sap')('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});

},{"./_object-keys":91,"./_object-sap":93,"./_to-object":127}],212:[function(require,module,exports){
// 19.1.2.15 Object.preventExtensions(O)
var isObject = require('./_is-object');
var meta = require('./_meta').onFreeze;

require('./_object-sap')('preventExtensions', function ($preventExtensions) {
  return function preventExtensions(it) {
    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
  };
});

},{"./_is-object":62,"./_meta":76,"./_object-sap":93}],213:[function(require,module,exports){
// 19.1.2.17 Object.seal(O)
var isObject = require('./_is-object');
var meta = require('./_meta').onFreeze;

require('./_object-sap')('seal', function ($seal) {
  return function seal(it) {
    return $seal && isObject(it) ? $seal(meta(it)) : it;
  };
});

},{"./_is-object":62,"./_meta":76,"./_object-sap":93}],214:[function(require,module,exports){
// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = require('./_export');
$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });

},{"./_export":44,"./_set-proto":107}],215:[function(require,module,exports){
'use strict';
// 19.1.3.6 Object.prototype.toString()
var classof = require('./_classof');
var test = {};
test[require('./_wks')('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  require('./_redefine')(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}

},{"./_classof":28,"./_redefine":102,"./_wks":137}],216:[function(require,module,exports){
var $export = require('./_export');
var $parseFloat = require('./_parse-float');
// 18.2.4 parseFloat(string)
$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });

},{"./_export":44,"./_parse-float":96}],217:[function(require,module,exports){
var $export = require('./_export');
var $parseInt = require('./_parse-int');
// 18.2.5 parseInt(string, radix)
$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });

},{"./_export":44,"./_parse-int":97}],218:[function(require,module,exports){
'use strict';
var LIBRARY = require('./_library');
var global = require('./_global');
var ctx = require('./_ctx');
var classof = require('./_classof');
var $export = require('./_export');
var isObject = require('./_is-object');
var aFunction = require('./_a-function');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var speciesConstructor = require('./_species-constructor');
var task = require('./_task').set;
var microtask = require('./_microtask')();
var newPromiseCapabilityModule = require('./_new-promise-capability');
var perform = require('./_perform');
var promiseResolve = require('./_promise-resolve');
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = require('./_redefine-all')($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
require('./_set-to-string-tag')($Promise, PROMISE);
require('./_set-species')(PROMISE);
Wrapper = require('./_core')[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});

},{"./_a-function":14,"./_an-instance":17,"./_classof":28,"./_core":34,"./_ctx":36,"./_export":44,"./_for-of":50,"./_global":51,"./_is-object":62,"./_iter-detect":67,"./_library":70,"./_microtask":78,"./_new-promise-capability":79,"./_perform":98,"./_promise-resolve":99,"./_redefine-all":101,"./_set-species":108,"./_set-to-string-tag":109,"./_species-constructor":112,"./_task":121,"./_wks":137}],219:[function(require,module,exports){
// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
var $export = require('./_export');
var aFunction = require('./_a-function');
var anObject = require('./_an-object');
var rApply = (require('./_global').Reflect || {}).apply;
var fApply = Function.apply;
// MS Edge argumentsList argument is optional
$export($export.S + $export.F * !require('./_fails')(function () {
  rApply(function () { /* empty */ });
}), 'Reflect', {
  apply: function apply(target, thisArgument, argumentsList) {
    var T = aFunction(target);
    var L = anObject(argumentsList);
    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
  }
});

},{"./_a-function":14,"./_an-object":18,"./_export":44,"./_fails":46,"./_global":51}],220:[function(require,module,exports){
// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export = require('./_export');
var create = require('./_object-create');
var aFunction = require('./_a-function');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var fails = require('./_fails');
var bind = require('./_bind');
var rConstruct = (require('./_global').Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  rConstruct(function () { /* empty */ });
});

$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});

},{"./_a-function":14,"./_an-object":18,"./_bind":27,"./_export":44,"./_fails":46,"./_global":51,"./_is-object":62,"./_object-create":81}],221:[function(require,module,exports){
// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
var dP = require('./_object-dp');
var $export = require('./_export');
var anObject = require('./_an-object');
var toPrimitive = require('./_to-primitive');

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
$export($export.S + $export.F * require('./_fails')(function () {
  // eslint-disable-next-line no-undef
  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
}), 'Reflect', {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject(target);
    propertyKey = toPrimitive(propertyKey, true);
    anObject(attributes);
    try {
      dP.f(target, propertyKey, attributes);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_an-object":18,"./_export":44,"./_fails":46,"./_object-dp":82,"./_to-primitive":128}],222:[function(require,module,exports){
// 26.1.4 Reflect.deleteProperty(target, propertyKey)
var $export = require('./_export');
var gOPD = require('./_object-gopd').f;
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var desc = gOPD(anObject(target), propertyKey);
    return desc && !desc.configurable ? false : delete target[propertyKey];
  }
});

},{"./_an-object":18,"./_export":44,"./_object-gopd":85}],223:[function(require,module,exports){
'use strict';
// 26.1.5 Reflect.enumerate(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var Enumerate = function (iterated) {
  this._t = anObject(iterated); // target
  this._i = 0;                  // next index
  var keys = this._k = [];      // keys
  var key;
  for (key in iterated) keys.push(key);
};
require('./_iter-create')(Enumerate, 'Object', function () {
  var that = this;
  var keys = that._k;
  var key;
  do {
    if (that._i >= keys.length) return { value: undefined, done: true };
  } while (!((key = keys[that._i++]) in that._t));
  return { value: key, done: false };
});

$export($export.S, 'Reflect', {
  enumerate: function enumerate(target) {
    return new Enumerate(target);
  }
});

},{"./_an-object":18,"./_export":44,"./_iter-create":65}],224:[function(require,module,exports){
// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
var gOPD = require('./_object-gopd');
var $export = require('./_export');
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return gOPD.f(anObject(target), propertyKey);
  }
});

},{"./_an-object":18,"./_export":44,"./_object-gopd":85}],225:[function(require,module,exports){
// 26.1.8 Reflect.getPrototypeOf(target)
var $export = require('./_export');
var getProto = require('./_object-gpo');
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  getPrototypeOf: function getPrototypeOf(target) {
    return getProto(anObject(target));
  }
});

},{"./_an-object":18,"./_export":44,"./_object-gpo":89}],226:[function(require,module,exports){
// 26.1.6 Reflect.get(target, propertyKey [, receiver])
var gOPD = require('./_object-gopd');
var getPrototypeOf = require('./_object-gpo');
var has = require('./_has');
var $export = require('./_export');
var isObject = require('./_is-object');
var anObject = require('./_an-object');

function get(target, propertyKey /* , receiver */) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var desc, proto;
  if (anObject(target) === receiver) return target[propertyKey];
  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
    ? desc.value
    : desc.get !== undefined
      ? desc.get.call(receiver)
      : undefined;
  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
}

$export($export.S, 'Reflect', { get: get });

},{"./_an-object":18,"./_export":44,"./_has":52,"./_is-object":62,"./_object-gopd":85,"./_object-gpo":89}],227:[function(require,module,exports){
// 26.1.9 Reflect.has(target, propertyKey)
var $export = require('./_export');

$export($export.S, 'Reflect', {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});

},{"./_export":44}],228:[function(require,module,exports){
// 26.1.10 Reflect.isExtensible(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var $isExtensible = Object.isExtensible;

$export($export.S, 'Reflect', {
  isExtensible: function isExtensible(target) {
    anObject(target);
    return $isExtensible ? $isExtensible(target) : true;
  }
});

},{"./_an-object":18,"./_export":44}],229:[function(require,module,exports){
// 26.1.11 Reflect.ownKeys(target)
var $export = require('./_export');

$export($export.S, 'Reflect', { ownKeys: require('./_own-keys') });

},{"./_export":44,"./_own-keys":95}],230:[function(require,module,exports){
// 26.1.12 Reflect.preventExtensions(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var $preventExtensions = Object.preventExtensions;

$export($export.S, 'Reflect', {
  preventExtensions: function preventExtensions(target) {
    anObject(target);
    try {
      if ($preventExtensions) $preventExtensions(target);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_an-object":18,"./_export":44}],231:[function(require,module,exports){
// 26.1.14 Reflect.setPrototypeOf(target, proto)
var $export = require('./_export');
var setProto = require('./_set-proto');

if (setProto) $export($export.S, 'Reflect', {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    setProto.check(target, proto);
    try {
      setProto.set(target, proto);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_export":44,"./_set-proto":107}],232:[function(require,module,exports){
// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
var dP = require('./_object-dp');
var gOPD = require('./_object-gopd');
var getPrototypeOf = require('./_object-gpo');
var has = require('./_has');
var $export = require('./_export');
var createDesc = require('./_property-desc');
var anObject = require('./_an-object');
var isObject = require('./_is-object');

function set(target, propertyKey, V /* , receiver */) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDesc = gOPD.f(anObject(target), propertyKey);
  var existingDescriptor, proto;
  if (!ownDesc) {
    if (isObject(proto = getPrototypeOf(target))) {
      return set(proto, propertyKey, V, receiver);
    }
    ownDesc = createDesc(0);
  }
  if (has(ownDesc, 'value')) {
    if (ownDesc.writable === false || !isObject(receiver)) return false;
    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      dP.f(receiver, propertyKey, existingDescriptor);
    } else dP.f(receiver, propertyKey, createDesc(0, V));
    return true;
  }
  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
}

$export($export.S, 'Reflect', { set: set });

},{"./_an-object":18,"./_export":44,"./_has":52,"./_is-object":62,"./_object-dp":82,"./_object-gopd":85,"./_object-gpo":89,"./_property-desc":100}],233:[function(require,module,exports){
var global = require('./_global');
var inheritIfRequired = require('./_inherit-if-required');
var dP = require('./_object-dp').f;
var gOPN = require('./_object-gopn').f;
var isRegExp = require('./_is-regexp');
var $flags = require('./_flags');
var $RegExp = global.RegExp;
var Base = $RegExp;
var proto = $RegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
var CORRECT_NEW = new $RegExp(re1) !== re1;

if (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {
  re2[require('./_wks')('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))) {
  $RegExp = function RegExp(p, f) {
    var tiRE = this instanceof $RegExp;
    var piRE = isRegExp(p);
    var fiU = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function (key) {
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function () { return Base[key]; },
      set: function (it) { Base[key] = it; }
    });
  };
  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  require('./_redefine')(global, 'RegExp', $RegExp);
}

require('./_set-species')('RegExp');

},{"./_descriptors":40,"./_fails":46,"./_flags":48,"./_global":51,"./_inherit-if-required":56,"./_is-regexp":63,"./_object-dp":82,"./_object-gopn":87,"./_redefine":102,"./_set-species":108,"./_wks":137}],234:[function(require,module,exports){
// 21.2.5.3 get RegExp.prototype.flags()
if (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {
  configurable: true,
  get: require('./_flags')
});

},{"./_descriptors":40,"./_flags":48,"./_object-dp":82}],235:[function(require,module,exports){
// @@match logic
require('./_fix-re-wks')('match', 1, function (defined, MATCH, $match) {
  // 21.1.3.11 String.prototype.match(regexp)
  return [function match(regexp) {
    'use strict';
    var O = defined(this);
    var fn = regexp == undefined ? undefined : regexp[MATCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
  }, $match];
});

},{"./_fix-re-wks":47}],236:[function(require,module,exports){
// @@replace logic
require('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace) {
  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
  return [function replace(searchValue, replaceValue) {
    'use strict';
    var O = defined(this);
    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
    return fn !== undefined
      ? fn.call(searchValue, O, replaceValue)
      : $replace.call(String(O), searchValue, replaceValue);
  }, $replace];
});

},{"./_fix-re-wks":47}],237:[function(require,module,exports){
// @@search logic
require('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search) {
  // 21.1.3.15 String.prototype.search(regexp)
  return [function search(regexp) {
    'use strict';
    var O = defined(this);
    var fn = regexp == undefined ? undefined : regexp[SEARCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
  }, $search];
});

},{"./_fix-re-wks":47}],238:[function(require,module,exports){
// @@split logic
require('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split) {
  'use strict';
  var isRegExp = require('./_is-regexp');
  var _split = $split;
  var $push = [].push;
  var $SPLIT = 'split';
  var LENGTH = 'length';
  var LAST_INDEX = 'lastIndex';
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
    // based on es5-shim implementation, need to rework it
    $split = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return _split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var separator2, match, lastIndex, lastLength, i;
      // Doesn't need flags gy, but they don't hurt
      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
      while (match = separatorCopy.exec(string)) {
        // `separatorCopy.lastIndex` is not reliable cross-browser
        lastIndex = match.index + match[0][LENGTH];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
          // eslint-disable-next-line no-loop-func
          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {
            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;
          });
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    $split = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
    };
  }
  // 21.1.3.17 String.prototype.split(separator, limit)
  return [function split(separator, limit) {
    var O = defined(this);
    var fn = separator == undefined ? undefined : separator[SPLIT];
    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
  }, $split];
});

},{"./_fix-re-wks":47,"./_is-regexp":63}],239:[function(require,module,exports){
'use strict';
require('./es6.regexp.flags');
var anObject = require('./_an-object');
var $flags = require('./_flags');
var DESCRIPTORS = require('./_descriptors');
var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}

},{"./_an-object":18,"./_descriptors":40,"./_fails":46,"./_flags":48,"./_redefine":102,"./es6.regexp.flags":234}],240:[function(require,module,exports){
'use strict';
var strong = require('./_collection-strong');
var validate = require('./_validate-collection');
var SET = 'Set';

// 23.2 Set Objects
module.exports = require('./_collection')(SET, function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);

},{"./_collection":33,"./_collection-strong":30,"./_validate-collection":134}],241:[function(require,module,exports){
'use strict';
// B.2.3.2 String.prototype.anchor(name)
require('./_string-html')('anchor', function (createHTML) {
  return function anchor(name) {
    return createHTML(this, 'a', 'name', name);
  };
});

},{"./_string-html":116}],242:[function(require,module,exports){
'use strict';
// B.2.3.3 String.prototype.big()
require('./_string-html')('big', function (createHTML) {
  return function big() {
    return createHTML(this, 'big', '', '');
  };
});

},{"./_string-html":116}],243:[function(require,module,exports){
'use strict';
// B.2.3.4 String.prototype.blink()
require('./_string-html')('blink', function (createHTML) {
  return function blink() {
    return createHTML(this, 'blink', '', '');
  };
});

},{"./_string-html":116}],244:[function(require,module,exports){
'use strict';
// B.2.3.5 String.prototype.bold()
require('./_string-html')('bold', function (createHTML) {
  return function bold() {
    return createHTML(this, 'b', '', '');
  };
});

},{"./_string-html":116}],245:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var $at = require('./_string-at')(false);
$export($export.P, 'String', {
  // 21.1.3.3 String.prototype.codePointAt(pos)
  codePointAt: function codePointAt(pos) {
    return $at(this, pos);
  }
});

},{"./_export":44,"./_string-at":114}],246:[function(require,module,exports){
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
'use strict';
var $export = require('./_export');
var toLength = require('./_to-length');
var context = require('./_string-context');
var ENDS_WITH = 'endsWith';
var $endsWith = ''[ENDS_WITH];

$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = context(this, searchString, ENDS_WITH);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
    var search = String(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});

},{"./_export":44,"./_fails-is-regexp":45,"./_string-context":115,"./_to-length":126}],247:[function(require,module,exports){
'use strict';
// B.2.3.6 String.prototype.fixed()
require('./_string-html')('fixed', function (createHTML) {
  return function fixed() {
    return createHTML(this, 'tt', '', '');
  };
});

},{"./_string-html":116}],248:[function(require,module,exports){
'use strict';
// B.2.3.7 String.prototype.fontcolor(color)
require('./_string-html')('fontcolor', function (createHTML) {
  return function fontcolor(color) {
    return createHTML(this, 'font', 'color', color);
  };
});

},{"./_string-html":116}],249:[function(require,module,exports){
'use strict';
// B.2.3.8 String.prototype.fontsize(size)
require('./_string-html')('fontsize', function (createHTML) {
  return function fontsize(size) {
    return createHTML(this, 'font', 'size', size);
  };
});

},{"./_string-html":116}],250:[function(require,module,exports){
var $export = require('./_export');
var toAbsoluteIndex = require('./_to-absolute-index');
var fromCharCode = String.fromCharCode;
var $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
  // 21.1.2.2 String.fromCodePoint(...codePoints)
  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
    var res = [];
    var aLen = arguments.length;
    var i = 0;
    var code;
    while (aLen > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
      res.push(code < 0x10000
        ? fromCharCode(code)
        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
      );
    } return res.join('');
  }
});

},{"./_export":44,"./_to-absolute-index":122}],251:[function(require,module,exports){
// 21.1.3.7 String.prototype.includes(searchString, position = 0)
'use strict';
var $export = require('./_export');
var context = require('./_string-context');
var INCLUDES = 'includes';

$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});

},{"./_export":44,"./_fails-is-regexp":45,"./_string-context":115}],252:[function(require,module,exports){
'use strict';
// B.2.3.9 String.prototype.italics()
require('./_string-html')('italics', function (createHTML) {
  return function italics() {
    return createHTML(this, 'i', '', '');
  };
});

},{"./_string-html":116}],253:[function(require,module,exports){
'use strict';
var $at = require('./_string-at')(true);

// 21.1.3.27 String.prototype[@@iterator]()
require('./_iter-define')(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

},{"./_iter-define":66,"./_string-at":114}],254:[function(require,module,exports){
'use strict';
// B.2.3.10 String.prototype.link(url)
require('./_string-html')('link', function (createHTML) {
  return function link(url) {
    return createHTML(this, 'a', 'href', url);
  };
});

},{"./_string-html":116}],255:[function(require,module,exports){
var $export = require('./_export');
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');

$export($export.S, 'String', {
  // 21.1.2.4 String.raw(callSite, ...substitutions)
  raw: function raw(callSite) {
    var tpl = toIObject(callSite.raw);
    var len = toLength(tpl.length);
    var aLen = arguments.length;
    var res = [];
    var i = 0;
    while (len > i) {
      res.push(String(tpl[i++]));
      if (i < aLen) res.push(String(arguments[i]));
    } return res.join('');
  }
});

},{"./_export":44,"./_to-iobject":125,"./_to-length":126}],256:[function(require,module,exports){
var $export = require('./_export');

$export($export.P, 'String', {
  // 21.1.3.13 String.prototype.repeat(count)
  repeat: require('./_string-repeat')
});

},{"./_export":44,"./_string-repeat":118}],257:[function(require,module,exports){
'use strict';
// B.2.3.11 String.prototype.small()
require('./_string-html')('small', function (createHTML) {
  return function small() {
    return createHTML(this, 'small', '', '');
  };
});

},{"./_string-html":116}],258:[function(require,module,exports){
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
'use strict';
var $export = require('./_export');
var toLength = require('./_to-length');
var context = require('./_string-context');
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});

},{"./_export":44,"./_fails-is-regexp":45,"./_string-context":115,"./_to-length":126}],259:[function(require,module,exports){
'use strict';
// B.2.3.12 String.prototype.strike()
require('./_string-html')('strike', function (createHTML) {
  return function strike() {
    return createHTML(this, 'strike', '', '');
  };
});

},{"./_string-html":116}],260:[function(require,module,exports){
'use strict';
// B.2.3.13 String.prototype.sub()
require('./_string-html')('sub', function (createHTML) {
  return function sub() {
    return createHTML(this, 'sub', '', '');
  };
});

},{"./_string-html":116}],261:[function(require,module,exports){
'use strict';
// B.2.3.14 String.prototype.sup()
require('./_string-html')('sup', function (createHTML) {
  return function sup() {
    return createHTML(this, 'sup', '', '');
  };
});

},{"./_string-html":116}],262:[function(require,module,exports){
'use strict';
// 21.1.3.25 String.prototype.trim()
require('./_string-trim')('trim', function ($trim) {
  return function trim() {
    return $trim(this, 3);
  };
});

},{"./_string-trim":119}],263:[function(require,module,exports){
'use strict';
// ECMAScript 6 symbols shim
var global = require('./_global');
var has = require('./_has');
var DESCRIPTORS = require('./_descriptors');
var $export = require('./_export');
var redefine = require('./_redefine');
var META = require('./_meta').KEY;
var $fails = require('./_fails');
var shared = require('./_shared');
var setToStringTag = require('./_set-to-string-tag');
var uid = require('./_uid');
var wks = require('./_wks');
var wksExt = require('./_wks-ext');
var wksDefine = require('./_wks-define');
var enumKeys = require('./_enum-keys');
var isArray = require('./_is-array');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var createDesc = require('./_property-desc');
var _create = require('./_object-create');
var gOPNExt = require('./_object-gopn-ext');
var $GOPD = require('./_object-gopd');
var $DP = require('./_object-dp');
var $keys = require('./_object-keys');
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
  require('./_object-pie').f = $propertyIsEnumerable;
  require('./_object-gops').f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !require('./_library')) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

},{"./_an-object":18,"./_descriptors":40,"./_enum-keys":43,"./_export":44,"./_fails":46,"./_global":51,"./_has":52,"./_hide":53,"./_is-array":60,"./_is-object":62,"./_library":70,"./_meta":76,"./_object-create":81,"./_object-dp":82,"./_object-gopd":85,"./_object-gopn":87,"./_object-gopn-ext":86,"./_object-gops":88,"./_object-keys":91,"./_object-pie":92,"./_property-desc":100,"./_redefine":102,"./_set-to-string-tag":109,"./_shared":111,"./_to-iobject":125,"./_to-primitive":128,"./_uid":132,"./_wks":137,"./_wks-define":135,"./_wks-ext":136}],264:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var $typed = require('./_typed');
var buffer = require('./_typed-buffer');
var anObject = require('./_an-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');
var isObject = require('./_is-object');
var ArrayBuffer = require('./_global').ArrayBuffer;
var speciesConstructor = require('./_species-constructor');
var $ArrayBuffer = buffer.ArrayBuffer;
var $DataView = buffer.DataView;
var $isView = $typed.ABV && ArrayBuffer.isView;
var $slice = $ArrayBuffer.prototype.slice;
var VIEW = $typed.VIEW;
var ARRAY_BUFFER = 'ArrayBuffer';

$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });

$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
  // 24.1.3.1 ArrayBuffer.isView(arg)
  isView: function isView(it) {
    return $isView && $isView(it) || isObject(it) && VIEW in it;
  }
});

$export($export.P + $export.U + $export.F * require('./_fails')(function () {
  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
}), ARRAY_BUFFER, {
  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
  slice: function slice(start, end) {
    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
    var len = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, len);
    var final = toAbsoluteIndex(end === undefined ? len : end, len);
    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first));
    var viewS = new $DataView(this);
    var viewT = new $DataView(result);
    var index = 0;
    while (first < final) {
      viewT.setUint8(index++, viewS.getUint8(first++));
    } return result;
  }
});

require('./_set-species')(ARRAY_BUFFER);

},{"./_an-object":18,"./_export":44,"./_fails":46,"./_global":51,"./_is-object":62,"./_set-species":108,"./_species-constructor":112,"./_to-absolute-index":122,"./_to-length":126,"./_typed":131,"./_typed-buffer":130}],265:[function(require,module,exports){
var $export = require('./_export');
$export($export.G + $export.W + $export.F * !require('./_typed').ABV, {
  DataView: require('./_typed-buffer').DataView
});

},{"./_export":44,"./_typed":131,"./_typed-buffer":130}],266:[function(require,module,exports){
require('./_typed-array')('Float32', 4, function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":129}],267:[function(require,module,exports){
require('./_typed-array')('Float64', 8, function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":129}],268:[function(require,module,exports){
require('./_typed-array')('Int16', 2, function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":129}],269:[function(require,module,exports){
require('./_typed-array')('Int32', 4, function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":129}],270:[function(require,module,exports){
require('./_typed-array')('Int8', 1, function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":129}],271:[function(require,module,exports){
require('./_typed-array')('Uint16', 2, function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":129}],272:[function(require,module,exports){
require('./_typed-array')('Uint32', 4, function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":129}],273:[function(require,module,exports){
require('./_typed-array')('Uint8', 1, function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":129}],274:[function(require,module,exports){
require('./_typed-array')('Uint8', 1, function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);

},{"./_typed-array":129}],275:[function(require,module,exports){
'use strict';
var each = require('./_array-methods')(0);
var redefine = require('./_redefine');
var meta = require('./_meta');
var assign = require('./_object-assign');
var weak = require('./_collection-weak');
var isObject = require('./_is-object');
var fails = require('./_fails');
var validate = require('./_validate-collection');
var WEAK_MAP = 'WeakMap';
var getWeak = meta.getWeak;
var isExtensible = Object.isExtensible;
var uncaughtFrozenStore = weak.ufstore;
var tmp = {};
var InternalMap;

var wrapper = function (get) {
  return function WeakMap() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};

var methods = {
  // 23.3.3.3 WeakMap.prototype.get(key)
  get: function get(key) {
    if (isObject(key)) {
      var data = getWeak(key);
      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
      return data ? data[this._i] : undefined;
    }
  },
  // 23.3.3.5 WeakMap.prototype.set(key, value)
  set: function set(key, value) {
    return weak.def(validate(this, WEAK_MAP), key, value);
  }
};

// 23.3 WeakMap Objects
var $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
if (fails(function () { return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7; })) {
  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
  assign(InternalMap.prototype, methods);
  meta.NEED = true;
  each(['delete', 'has', 'get', 'set'], function (key) {
    var proto = $WeakMap.prototype;
    var method = proto[key];
    redefine(proto, key, function (a, b) {
      // store frozen objects on internal weakmap shim
      if (isObject(a) && !isExtensible(a)) {
        if (!this._f) this._f = new InternalMap();
        var result = this._f[key](a, b);
        return key == 'set' ? this : result;
      // store all the rest on native weakmap
      } return method.call(this, a, b);
    });
  });
}

},{"./_array-methods":23,"./_collection":33,"./_collection-weak":32,"./_fails":46,"./_is-object":62,"./_meta":76,"./_object-assign":80,"./_redefine":102,"./_validate-collection":134}],276:[function(require,module,exports){
'use strict';
var weak = require('./_collection-weak');
var validate = require('./_validate-collection');
var WEAK_SET = 'WeakSet';

// 23.4 WeakSet Objects
require('./_collection')(WEAK_SET, function (get) {
  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.4.3.1 WeakSet.prototype.add(value)
  add: function add(value) {
    return weak.def(validate(this, WEAK_SET), value, true);
  }
}, weak, false, true);

},{"./_collection":33,"./_collection-weak":32,"./_validate-collection":134}],277:[function(require,module,exports){
'use strict';
// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
var $export = require('./_export');
var flattenIntoArray = require('./_flatten-into-array');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var aFunction = require('./_a-function');
var arraySpeciesCreate = require('./_array-species-create');

$export($export.P, 'Array', {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject(this);
    var sourceLen, A;
    aFunction(callbackfn);
    sourceLen = toLength(O.length);
    A = arraySpeciesCreate(O, 0);
    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
    return A;
  }
});

require('./_add-to-unscopables')('flatMap');

},{"./_a-function":14,"./_add-to-unscopables":16,"./_array-species-create":26,"./_export":44,"./_flatten-into-array":49,"./_to-length":126,"./_to-object":127}],278:[function(require,module,exports){
'use strict';
// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten
var $export = require('./_export');
var flattenIntoArray = require('./_flatten-into-array');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var toInteger = require('./_to-integer');
var arraySpeciesCreate = require('./_array-species-create');

$export($export.P, 'Array', {
  flatten: function flatten(/* depthArg = 1 */) {
    var depthArg = arguments[0];
    var O = toObject(this);
    var sourceLen = toLength(O.length);
    var A = arraySpeciesCreate(O, 0);
    flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
    return A;
  }
});

require('./_add-to-unscopables')('flatten');

},{"./_add-to-unscopables":16,"./_array-species-create":26,"./_export":44,"./_flatten-into-array":49,"./_to-integer":124,"./_to-length":126,"./_to-object":127}],279:[function(require,module,exports){
'use strict';
// https://github.com/tc39/Array.prototype.includes
var $export = require('./_export');
var $includes = require('./_array-includes')(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

require('./_add-to-unscopables')('includes');

},{"./_add-to-unscopables":16,"./_array-includes":22,"./_export":44}],280:[function(require,module,exports){
// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
var $export = require('./_export');
var microtask = require('./_microtask')();
var process = require('./_global').process;
var isNode = require('./_cof')(process) == 'process';

$export($export.G, {
  asap: function asap(fn) {
    var domain = isNode && process.domain;
    microtask(domain ? domain.bind(fn) : fn);
  }
});

},{"./_cof":29,"./_export":44,"./_global":51,"./_microtask":78}],281:[function(require,module,exports){
// https://github.com/ljharb/proposal-is-error
var $export = require('./_export');
var cof = require('./_cof');

$export($export.S, 'Error', {
  isError: function isError(it) {
    return cof(it) === 'Error';
  }
});

},{"./_cof":29,"./_export":44}],282:[function(require,module,exports){
// https://github.com/tc39/proposal-global
var $export = require('./_export');

$export($export.G, { global: require('./_global') });

},{"./_export":44,"./_global":51}],283:[function(require,module,exports){
// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
require('./_set-collection-from')('Map');

},{"./_set-collection-from":105}],284:[function(require,module,exports){
// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
require('./_set-collection-of')('Map');

},{"./_set-collection-of":106}],285:[function(require,module,exports){
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export = require('./_export');

$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });

},{"./_collection-to-json":31,"./_export":44}],286:[function(require,module,exports){
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');

$export($export.S, 'Math', {
  clamp: function clamp(x, lower, upper) {
    return Math.min(upper, Math.max(lower, x));
  }
});

},{"./_export":44}],287:[function(require,module,exports){
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');

$export($export.S, 'Math', { DEG_PER_RAD: Math.PI / 180 });

},{"./_export":44}],288:[function(require,module,exports){
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');
var RAD_PER_DEG = 180 / Math.PI;

$export($export.S, 'Math', {
  degrees: function degrees(radians) {
    return radians * RAD_PER_DEG;
  }
});

},{"./_export":44}],289:[function(require,module,exports){
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');
var scale = require('./_math-scale');
var fround = require('./_math-fround');

$export($export.S, 'Math', {
  fscale: function fscale(x, inLow, inHigh, outLow, outHigh) {
    return fround(scale(x, inLow, inHigh, outLow, outHigh));
  }
});

},{"./_export":44,"./_math-fround":72,"./_math-scale":74}],290:[function(require,module,exports){
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  iaddh: function iaddh(x0, x1, y0, y1) {
    var $x0 = x0 >>> 0;
    var $x1 = x1 >>> 0;
    var $y0 = y0 >>> 0;
    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
  }
});

},{"./_export":44}],291:[function(require,module,exports){
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  imulh: function imulh(u, v) {
    var UINT16 = 0xffff;
    var $u = +u;
    var $v = +v;
    var u0 = $u & UINT16;
    var v0 = $v & UINT16;
    var u1 = $u >> 16;
    var v1 = $v >> 16;
    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
  }
});

},{"./_export":44}],292:[function(require,module,exports){
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  isubh: function isubh(x0, x1, y0, y1) {
    var $x0 = x0 >>> 0;
    var $x1 = x1 >>> 0;
    var $y0 = y0 >>> 0;
    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
  }
});

},{"./_export":44}],293:[function(require,module,exports){
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');

$export($export.S, 'Math', { RAD_PER_DEG: 180 / Math.PI });

},{"./_export":44}],294:[function(require,module,exports){
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');
var DEG_PER_RAD = Math.PI / 180;

$export($export.S, 'Math', {
  radians: function radians(degrees) {
    return degrees * DEG_PER_RAD;
  }
});

},{"./_export":44}],295:[function(require,module,exports){
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');

$export($export.S, 'Math', { scale: require('./_math-scale') });

},{"./_export":44,"./_math-scale":74}],296:[function(require,module,exports){
// http://jfbastien.github.io/papers/Math.signbit.html
var $export = require('./_export');

$export($export.S, 'Math', { signbit: function signbit(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;
} });

},{"./_export":44}],297:[function(require,module,exports){
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  umulh: function umulh(u, v) {
    var UINT16 = 0xffff;
    var $u = +u;
    var $v = +v;
    var u0 = $u & UINT16;
    var v0 = $v & UINT16;
    var u1 = $u >>> 16;
    var v1 = $v >>> 16;
    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
  }
});

},{"./_export":44}],298:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var aFunction = require('./_a-function');
var $defineProperty = require('./_object-dp');

// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __defineGetter__: function __defineGetter__(P, getter) {
    $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
  }
});

},{"./_a-function":14,"./_descriptors":40,"./_export":44,"./_object-dp":82,"./_object-forced-pam":84,"./_to-object":127}],299:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var aFunction = require('./_a-function');
var $defineProperty = require('./_object-dp');

// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __defineSetter__: function __defineSetter__(P, setter) {
    $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
  }
});

},{"./_a-function":14,"./_descriptors":40,"./_export":44,"./_object-dp":82,"./_object-forced-pam":84,"./_to-object":127}],300:[function(require,module,exports){
// https://github.com/tc39/proposal-object-values-entries
var $export = require('./_export');
var $entries = require('./_object-to-array')(true);

$export($export.S, 'Object', {
  entries: function entries(it) {
    return $entries(it);
  }
});

},{"./_export":44,"./_object-to-array":94}],301:[function(require,module,exports){
// https://github.com/tc39/proposal-object-getownpropertydescriptors
var $export = require('./_export');
var ownKeys = require('./_own-keys');
var toIObject = require('./_to-iobject');
var gOPD = require('./_object-gopd');
var createProperty = require('./_create-property');

$export($export.S, 'Object', {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIObject(object);
    var getDesc = gOPD.f;
    var keys = ownKeys(O);
    var result = {};
    var i = 0;
    var key, desc;
    while (keys.length > i) {
      desc = getDesc(O, key = keys[i++]);
      if (desc !== undefined) createProperty(result, key, desc);
    }
    return result;
  }
});

},{"./_create-property":35,"./_export":44,"./_object-gopd":85,"./_own-keys":95,"./_to-iobject":125}],302:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var toPrimitive = require('./_to-primitive');
var getPrototypeOf = require('./_object-gpo');
var getOwnPropertyDescriptor = require('./_object-gopd').f;

// B.2.2.4 Object.prototype.__lookupGetter__(P)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __lookupGetter__: function __lookupGetter__(P) {
    var O = toObject(this);
    var K = toPrimitive(P, true);
    var D;
    do {
      if (D = getOwnPropertyDescriptor(O, K)) return D.get;
    } while (O = getPrototypeOf(O));
  }
});

},{"./_descriptors":40,"./_export":44,"./_object-forced-pam":84,"./_object-gopd":85,"./_object-gpo":89,"./_to-object":127,"./_to-primitive":128}],303:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var toPrimitive = require('./_to-primitive');
var getPrototypeOf = require('./_object-gpo');
var getOwnPropertyDescriptor = require('./_object-gopd').f;

// B.2.2.5 Object.prototype.__lookupSetter__(P)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __lookupSetter__: function __lookupSetter__(P) {
    var O = toObject(this);
    var K = toPrimitive(P, true);
    var D;
    do {
      if (D = getOwnPropertyDescriptor(O, K)) return D.set;
    } while (O = getPrototypeOf(O));
  }
});

},{"./_descriptors":40,"./_export":44,"./_object-forced-pam":84,"./_object-gopd":85,"./_object-gpo":89,"./_to-object":127,"./_to-primitive":128}],304:[function(require,module,exports){
// https://github.com/tc39/proposal-object-values-entries
var $export = require('./_export');
var $values = require('./_object-to-array')(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});

},{"./_export":44,"./_object-to-array":94}],305:[function(require,module,exports){
'use strict';
// https://github.com/zenparsing/es-observable
var $export = require('./_export');
var global = require('./_global');
var core = require('./_core');
var microtask = require('./_microtask')();
var OBSERVABLE = require('./_wks')('observable');
var aFunction = require('./_a-function');
var anObject = require('./_an-object');
var anInstance = require('./_an-instance');
var redefineAll = require('./_redefine-all');
var hide = require('./_hide');
var forOf = require('./_for-of');
var RETURN = forOf.RETURN;

var getMethod = function (fn) {
  return fn == null ? undefined : aFunction(fn);
};

var cleanupSubscription = function (subscription) {
  var cleanup = subscription._c;
  if (cleanup) {
    subscription._c = undefined;
    cleanup();
  }
};

var subscriptionClosed = function (subscription) {
  return subscription._o === undefined;
};

var closeSubscription = function (subscription) {
  if (!subscriptionClosed(subscription)) {
    subscription._o = undefined;
    cleanupSubscription(subscription);
  }
};

var Subscription = function (observer, subscriber) {
  anObject(observer);
  this._c = undefined;
  this._o = observer;
  observer = new SubscriptionObserver(this);
  try {
    var cleanup = subscriber(observer);
    var subscription = cleanup;
    if (cleanup != null) {
      if (typeof cleanup.unsubscribe === 'function') cleanup = function () { subscription.unsubscribe(); };
      else aFunction(cleanup);
      this._c = cleanup;
    }
  } catch (e) {
    observer.error(e);
    return;
  } if (subscriptionClosed(this)) cleanupSubscription(this);
};

Subscription.prototype = redefineAll({}, {
  unsubscribe: function unsubscribe() { closeSubscription(this); }
});

var SubscriptionObserver = function (subscription) {
  this._s = subscription;
};

SubscriptionObserver.prototype = redefineAll({}, {
  next: function next(value) {
    var subscription = this._s;
    if (!subscriptionClosed(subscription)) {
      var observer = subscription._o;
      try {
        var m = getMethod(observer.next);
        if (m) return m.call(observer, value);
      } catch (e) {
        try {
          closeSubscription(subscription);
        } finally {
          throw e;
        }
      }
    }
  },
  error: function error(value) {
    var subscription = this._s;
    if (subscriptionClosed(subscription)) throw value;
    var observer = subscription._o;
    subscription._o = undefined;
    try {
      var m = getMethod(observer.error);
      if (!m) throw value;
      value = m.call(observer, value);
    } catch (e) {
      try {
        cleanupSubscription(subscription);
      } finally {
        throw e;
      }
    } cleanupSubscription(subscription);
    return value;
  },
  complete: function complete(value) {
    var subscription = this._s;
    if (!subscriptionClosed(subscription)) {
      var observer = subscription._o;
      subscription._o = undefined;
      try {
        var m = getMethod(observer.complete);
        value = m ? m.call(observer, value) : undefined;
      } catch (e) {
        try {
          cleanupSubscription(subscription);
        } finally {
          throw e;
        }
      } cleanupSubscription(subscription);
      return value;
    }
  }
});

var $Observable = function Observable(subscriber) {
  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
};

redefineAll($Observable.prototype, {
  subscribe: function subscribe(observer) {
    return new Subscription(observer, this._f);
  },
  forEach: function forEach(fn) {
    var that = this;
    return new (core.Promise || global.Promise)(function (resolve, reject) {
      aFunction(fn);
      var subscription = that.subscribe({
        next: function (value) {
          try {
            return fn(value);
          } catch (e) {
            reject(e);
            subscription.unsubscribe();
          }
        },
        error: reject,
        complete: resolve
      });
    });
  }
});

redefineAll($Observable, {
  from: function from(x) {
    var C = typeof this === 'function' ? this : $Observable;
    var method = getMethod(anObject(x)[OBSERVABLE]);
    if (method) {
      var observable = anObject(method.call(x));
      return observable.constructor === C ? observable : new C(function (observer) {
        return observable.subscribe(observer);
      });
    }
    return new C(function (observer) {
      var done = false;
      microtask(function () {
        if (!done) {
          try {
            if (forOf(x, false, function (it) {
              observer.next(it);
              if (done) return RETURN;
            }) === RETURN) return;
          } catch (e) {
            if (done) throw e;
            observer.error(e);
            return;
          } observer.complete();
        }
      });
      return function () { done = true; };
    });
  },
  of: function of() {
    for (var i = 0, l = arguments.length, items = new Array(l); i < l;) items[i] = arguments[i++];
    return new (typeof this === 'function' ? this : $Observable)(function (observer) {
      var done = false;
      microtask(function () {
        if (!done) {
          for (var j = 0; j < items.length; ++j) {
            observer.next(items[j]);
            if (done) return;
          } observer.complete();
        }
      });
      return function () { done = true; };
    });
  }
});

hide($Observable.prototype, OBSERVABLE, function () { return this; });

$export($export.G, { Observable: $Observable });

require('./_set-species')('Observable');

},{"./_a-function":14,"./_an-instance":17,"./_an-object":18,"./_core":34,"./_export":44,"./_for-of":50,"./_global":51,"./_hide":53,"./_microtask":78,"./_redefine-all":101,"./_set-species":108,"./_wks":137}],306:[function(require,module,exports){
// https://github.com/tc39/proposal-promise-finally
'use strict';
var $export = require('./_export');
var core = require('./_core');
var global = require('./_global');
var speciesConstructor = require('./_species-constructor');
var promiseResolve = require('./_promise-resolve');

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });

},{"./_core":34,"./_export":44,"./_global":51,"./_promise-resolve":99,"./_species-constructor":112}],307:[function(require,module,exports){
'use strict';
// https://github.com/tc39/proposal-promise-try
var $export = require('./_export');
var newPromiseCapability = require('./_new-promise-capability');
var perform = require('./_perform');

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });

},{"./_export":44,"./_new-promise-capability":79,"./_perform":98}],308:[function(require,module,exports){
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var toMetaKey = metadata.key;
var ordinaryDefineOwnMetadata = metadata.set;

metadata.exp({ defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {
  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
} });

},{"./_an-object":18,"./_metadata":77}],309:[function(require,module,exports){
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var toMetaKey = metadata.key;
var getOrCreateMetadataMap = metadata.map;
var store = metadata.store;

metadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {
  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);
  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;
  if (metadataMap.size) return true;
  var targetMetadata = store.get(target);
  targetMetadata['delete'](targetKey);
  return !!targetMetadata.size || store['delete'](target);
} });

},{"./_an-object":18,"./_metadata":77}],310:[function(require,module,exports){
var Set = require('./es6.set');
var from = require('./_array-from-iterable');
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var getPrototypeOf = require('./_object-gpo');
var ordinaryOwnMetadataKeys = metadata.keys;
var toMetaKey = metadata.key;

var ordinaryMetadataKeys = function (O, P) {
  var oKeys = ordinaryOwnMetadataKeys(O, P);
  var parent = getPrototypeOf(O);
  if (parent === null) return oKeys;
  var pKeys = ordinaryMetadataKeys(parent, P);
  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
};

metadata.exp({ getMetadataKeys: function getMetadataKeys(target /* , targetKey */) {
  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
} });

},{"./_an-object":18,"./_array-from-iterable":21,"./_metadata":77,"./_object-gpo":89,"./es6.set":240}],311:[function(require,module,exports){
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var getPrototypeOf = require('./_object-gpo');
var ordinaryHasOwnMetadata = metadata.has;
var ordinaryGetOwnMetadata = metadata.get;
var toMetaKey = metadata.key;

var ordinaryGetMetadata = function (MetadataKey, O, P) {
  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
  if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
  var parent = getPrototypeOf(O);
  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
};

metadata.exp({ getMetadata: function getMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });

},{"./_an-object":18,"./_metadata":77,"./_object-gpo":89}],312:[function(require,module,exports){
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var ordinaryOwnMetadataKeys = metadata.keys;
var toMetaKey = metadata.key;

metadata.exp({ getOwnMetadataKeys: function getOwnMetadataKeys(target /* , targetKey */) {
  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
} });

},{"./_an-object":18,"./_metadata":77}],313:[function(require,module,exports){
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var ordinaryGetOwnMetadata = metadata.get;
var toMetaKey = metadata.key;

metadata.exp({ getOwnMetadata: function getOwnMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });

},{"./_an-object":18,"./_metadata":77}],314:[function(require,module,exports){
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var getPrototypeOf = require('./_object-gpo');
var ordinaryHasOwnMetadata = metadata.has;
var toMetaKey = metadata.key;

var ordinaryHasMetadata = function (MetadataKey, O, P) {
  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
  if (hasOwn) return true;
  var parent = getPrototypeOf(O);
  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
};

metadata.exp({ hasMetadata: function hasMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });

},{"./_an-object":18,"./_metadata":77,"./_object-gpo":89}],315:[function(require,module,exports){
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var ordinaryHasOwnMetadata = metadata.has;
var toMetaKey = metadata.key;

metadata.exp({ hasOwnMetadata: function hasOwnMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });

},{"./_an-object":18,"./_metadata":77}],316:[function(require,module,exports){
var $metadata = require('./_metadata');
var anObject = require('./_an-object');
var aFunction = require('./_a-function');
var toMetaKey = $metadata.key;
var ordinaryDefineOwnMetadata = $metadata.set;

$metadata.exp({ metadata: function metadata(metadataKey, metadataValue) {
  return function decorator(target, targetKey) {
    ordinaryDefineOwnMetadata(
      metadataKey, metadataValue,
      (targetKey !== undefined ? anObject : aFunction)(target),
      toMetaKey(targetKey)
    );
  };
} });

},{"./_a-function":14,"./_an-object":18,"./_metadata":77}],317:[function(require,module,exports){
// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
require('./_set-collection-from')('Set');

},{"./_set-collection-from":105}],318:[function(require,module,exports){
// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
require('./_set-collection-of')('Set');

},{"./_set-collection-of":106}],319:[function(require,module,exports){
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export = require('./_export');

$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });

},{"./_collection-to-json":31,"./_export":44}],320:[function(require,module,exports){
'use strict';
// https://github.com/mathiasbynens/String.prototype.at
var $export = require('./_export');
var $at = require('./_string-at')(true);

$export($export.P, 'String', {
  at: function at(pos) {
    return $at(this, pos);
  }
});

},{"./_export":44,"./_string-at":114}],321:[function(require,module,exports){
'use strict';
// https://tc39.github.io/String.prototype.matchAll/
var $export = require('./_export');
var defined = require('./_defined');
var toLength = require('./_to-length');
var isRegExp = require('./_is-regexp');
var getFlags = require('./_flags');
var RegExpProto = RegExp.prototype;

var $RegExpStringIterator = function (regexp, string) {
  this._r = regexp;
  this._s = string;
};

require('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {
  var match = this._r.exec(this._s);
  return { value: match, done: match === null };
});

$export($export.P, 'String', {
  matchAll: function matchAll(regexp) {
    defined(this);
    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');
    var S = String(this);
    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);
    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
    rx.lastIndex = toLength(regexp.lastIndex);
    return new $RegExpStringIterator(rx, S);
  }
});

},{"./_defined":39,"./_export":44,"./_flags":48,"./_is-regexp":63,"./_iter-create":65,"./_to-length":126}],322:[function(require,module,exports){
'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
var $export = require('./_export');
var $pad = require('./_string-pad');
var userAgent = require('./_user-agent');

// https://github.com/zloirock/core-js/issues/280
$export($export.P + $export.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(userAgent), 'String', {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});

},{"./_export":44,"./_string-pad":117,"./_user-agent":133}],323:[function(require,module,exports){
'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
var $export = require('./_export');
var $pad = require('./_string-pad');
var userAgent = require('./_user-agent');

// https://github.com/zloirock/core-js/issues/280
$export($export.P + $export.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(userAgent), 'String', {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});

},{"./_export":44,"./_string-pad":117,"./_user-agent":133}],324:[function(require,module,exports){
'use strict';
// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
require('./_string-trim')('trimLeft', function ($trim) {
  return function trimLeft() {
    return $trim(this, 1);
  };
}, 'trimStart');

},{"./_string-trim":119}],325:[function(require,module,exports){
'use strict';
// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
require('./_string-trim')('trimRight', function ($trim) {
  return function trimRight() {
    return $trim(this, 2);
  };
}, 'trimEnd');

},{"./_string-trim":119}],326:[function(require,module,exports){
require('./_wks-define')('asyncIterator');

},{"./_wks-define":135}],327:[function(require,module,exports){
require('./_wks-define')('observable');

},{"./_wks-define":135}],328:[function(require,module,exports){
// https://github.com/tc39/proposal-global
var $export = require('./_export');

$export($export.S, 'System', { global: require('./_global') });

},{"./_export":44,"./_global":51}],329:[function(require,module,exports){
// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from
require('./_set-collection-from')('WeakMap');

},{"./_set-collection-from":105}],330:[function(require,module,exports){
// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of
require('./_set-collection-of')('WeakMap');

},{"./_set-collection-of":106}],331:[function(require,module,exports){
// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.from
require('./_set-collection-from')('WeakSet');

},{"./_set-collection-from":105}],332:[function(require,module,exports){
// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.of
require('./_set-collection-of')('WeakSet');

},{"./_set-collection-of":106}],333:[function(require,module,exports){
var $iterators = require('./es6.array.iterator');
var getKeys = require('./_object-keys');
var redefine = require('./_redefine');
var global = require('./_global');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var wks = require('./_wks');
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}

},{"./_global":51,"./_hide":53,"./_iterators":69,"./_object-keys":91,"./_redefine":102,"./_wks":137,"./es6.array.iterator":150}],334:[function(require,module,exports){
var $export = require('./_export');
var $task = require('./_task');
$export($export.G + $export.B, {
  setImmediate: $task.set,
  clearImmediate: $task.clear
});

},{"./_export":44,"./_task":121}],335:[function(require,module,exports){
// ie9- setTimeout & setInterval additional parameters fix
var global = require('./_global');
var $export = require('./_export');
var userAgent = require('./_user-agent');
var slice = [].slice;
var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
var wrap = function (set) {
  return function (fn, time /* , ...args */) {
    var boundArgs = arguments.length > 2;
    var args = boundArgs ? slice.call(arguments, 2) : false;
    return set(boundArgs ? function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
    } : fn, time);
  };
};
$export($export.G + $export.B + $export.F * MSIE, {
  setTimeout: wrap(global.setTimeout),
  setInterval: wrap(global.setInterval)
});

},{"./_export":44,"./_global":51,"./_user-agent":133}],336:[function(require,module,exports){
require('./modules/es6.symbol');
require('./modules/es6.object.create');
require('./modules/es6.object.define-property');
require('./modules/es6.object.define-properties');
require('./modules/es6.object.get-own-property-descriptor');
require('./modules/es6.object.get-prototype-of');
require('./modules/es6.object.keys');
require('./modules/es6.object.get-own-property-names');
require('./modules/es6.object.freeze');
require('./modules/es6.object.seal');
require('./modules/es6.object.prevent-extensions');
require('./modules/es6.object.is-frozen');
require('./modules/es6.object.is-sealed');
require('./modules/es6.object.is-extensible');
require('./modules/es6.object.assign');
require('./modules/es6.object.is');
require('./modules/es6.object.set-prototype-of');
require('./modules/es6.object.to-string');
require('./modules/es6.function.bind');
require('./modules/es6.function.name');
require('./modules/es6.function.has-instance');
require('./modules/es6.parse-int');
require('./modules/es6.parse-float');
require('./modules/es6.number.constructor');
require('./modules/es6.number.to-fixed');
require('./modules/es6.number.to-precision');
require('./modules/es6.number.epsilon');
require('./modules/es6.number.is-finite');
require('./modules/es6.number.is-integer');
require('./modules/es6.number.is-nan');
require('./modules/es6.number.is-safe-integer');
require('./modules/es6.number.max-safe-integer');
require('./modules/es6.number.min-safe-integer');
require('./modules/es6.number.parse-float');
require('./modules/es6.number.parse-int');
require('./modules/es6.math.acosh');
require('./modules/es6.math.asinh');
require('./modules/es6.math.atanh');
require('./modules/es6.math.cbrt');
require('./modules/es6.math.clz32');
require('./modules/es6.math.cosh');
require('./modules/es6.math.expm1');
require('./modules/es6.math.fround');
require('./modules/es6.math.hypot');
require('./modules/es6.math.imul');
require('./modules/es6.math.log10');
require('./modules/es6.math.log1p');
require('./modules/es6.math.log2');
require('./modules/es6.math.sign');
require('./modules/es6.math.sinh');
require('./modules/es6.math.tanh');
require('./modules/es6.math.trunc');
require('./modules/es6.string.from-code-point');
require('./modules/es6.string.raw');
require('./modules/es6.string.trim');
require('./modules/es6.string.iterator');
require('./modules/es6.string.code-point-at');
require('./modules/es6.string.ends-with');
require('./modules/es6.string.includes');
require('./modules/es6.string.repeat');
require('./modules/es6.string.starts-with');
require('./modules/es6.string.anchor');
require('./modules/es6.string.big');
require('./modules/es6.string.blink');
require('./modules/es6.string.bold');
require('./modules/es6.string.fixed');
require('./modules/es6.string.fontcolor');
require('./modules/es6.string.fontsize');
require('./modules/es6.string.italics');
require('./modules/es6.string.link');
require('./modules/es6.string.small');
require('./modules/es6.string.strike');
require('./modules/es6.string.sub');
require('./modules/es6.string.sup');
require('./modules/es6.date.now');
require('./modules/es6.date.to-json');
require('./modules/es6.date.to-iso-string');
require('./modules/es6.date.to-string');
require('./modules/es6.date.to-primitive');
require('./modules/es6.array.is-array');
require('./modules/es6.array.from');
require('./modules/es6.array.of');
require('./modules/es6.array.join');
require('./modules/es6.array.slice');
require('./modules/es6.array.sort');
require('./modules/es6.array.for-each');
require('./modules/es6.array.map');
require('./modules/es6.array.filter');
require('./modules/es6.array.some');
require('./modules/es6.array.every');
require('./modules/es6.array.reduce');
require('./modules/es6.array.reduce-right');
require('./modules/es6.array.index-of');
require('./modules/es6.array.last-index-of');
require('./modules/es6.array.copy-within');
require('./modules/es6.array.fill');
require('./modules/es6.array.find');
require('./modules/es6.array.find-index');
require('./modules/es6.array.species');
require('./modules/es6.array.iterator');
require('./modules/es6.regexp.constructor');
require('./modules/es6.regexp.to-string');
require('./modules/es6.regexp.flags');
require('./modules/es6.regexp.match');
require('./modules/es6.regexp.replace');
require('./modules/es6.regexp.search');
require('./modules/es6.regexp.split');
require('./modules/es6.promise');
require('./modules/es6.map');
require('./modules/es6.set');
require('./modules/es6.weak-map');
require('./modules/es6.weak-set');
require('./modules/es6.typed.array-buffer');
require('./modules/es6.typed.data-view');
require('./modules/es6.typed.int8-array');
require('./modules/es6.typed.uint8-array');
require('./modules/es6.typed.uint8-clamped-array');
require('./modules/es6.typed.int16-array');
require('./modules/es6.typed.uint16-array');
require('./modules/es6.typed.int32-array');
require('./modules/es6.typed.uint32-array');
require('./modules/es6.typed.float32-array');
require('./modules/es6.typed.float64-array');
require('./modules/es6.reflect.apply');
require('./modules/es6.reflect.construct');
require('./modules/es6.reflect.define-property');
require('./modules/es6.reflect.delete-property');
require('./modules/es6.reflect.enumerate');
require('./modules/es6.reflect.get');
require('./modules/es6.reflect.get-own-property-descriptor');
require('./modules/es6.reflect.get-prototype-of');
require('./modules/es6.reflect.has');
require('./modules/es6.reflect.is-extensible');
require('./modules/es6.reflect.own-keys');
require('./modules/es6.reflect.prevent-extensions');
require('./modules/es6.reflect.set');
require('./modules/es6.reflect.set-prototype-of');
require('./modules/es7.array.includes');
require('./modules/es7.array.flat-map');
require('./modules/es7.array.flatten');
require('./modules/es7.string.at');
require('./modules/es7.string.pad-start');
require('./modules/es7.string.pad-end');
require('./modules/es7.string.trim-left');
require('./modules/es7.string.trim-right');
require('./modules/es7.string.match-all');
require('./modules/es7.symbol.async-iterator');
require('./modules/es7.symbol.observable');
require('./modules/es7.object.get-own-property-descriptors');
require('./modules/es7.object.values');
require('./modules/es7.object.entries');
require('./modules/es7.object.define-getter');
require('./modules/es7.object.define-setter');
require('./modules/es7.object.lookup-getter');
require('./modules/es7.object.lookup-setter');
require('./modules/es7.map.to-json');
require('./modules/es7.set.to-json');
require('./modules/es7.map.of');
require('./modules/es7.set.of');
require('./modules/es7.weak-map.of');
require('./modules/es7.weak-set.of');
require('./modules/es7.map.from');
require('./modules/es7.set.from');
require('./modules/es7.weak-map.from');
require('./modules/es7.weak-set.from');
require('./modules/es7.global');
require('./modules/es7.system.global');
require('./modules/es7.error.is-error');
require('./modules/es7.math.clamp');
require('./modules/es7.math.deg-per-rad');
require('./modules/es7.math.degrees');
require('./modules/es7.math.fscale');
require('./modules/es7.math.iaddh');
require('./modules/es7.math.isubh');
require('./modules/es7.math.imulh');
require('./modules/es7.math.rad-per-deg');
require('./modules/es7.math.radians');
require('./modules/es7.math.scale');
require('./modules/es7.math.umulh');
require('./modules/es7.math.signbit');
require('./modules/es7.promise.finally');
require('./modules/es7.promise.try');
require('./modules/es7.reflect.define-metadata');
require('./modules/es7.reflect.delete-metadata');
require('./modules/es7.reflect.get-metadata');
require('./modules/es7.reflect.get-metadata-keys');
require('./modules/es7.reflect.get-own-metadata');
require('./modules/es7.reflect.get-own-metadata-keys');
require('./modules/es7.reflect.has-metadata');
require('./modules/es7.reflect.has-own-metadata');
require('./modules/es7.reflect.metadata');
require('./modules/es7.asap');
require('./modules/es7.observable');
require('./modules/web.timers');
require('./modules/web.immediate');
require('./modules/web.dom.iterable');
module.exports = require('./modules/_core');

},{"./modules/_core":34,"./modules/es6.array.copy-within":140,"./modules/es6.array.every":141,"./modules/es6.array.fill":142,"./modules/es6.array.filter":143,"./modules/es6.array.find":145,"./modules/es6.array.find-index":144,"./modules/es6.array.for-each":146,"./modules/es6.array.from":147,"./modules/es6.array.index-of":148,"./modules/es6.array.is-array":149,"./modules/es6.array.iterator":150,"./modules/es6.array.join":151,"./modules/es6.array.last-index-of":152,"./modules/es6.array.map":153,"./modules/es6.array.of":154,"./modules/es6.array.reduce":156,"./modules/es6.array.reduce-right":155,"./modules/es6.array.slice":157,"./modules/es6.array.some":158,"./modules/es6.array.sort":159,"./modules/es6.array.species":160,"./modules/es6.date.now":161,"./modules/es6.date.to-iso-string":162,"./modules/es6.date.to-json":163,"./modules/es6.date.to-primitive":164,"./modules/es6.date.to-string":165,"./modules/es6.function.bind":166,"./modules/es6.function.has-instance":167,"./modules/es6.function.name":168,"./modules/es6.map":169,"./modules/es6.math.acosh":170,"./modules/es6.math.asinh":171,"./modules/es6.math.atanh":172,"./modules/es6.math.cbrt":173,"./modules/es6.math.clz32":174,"./modules/es6.math.cosh":175,"./modules/es6.math.expm1":176,"./modules/es6.math.fround":177,"./modules/es6.math.hypot":178,"./modules/es6.math.imul":179,"./modules/es6.math.log10":180,"./modules/es6.math.log1p":181,"./modules/es6.math.log2":182,"./modules/es6.math.sign":183,"./modules/es6.math.sinh":184,"./modules/es6.math.tanh":185,"./modules/es6.math.trunc":186,"./modules/es6.number.constructor":187,"./modules/es6.number.epsilon":188,"./modules/es6.number.is-finite":189,"./modules/es6.number.is-integer":190,"./modules/es6.number.is-nan":191,"./modules/es6.number.is-safe-integer":192,"./modules/es6.number.max-safe-integer":193,"./modules/es6.number.min-safe-integer":194,"./modules/es6.number.parse-float":195,"./modules/es6.number.parse-int":196,"./modules/es6.number.to-fixed":197,"./modules/es6.number.to-precision":198,"./modules/es6.object.assign":199,"./modules/es6.object.create":200,"./modules/es6.object.define-properties":201,"./modules/es6.object.define-property":202,"./modules/es6.object.freeze":203,"./modules/es6.object.get-own-property-descriptor":204,"./modules/es6.object.get-own-property-names":205,"./modules/es6.object.get-prototype-of":206,"./modules/es6.object.is":210,"./modules/es6.object.is-extensible":207,"./modules/es6.object.is-frozen":208,"./modules/es6.object.is-sealed":209,"./modules/es6.object.keys":211,"./modules/es6.object.prevent-extensions":212,"./modules/es6.object.seal":213,"./modules/es6.object.set-prototype-of":214,"./modules/es6.object.to-string":215,"./modules/es6.parse-float":216,"./modules/es6.parse-int":217,"./modules/es6.promise":218,"./modules/es6.reflect.apply":219,"./modules/es6.reflect.construct":220,"./modules/es6.reflect.define-property":221,"./modules/es6.reflect.delete-property":222,"./modules/es6.reflect.enumerate":223,"./modules/es6.reflect.get":226,"./modules/es6.reflect.get-own-property-descriptor":224,"./modules/es6.reflect.get-prototype-of":225,"./modules/es6.reflect.has":227,"./modules/es6.reflect.is-extensible":228,"./modules/es6.reflect.own-keys":229,"./modules/es6.reflect.prevent-extensions":230,"./modules/es6.reflect.set":232,"./modules/es6.reflect.set-prototype-of":231,"./modules/es6.regexp.constructor":233,"./modules/es6.regexp.flags":234,"./modules/es6.regexp.match":235,"./modules/es6.regexp.replace":236,"./modules/es6.regexp.search":237,"./modules/es6.regexp.split":238,"./modules/es6.regexp.to-string":239,"./modules/es6.set":240,"./modules/es6.string.anchor":241,"./modules/es6.string.big":242,"./modules/es6.string.blink":243,"./modules/es6.string.bold":244,"./modules/es6.string.code-point-at":245,"./modules/es6.string.ends-with":246,"./modules/es6.string.fixed":247,"./modules/es6.string.fontcolor":248,"./modules/es6.string.fontsize":249,"./modules/es6.string.from-code-point":250,"./modules/es6.string.includes":251,"./modules/es6.string.italics":252,"./modules/es6.string.iterator":253,"./modules/es6.string.link":254,"./modules/es6.string.raw":255,"./modules/es6.string.repeat":256,"./modules/es6.string.small":257,"./modules/es6.string.starts-with":258,"./modules/es6.string.strike":259,"./modules/es6.string.sub":260,"./modules/es6.string.sup":261,"./modules/es6.string.trim":262,"./modules/es6.symbol":263,"./modules/es6.typed.array-buffer":264,"./modules/es6.typed.data-view":265,"./modules/es6.typed.float32-array":266,"./modules/es6.typed.float64-array":267,"./modules/es6.typed.int16-array":268,"./modules/es6.typed.int32-array":269,"./modules/es6.typed.int8-array":270,"./modules/es6.typed.uint16-array":271,"./modules/es6.typed.uint32-array":272,"./modules/es6.typed.uint8-array":273,"./modules/es6.typed.uint8-clamped-array":274,"./modules/es6.weak-map":275,"./modules/es6.weak-set":276,"./modules/es7.array.flat-map":277,"./modules/es7.array.flatten":278,"./modules/es7.array.includes":279,"./modules/es7.asap":280,"./modules/es7.error.is-error":281,"./modules/es7.global":282,"./modules/es7.map.from":283,"./modules/es7.map.of":284,"./modules/es7.map.to-json":285,"./modules/es7.math.clamp":286,"./modules/es7.math.deg-per-rad":287,"./modules/es7.math.degrees":288,"./modules/es7.math.fscale":289,"./modules/es7.math.iaddh":290,"./modules/es7.math.imulh":291,"./modules/es7.math.isubh":292,"./modules/es7.math.rad-per-deg":293,"./modules/es7.math.radians":294,"./modules/es7.math.scale":295,"./modules/es7.math.signbit":296,"./modules/es7.math.umulh":297,"./modules/es7.object.define-getter":298,"./modules/es7.object.define-setter":299,"./modules/es7.object.entries":300,"./modules/es7.object.get-own-property-descriptors":301,"./modules/es7.object.lookup-getter":302,"./modules/es7.object.lookup-setter":303,"./modules/es7.object.values":304,"./modules/es7.observable":305,"./modules/es7.promise.finally":306,"./modules/es7.promise.try":307,"./modules/es7.reflect.define-metadata":308,"./modules/es7.reflect.delete-metadata":309,"./modules/es7.reflect.get-metadata":311,"./modules/es7.reflect.get-metadata-keys":310,"./modules/es7.reflect.get-own-metadata":313,"./modules/es7.reflect.get-own-metadata-keys":312,"./modules/es7.reflect.has-metadata":314,"./modules/es7.reflect.has-own-metadata":315,"./modules/es7.reflect.metadata":316,"./modules/es7.set.from":317,"./modules/es7.set.of":318,"./modules/es7.set.to-json":319,"./modules/es7.string.at":320,"./modules/es7.string.match-all":321,"./modules/es7.string.pad-end":322,"./modules/es7.string.pad-start":323,"./modules/es7.string.trim-left":324,"./modules/es7.string.trim-right":325,"./modules/es7.symbol.async-iterator":326,"./modules/es7.symbol.observable":327,"./modules/es7.system.global":328,"./modules/es7.weak-map.from":329,"./modules/es7.weak-map.of":330,"./modules/es7.weak-set.from":331,"./modules/es7.weak-set.of":332,"./modules/web.dom.iterable":333,"./modules/web.immediate":334,"./modules/web.timers":335}],337:[function(require,module,exports){
(function() {
  var base64map
      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',

  crypt = {
    // Bit-wise rotation left
    rotl: function(n, b) {
      return (n << b) | (n >>> (32 - b));
    },

    // Bit-wise rotation right
    rotr: function(n, b) {
      return (n << (32 - b)) | (n >>> b);
    },

    // Swap big-endian to little-endian and vice versa
    endian: function(n) {
      // If number given, swap endian
      if (n.constructor == Number) {
        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;
      }

      // Else, assume array and swap all items
      for (var i = 0; i < n.length; i++)
        n[i] = crypt.endian(n[i]);
      return n;
    },

    // Generate an array of any length of random bytes
    randomBytes: function(n) {
      for (var bytes = []; n > 0; n--)
        bytes.push(Math.floor(Math.random() * 256));
      return bytes;
    },

    // Convert a byte array to big-endian 32-bit words
    bytesToWords: function(bytes) {
      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)
        words[b >>> 5] |= bytes[i] << (24 - b % 32);
      return words;
    },

    // Convert big-endian 32-bit words to a byte array
    wordsToBytes: function(words) {
      for (var bytes = [], b = 0; b < words.length * 32; b += 8)
        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);
      return bytes;
    },

    // Convert a byte array to a hex string
    bytesToHex: function(bytes) {
      for (var hex = [], i = 0; i < bytes.length; i++) {
        hex.push((bytes[i] >>> 4).toString(16));
        hex.push((bytes[i] & 0xF).toString(16));
      }
      return hex.join('');
    },

    // Convert a hex string to a byte array
    hexToBytes: function(hex) {
      for (var bytes = [], c = 0; c < hex.length; c += 2)
        bytes.push(parseInt(hex.substr(c, 2), 16));
      return bytes;
    },

    // Convert a byte array to a base-64 string
    bytesToBase64: function(bytes) {
      for (var base64 = [], i = 0; i < bytes.length; i += 3) {
        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];
        for (var j = 0; j < 4; j++)
          if (i * 8 + j * 6 <= bytes.length * 8)
            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));
          else
            base64.push('=');
      }
      return base64.join('');
    },

    // Convert a base-64 string to a byte array
    base64ToBytes: function(base64) {
      // Remove non-base-64 characters
      base64 = base64.replace(/[^A-Z0-9+\/]/ig, '');

      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;
          imod4 = ++i % 4) {
        if (imod4 == 0) continue;
        bytes.push(((base64map.indexOf(base64.charAt(i - 1))
            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))
            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));
      }
      return bytes;
    }
  };

  module.exports = crypt;
})();

},{}],338:[function(require,module,exports){
/* global HTMLElement */

'use strict'

module.exports = function emptyElement (element) {
  if (!(element instanceof HTMLElement)) {
    throw new TypeError('Expected an element')
  }

  var node
  while ((node = element.lastChild)) element.removeChild(node)
  return element
}

},{}],339:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],340:[function(require,module,exports){
(function (global){
var topLevel = typeof global !== 'undefined' ? global :
    typeof window !== 'undefined' ? window : {}
var minDoc = require('min-document');

var doccy;

if (typeof document !== 'undefined') {
    doccy = document;
} else {
    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

    if (!doccy) {
        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
    }
}

module.exports = doccy;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"min-document":7}],341:[function(require,module,exports){
(function (global){
var win;

if (typeof window !== "undefined") {
    win = window;
} else if (typeof global !== "undefined") {
    win = global;
} else if (typeof self !== "undefined"){
    win = self;
} else {
    win = {};
}

module.exports = win;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],342:[function(require,module,exports){
module.exports = attributeToProperty

var transform = {
  'class': 'className',
  'for': 'htmlFor',
  'http-equiv': 'httpEquiv'
}

function attributeToProperty (h) {
  return function (tagName, attrs, children) {
    for (var attr in attrs) {
      if (attr in transform) {
        attrs[transform[attr]] = attrs[attr]
        delete attrs[attr]
      }
    }
    return h(tagName, attrs, children)
  }
}

},{}],343:[function(require,module,exports){
var attrToProp = require('hyperscript-attribute-to-property')

var VAR = 0, TEXT = 1, OPEN = 2, CLOSE = 3, ATTR = 4
var ATTR_KEY = 5, ATTR_KEY_W = 6
var ATTR_VALUE_W = 7, ATTR_VALUE = 8
var ATTR_VALUE_SQ = 9, ATTR_VALUE_DQ = 10
var ATTR_EQ = 11, ATTR_BREAK = 12
var COMMENT = 13

module.exports = function (h, opts) {
  if (!opts) opts = {}
  var concat = opts.concat || function (a, b) {
    return String(a) + String(b)
  }
  if (opts.attrToProp !== false) {
    h = attrToProp(h)
  }

  return function (strings) {
    var state = TEXT, reg = ''
    var arglen = arguments.length
    var parts = []

    for (var i = 0; i < strings.length; i++) {
      if (i < arglen - 1) {
        var arg = arguments[i+1]
        var p = parse(strings[i])
        var xstate = state
        if (xstate === ATTR_VALUE_DQ) xstate = ATTR_VALUE
        if (xstate === ATTR_VALUE_SQ) xstate = ATTR_VALUE
        if (xstate === ATTR_VALUE_W) xstate = ATTR_VALUE
        if (xstate === ATTR) xstate = ATTR_KEY
        if (xstate === OPEN) {
          if (reg === '/') {
            p.push([ OPEN, '/', arg ])
            reg = ''
          } else {
            p.push([ OPEN, arg ])
          }
        } else {
          p.push([ VAR, xstate, arg ])
        }
        parts.push.apply(parts, p)
      } else parts.push.apply(parts, parse(strings[i]))
    }

    var tree = [null,{},[]]
    var stack = [[tree,-1]]
    for (var i = 0; i < parts.length; i++) {
      var cur = stack[stack.length-1][0]
      var p = parts[i], s = p[0]
      if (s === OPEN && /^\//.test(p[1])) {
        var ix = stack[stack.length-1][1]
        if (stack.length > 1) {
          stack.pop()
          stack[stack.length-1][0][2][ix] = h(
            cur[0], cur[1], cur[2].length ? cur[2] : undefined
          )
        }
      } else if (s === OPEN) {
        var c = [p[1],{},[]]
        cur[2].push(c)
        stack.push([c,cur[2].length-1])
      } else if (s === ATTR_KEY || (s === VAR && p[1] === ATTR_KEY)) {
        var key = ''
        var copyKey
        for (; i < parts.length; i++) {
          if (parts[i][0] === ATTR_KEY) {
            key = concat(key, parts[i][1])
          } else if (parts[i][0] === VAR && parts[i][1] === ATTR_KEY) {
            if (typeof parts[i][2] === 'object' && !key) {
              for (copyKey in parts[i][2]) {
                if (parts[i][2].hasOwnProperty(copyKey) && !cur[1][copyKey]) {
                  cur[1][copyKey] = parts[i][2][copyKey]
                }
              }
            } else {
              key = concat(key, parts[i][2])
            }
          } else break
        }
        if (parts[i][0] === ATTR_EQ) i++
        var j = i
        for (; i < parts.length; i++) {
          if (parts[i][0] === ATTR_VALUE || parts[i][0] === ATTR_KEY) {
            if (!cur[1][key]) cur[1][key] = strfn(parts[i][1])
            else parts[i][1]==="" || (cur[1][key] = concat(cur[1][key], parts[i][1]));
          } else if (parts[i][0] === VAR
          && (parts[i][1] === ATTR_VALUE || parts[i][1] === ATTR_KEY)) {
            if (!cur[1][key]) cur[1][key] = strfn(parts[i][2])
            else parts[i][2]==="" || (cur[1][key] = concat(cur[1][key], parts[i][2]));
          } else {
            if (key.length && !cur[1][key] && i === j
            && (parts[i][0] === CLOSE || parts[i][0] === ATTR_BREAK)) {
              // https://html.spec.whatwg.org/multipage/infrastructure.html#boolean-attributes
              // empty string is falsy, not well behaved value in browser
              cur[1][key] = key.toLowerCase()
            }
            if (parts[i][0] === CLOSE) {
              i--
            }
            break
          }
        }
      } else if (s === ATTR_KEY) {
        cur[1][p[1]] = true
      } else if (s === VAR && p[1] === ATTR_KEY) {
        cur[1][p[2]] = true
      } else if (s === CLOSE) {
        if (selfClosing(cur[0]) && stack.length) {
          var ix = stack[stack.length-1][1]
          stack.pop()
          stack[stack.length-1][0][2][ix] = h(
            cur[0], cur[1], cur[2].length ? cur[2] : undefined
          )
        }
      } else if (s === VAR && p[1] === TEXT) {
        if (p[2] === undefined || p[2] === null) p[2] = ''
        else if (!p[2]) p[2] = concat('', p[2])
        if (Array.isArray(p[2][0])) {
          cur[2].push.apply(cur[2], p[2])
        } else {
          cur[2].push(p[2])
        }
      } else if (s === TEXT) {
        cur[2].push(p[1])
      } else if (s === ATTR_EQ || s === ATTR_BREAK) {
        // no-op
      } else {
        throw new Error('unhandled: ' + s)
      }
    }

    if (tree[2].length > 1 && /^\s*$/.test(tree[2][0])) {
      tree[2].shift()
    }

    if (tree[2].length > 2
    || (tree[2].length === 2 && /\S/.test(tree[2][1]))) {
      throw new Error(
        'multiple root elements must be wrapped in an enclosing tag'
      )
    }
    if (Array.isArray(tree[2][0]) && typeof tree[2][0][0] === 'string'
    && Array.isArray(tree[2][0][2])) {
      tree[2][0] = h(tree[2][0][0], tree[2][0][1], tree[2][0][2])
    }
    return tree[2][0]

    function parse (str) {
      var res = []
      if (state === ATTR_VALUE_W) state = ATTR
      for (var i = 0; i < str.length; i++) {
        var c = str.charAt(i)
        if (state === TEXT && c === '<') {
          if (reg.length) res.push([TEXT, reg])
          reg = ''
          state = OPEN
        } else if (c === '>' && !quot(state) && state !== COMMENT) {
          if (state === OPEN && reg.length) {
            res.push([OPEN,reg])
          } else if (state === ATTR_KEY) {
            res.push([ATTR_KEY,reg])
          } else if (state === ATTR_VALUE && reg.length) {
            res.push([ATTR_VALUE,reg])
          }
          res.push([CLOSE])
          reg = ''
          state = TEXT
        } else if (state === COMMENT && /-$/.test(reg) && c === '-') {
          if (opts.comments) {
            res.push([ATTR_VALUE,reg.substr(0, reg.length - 1)],[CLOSE])
          }
          reg = ''
          state = TEXT
        } else if (state === OPEN && /^!--$/.test(reg)) {
          if (opts.comments) {
            res.push([OPEN, reg],[ATTR_KEY,'comment'],[ATTR_EQ])
          }
          reg = c
          state = COMMENT
        } else if (state === TEXT || state === COMMENT) {
          reg += c
        } else if (state === OPEN && c === '/' && reg.length) {
          // no-op, self closing tag without a space <br/>
        } else if (state === OPEN && /\s/.test(c)) {
          if (reg.length) {
            res.push([OPEN, reg])
          }
          reg = ''
          state = ATTR
        } else if (state === OPEN) {
          reg += c
        } else if (state === ATTR && /[^\s"'=/]/.test(c)) {
          state = ATTR_KEY
          reg = c
        } else if (state === ATTR && /\s/.test(c)) {
          if (reg.length) res.push([ATTR_KEY,reg])
          res.push([ATTR_BREAK])
        } else if (state === ATTR_KEY && /\s/.test(c)) {
          res.push([ATTR_KEY,reg])
          reg = ''
          state = ATTR_KEY_W
        } else if (state === ATTR_KEY && c === '=') {
          res.push([ATTR_KEY,reg],[ATTR_EQ])
          reg = ''
          state = ATTR_VALUE_W
        } else if (state === ATTR_KEY) {
          reg += c
        } else if ((state === ATTR_KEY_W || state === ATTR) && c === '=') {
          res.push([ATTR_EQ])
          state = ATTR_VALUE_W
        } else if ((state === ATTR_KEY_W || state === ATTR) && !/\s/.test(c)) {
          res.push([ATTR_BREAK])
          if (/[\w-]/.test(c)) {
            reg += c
            state = ATTR_KEY
          } else state = ATTR
        } else if (state === ATTR_VALUE_W && c === '"') {
          state = ATTR_VALUE_DQ
        } else if (state === ATTR_VALUE_W && c === "'") {
          state = ATTR_VALUE_SQ
        } else if (state === ATTR_VALUE_DQ && c === '"') {
          res.push([ATTR_VALUE,reg],[ATTR_BREAK])
          reg = ''
          state = ATTR
        } else if (state === ATTR_VALUE_SQ && c === "'") {
          res.push([ATTR_VALUE,reg],[ATTR_BREAK])
          reg = ''
          state = ATTR
        } else if (state === ATTR_VALUE_W && !/\s/.test(c)) {
          state = ATTR_VALUE
          i--
        } else if (state === ATTR_VALUE && /\s/.test(c)) {
          res.push([ATTR_VALUE,reg],[ATTR_BREAK])
          reg = ''
          state = ATTR
        } else if (state === ATTR_VALUE || state === ATTR_VALUE_SQ
        || state === ATTR_VALUE_DQ) {
          reg += c
        }
      }
      if (state === TEXT && reg.length) {
        res.push([TEXT,reg])
        reg = ''
      } else if (state === ATTR_VALUE && reg.length) {
        res.push([ATTR_VALUE,reg])
        reg = ''
      } else if (state === ATTR_VALUE_DQ && reg.length) {
        res.push([ATTR_VALUE,reg])
        reg = ''
      } else if (state === ATTR_VALUE_SQ && reg.length) {
        res.push([ATTR_VALUE,reg])
        reg = ''
      } else if (state === ATTR_KEY) {
        res.push([ATTR_KEY,reg])
        reg = ''
      }
      return res
    }
  }

  function strfn (x) {
    if (typeof x === 'function') return x
    else if (typeof x === 'string') return x
    else if (x && typeof x === 'object') return x
    else return concat('', x)
  }
}

function quot (state) {
  return state === ATTR_VALUE_SQ || state === ATTR_VALUE_DQ
}

var hasOwn = Object.prototype.hasOwnProperty
function has (obj, key) { return hasOwn.call(obj, key) }

var closeRE = RegExp('^(' + [
  'area', 'base', 'basefont', 'bgsound', 'br', 'col', 'command', 'embed',
  'frame', 'hr', 'img', 'input', 'isindex', 'keygen', 'link', 'meta', 'param',
  'source', 'track', 'wbr', '!--',
  // SVG TAGS
  'animate', 'animateTransform', 'circle', 'cursor', 'desc', 'ellipse',
  'feBlend', 'feColorMatrix', 'feComposite',
  'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap',
  'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR',
  'feGaussianBlur', 'feImage', 'feMergeNode', 'feMorphology',
  'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile',
  'feTurbulence', 'font-face-format', 'font-face-name', 'font-face-uri',
  'glyph', 'glyphRef', 'hkern', 'image', 'line', 'missing-glyph', 'mpath',
  'path', 'polygon', 'polyline', 'rect', 'set', 'stop', 'tref', 'use', 'view',
  'vkern'
].join('|') + ')(?:[\.#][a-zA-Z0-9\u007F-\uFFFF_:-]+)*$')
function selfClosing (tag) { return closeRE.test(tag) }

},{"hyperscript-attribute-to-property":342}],344:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],345:[function(require,module,exports){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}

},{}],346:[function(require,module,exports){
(function(){
  var crypt = require('crypt'),
      utf8 = require('charenc').utf8,
      isBuffer = require('is-buffer'),
      bin = require('charenc').bin,

  // The core
  md5 = function (message, options) {
    // Convert to byte array
    if (message.constructor == String)
      if (options && options.encoding === 'binary')
        message = bin.stringToBytes(message);
      else
        message = utf8.stringToBytes(message);
    else if (isBuffer(message))
      message = Array.prototype.slice.call(message, 0);
    else if (!Array.isArray(message))
      message = message.toString();
    // else, assume byte array already

    var m = crypt.bytesToWords(message),
        l = message.length * 8,
        a =  1732584193,
        b = -271733879,
        c = -1732584194,
        d =  271733878;

    // Swap endian
    for (var i = 0; i < m.length; i++) {
      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |
             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;
    }

    // Padding
    m[l >>> 5] |= 0x80 << (l % 32);
    m[(((l + 64) >>> 9) << 4) + 14] = l;

    // Method shortcuts
    var FF = md5._ff,
        GG = md5._gg,
        HH = md5._hh,
        II = md5._ii;

    for (var i = 0; i < m.length; i += 16) {

      var aa = a,
          bb = b,
          cc = c,
          dd = d;

      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);
      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);
      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);
      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);
      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);
      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);
      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);
      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);
      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);
      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);
      c = FF(c, d, a, b, m[i+10], 17, -42063);
      b = FF(b, c, d, a, m[i+11], 22, -1990404162);
      a = FF(a, b, c, d, m[i+12],  7,  1804603682);
      d = FF(d, a, b, c, m[i+13], 12, -40341101);
      c = FF(c, d, a, b, m[i+14], 17, -1502002290);
      b = FF(b, c, d, a, m[i+15], 22,  1236535329);

      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);
      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);
      c = GG(c, d, a, b, m[i+11], 14,  643717713);
      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);
      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);
      d = GG(d, a, b, c, m[i+10],  9,  38016083);
      c = GG(c, d, a, b, m[i+15], 14, -660478335);
      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);
      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);
      d = GG(d, a, b, c, m[i+14],  9, -1019803690);
      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);
      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);
      a = GG(a, b, c, d, m[i+13],  5, -1444681467);
      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);
      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);
      b = GG(b, c, d, a, m[i+12], 20, -1926607734);

      a = HH(a, b, c, d, m[i+ 5],  4, -378558);
      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);
      c = HH(c, d, a, b, m[i+11], 16,  1839030562);
      b = HH(b, c, d, a, m[i+14], 23, -35309556);
      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);
      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);
      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);
      b = HH(b, c, d, a, m[i+10], 23, -1094730640);
      a = HH(a, b, c, d, m[i+13],  4,  681279174);
      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);
      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);
      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);
      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);
      d = HH(d, a, b, c, m[i+12], 11, -421815835);
      c = HH(c, d, a, b, m[i+15], 16,  530742520);
      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);

      a = II(a, b, c, d, m[i+ 0],  6, -198630844);
      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);
      c = II(c, d, a, b, m[i+14], 15, -1416354905);
      b = II(b, c, d, a, m[i+ 5], 21, -57434055);
      a = II(a, b, c, d, m[i+12],  6,  1700485571);
      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);
      c = II(c, d, a, b, m[i+10], 15, -1051523);
      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);
      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);
      d = II(d, a, b, c, m[i+15], 10, -30611744);
      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);
      b = II(b, c, d, a, m[i+13], 21,  1309151649);
      a = II(a, b, c, d, m[i+ 4],  6, -145523070);
      d = II(d, a, b, c, m[i+11], 10, -1120210379);
      c = II(c, d, a, b, m[i+ 2], 15,  718787259);
      b = II(b, c, d, a, m[i+ 9], 21, -343485551);

      a = (a + aa) >>> 0;
      b = (b + bb) >>> 0;
      c = (c + cc) >>> 0;
      d = (d + dd) >>> 0;
    }

    return crypt.endian([a, b, c, d]);
  };

  // Auxiliary functions
  md5._ff  = function (a, b, c, d, x, s, t) {
    var n = a + (b & c | ~b & d) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };
  md5._gg  = function (a, b, c, d, x, s, t) {
    var n = a + (b & d | c & ~d) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };
  md5._hh  = function (a, b, c, d, x, s, t) {
    var n = a + (b ^ c ^ d) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };
  md5._ii  = function (a, b, c, d, x, s, t) {
    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };

  // Package private blocksize
  md5._blocksize = 16;
  md5._digestsize = 16;

  module.exports = function (message, options) {
    if (message === undefined || message === null)
      throw new Error('Illegal argument ' + message);

    var digestbytes = crypt.wordsToBytes(md5(message, options));
    return options && options.asBytes ? digestbytes :
        options && options.asString ? bin.bytesToString(digestbytes) :
        crypt.bytesToHex(digestbytes);
  };

})();

},{"charenc":12,"crypt":337,"is-buffer":345}],347:[function(require,module,exports){
'use strict';

var range; // Create a range object for efficently rendering strings to elements.
var NS_XHTML = 'http://www.w3.org/1999/xhtml';

var doc = typeof document === 'undefined' ? undefined : document;

var testEl = doc ?
    doc.body || doc.createElement('div') :
    {};

// Fixes <https://github.com/patrick-steele-idem/morphdom/issues/32>
// (IE7+ support) <=IE7 does not support el.hasAttribute(name)
var actualHasAttributeNS;

if (testEl.hasAttributeNS) {
    actualHasAttributeNS = function(el, namespaceURI, name) {
        return el.hasAttributeNS(namespaceURI, name);
    };
} else if (testEl.hasAttribute) {
    actualHasAttributeNS = function(el, namespaceURI, name) {
        return el.hasAttribute(name);
    };
} else {
    actualHasAttributeNS = function(el, namespaceURI, name) {
        return el.getAttributeNode(namespaceURI, name) != null;
    };
}

var hasAttributeNS = actualHasAttributeNS;


function toElement(str) {
    if (!range && doc.createRange) {
        range = doc.createRange();
        range.selectNode(doc.body);
    }

    var fragment;
    if (range && range.createContextualFragment) {
        fragment = range.createContextualFragment(str);
    } else {
        fragment = doc.createElement('body');
        fragment.innerHTML = str;
    }
    return fragment.childNodes[0];
}

/**
 * Returns true if two node's names are the same.
 *
 * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same
 *       nodeName and different namespace URIs.
 *
 * @param {Element} a
 * @param {Element} b The target element
 * @return {boolean}
 */
function compareNodeNames(fromEl, toEl) {
    var fromNodeName = fromEl.nodeName;
    var toNodeName = toEl.nodeName;

    if (fromNodeName === toNodeName) {
        return true;
    }

    if (toEl.actualize &&
        fromNodeName.charCodeAt(0) < 91 && /* from tag name is upper case */
        toNodeName.charCodeAt(0) > 90 /* target tag name is lower case */) {
        // If the target element is a virtual DOM node then we may need to normalize the tag name
        // before comparing. Normal HTML elements that are in the "http://www.w3.org/1999/xhtml"
        // are converted to upper case
        return fromNodeName === toNodeName.toUpperCase();
    } else {
        return false;
    }
}

/**
 * Create an element, optionally with a known namespace URI.
 *
 * @param {string} name the element name, e.g. 'div' or 'svg'
 * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of
 * its `xmlns` attribute or its inferred namespace.
 *
 * @return {Element}
 */
function createElementNS(name, namespaceURI) {
    return !namespaceURI || namespaceURI === NS_XHTML ?
        doc.createElement(name) :
        doc.createElementNS(namespaceURI, name);
}

/**
 * Copies the children of one DOM element to another DOM element
 */
function moveChildren(fromEl, toEl) {
    var curChild = fromEl.firstChild;
    while (curChild) {
        var nextChild = curChild.nextSibling;
        toEl.appendChild(curChild);
        curChild = nextChild;
    }
    return toEl;
}

function morphAttrs(fromNode, toNode) {
    var attrs = toNode.attributes;
    var i;
    var attr;
    var attrName;
    var attrNamespaceURI;
    var attrValue;
    var fromValue;

    for (i = attrs.length - 1; i >= 0; --i) {
        attr = attrs[i];
        attrName = attr.name;
        attrNamespaceURI = attr.namespaceURI;
        attrValue = attr.value;

        if (attrNamespaceURI) {
            attrName = attr.localName || attrName;
            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);

            if (fromValue !== attrValue) {
                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);
            }
        } else {
            fromValue = fromNode.getAttribute(attrName);

            if (fromValue !== attrValue) {
                fromNode.setAttribute(attrName, attrValue);
            }
        }
    }

    // Remove any extra attributes found on the original DOM element that
    // weren't found on the target element.
    attrs = fromNode.attributes;

    for (i = attrs.length - 1; i >= 0; --i) {
        attr = attrs[i];
        if (attr.specified !== false) {
            attrName = attr.name;
            attrNamespaceURI = attr.namespaceURI;

            if (attrNamespaceURI) {
                attrName = attr.localName || attrName;

                if (!hasAttributeNS(toNode, attrNamespaceURI, attrName)) {
                    fromNode.removeAttributeNS(attrNamespaceURI, attrName);
                }
            } else {
                if (!hasAttributeNS(toNode, null, attrName)) {
                    fromNode.removeAttribute(attrName);
                }
            }
        }
    }
}

function syncBooleanAttrProp(fromEl, toEl, name) {
    if (fromEl[name] !== toEl[name]) {
        fromEl[name] = toEl[name];
        if (fromEl[name]) {
            fromEl.setAttribute(name, '');
        } else {
            fromEl.removeAttribute(name, '');
        }
    }
}

var specialElHandlers = {
    /**
     * Needed for IE. Apparently IE doesn't think that "selected" is an
     * attribute when reading over the attributes using selectEl.attributes
     */
    OPTION: function(fromEl, toEl) {
        syncBooleanAttrProp(fromEl, toEl, 'selected');
    },
    /**
     * The "value" attribute is special for the <input> element since it sets
     * the initial value. Changing the "value" attribute without changing the
     * "value" property will have no effect since it is only used to the set the
     * initial value.  Similar for the "checked" attribute, and "disabled".
     */
    INPUT: function(fromEl, toEl) {
        syncBooleanAttrProp(fromEl, toEl, 'checked');
        syncBooleanAttrProp(fromEl, toEl, 'disabled');

        if (fromEl.value !== toEl.value) {
            fromEl.value = toEl.value;
        }

        if (!hasAttributeNS(toEl, null, 'value')) {
            fromEl.removeAttribute('value');
        }
    },

    TEXTAREA: function(fromEl, toEl) {
        var newValue = toEl.value;
        if (fromEl.value !== newValue) {
            fromEl.value = newValue;
        }

        var firstChild = fromEl.firstChild;
        if (firstChild) {
            // Needed for IE. Apparently IE sets the placeholder as the
            // node value and vise versa. This ignores an empty update.
            var oldValue = firstChild.nodeValue;

            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {
                return;
            }

            firstChild.nodeValue = newValue;
        }
    },
    SELECT: function(fromEl, toEl) {
        if (!hasAttributeNS(toEl, null, 'multiple')) {
            var selectedIndex = -1;
            var i = 0;
            var curChild = toEl.firstChild;
            while(curChild) {
                var nodeName = curChild.nodeName;
                if (nodeName && nodeName.toUpperCase() === 'OPTION') {
                    if (hasAttributeNS(curChild, null, 'selected')) {
                        selectedIndex = i;
                        break;
                    }
                    i++;
                }
                curChild = curChild.nextSibling;
            }

            fromEl.selectedIndex = i;
        }
    }
};

var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;

function noop() {}

function defaultGetNodeKey(node) {
    return node.id;
}

function morphdomFactory(morphAttrs) {

    return function morphdom(fromNode, toNode, options) {
        if (!options) {
            options = {};
        }

        if (typeof toNode === 'string') {
            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {
                var toNodeHtml = toNode;
                toNode = doc.createElement('html');
                toNode.innerHTML = toNodeHtml;
            } else {
                toNode = toElement(toNode);
            }
        }

        var getNodeKey = options.getNodeKey || defaultGetNodeKey;
        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;
        var onNodeAdded = options.onNodeAdded || noop;
        var onBeforeElUpdated = options.onBeforeElUpdated || noop;
        var onElUpdated = options.onElUpdated || noop;
        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;
        var onNodeDiscarded = options.onNodeDiscarded || noop;
        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;
        var childrenOnly = options.childrenOnly === true;

        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.
        var fromNodesLookup = {};
        var keyedRemovalList;

        function addKeyedRemoval(key) {
            if (keyedRemovalList) {
                keyedRemovalList.push(key);
            } else {
                keyedRemovalList = [key];
            }
        }

        function walkDiscardedChildNodes(node, skipKeyedNodes) {
            if (node.nodeType === ELEMENT_NODE) {
                var curChild = node.firstChild;
                while (curChild) {

                    var key = undefined;

                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {
                        // If we are skipping keyed nodes then we add the key
                        // to a list so that it can be handled at the very end.
                        addKeyedRemoval(key);
                    } else {
                        // Only report the node as discarded if it is not keyed. We do this because
                        // at the end we loop through all keyed elements that were unmatched
                        // and then discard them in one final pass.
                        onNodeDiscarded(curChild);
                        if (curChild.firstChild) {
                            walkDiscardedChildNodes(curChild, skipKeyedNodes);
                        }
                    }

                    curChild = curChild.nextSibling;
                }
            }
        }

        /**
         * Removes a DOM node out of the original DOM
         *
         * @param  {Node} node The node to remove
         * @param  {Node} parentNode The nodes parent
         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.
         * @return {undefined}
         */
        function removeNode(node, parentNode, skipKeyedNodes) {
            if (onBeforeNodeDiscarded(node) === false) {
                return;
            }

            if (parentNode) {
                parentNode.removeChild(node);
            }

            onNodeDiscarded(node);
            walkDiscardedChildNodes(node, skipKeyedNodes);
        }

        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future
        // function indexTree(root) {
        //     var treeWalker = document.createTreeWalker(
        //         root,
        //         NodeFilter.SHOW_ELEMENT);
        //
        //     var el;
        //     while((el = treeWalker.nextNode())) {
        //         var key = getNodeKey(el);
        //         if (key) {
        //             fromNodesLookup[key] = el;
        //         }
        //     }
        // }

        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future
        //
        // function indexTree(node) {
        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);
        //     var el;
        //     while((el = nodeIterator.nextNode())) {
        //         var key = getNodeKey(el);
        //         if (key) {
        //             fromNodesLookup[key] = el;
        //         }
        //     }
        // }

        function indexTree(node) {
            if (node.nodeType === ELEMENT_NODE) {
                var curChild = node.firstChild;
                while (curChild) {
                    var key = getNodeKey(curChild);
                    if (key) {
                        fromNodesLookup[key] = curChild;
                    }

                    // Walk recursively
                    indexTree(curChild);

                    curChild = curChild.nextSibling;
                }
            }
        }

        indexTree(fromNode);

        function handleNodeAdded(el) {
            onNodeAdded(el);

            var curChild = el.firstChild;
            while (curChild) {
                var nextSibling = curChild.nextSibling;

                var key = getNodeKey(curChild);
                if (key) {
                    var unmatchedFromEl = fromNodesLookup[key];
                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {
                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);
                        morphEl(unmatchedFromEl, curChild);
                    }
                }

                handleNodeAdded(curChild);
                curChild = nextSibling;
            }
        }

        function morphEl(fromEl, toEl, childrenOnly) {
            var toElKey = getNodeKey(toEl);
            var curFromNodeKey;

            if (toElKey) {
                // If an element with an ID is being morphed then it is will be in the final
                // DOM so clear it out of the saved elements collection
                delete fromNodesLookup[toElKey];
            }

            if (toNode.isSameNode && toNode.isSameNode(fromNode)) {
                return;
            }

            if (!childrenOnly) {
                if (onBeforeElUpdated(fromEl, toEl) === false) {
                    return;
                }

                morphAttrs(fromEl, toEl);
                onElUpdated(fromEl);

                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {
                    return;
                }
            }

            if (fromEl.nodeName !== 'TEXTAREA') {
                var curToNodeChild = toEl.firstChild;
                var curFromNodeChild = fromEl.firstChild;
                var curToNodeKey;

                var fromNextSibling;
                var toNextSibling;
                var matchingFromEl;

                outer: while (curToNodeChild) {
                    toNextSibling = curToNodeChild.nextSibling;
                    curToNodeKey = getNodeKey(curToNodeChild);

                    while (curFromNodeChild) {
                        fromNextSibling = curFromNodeChild.nextSibling;

                        if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {
                            curToNodeChild = toNextSibling;
                            curFromNodeChild = fromNextSibling;
                            continue outer;
                        }

                        curFromNodeKey = getNodeKey(curFromNodeChild);

                        var curFromNodeType = curFromNodeChild.nodeType;

                        var isCompatible = undefined;

                        if (curFromNodeType === curToNodeChild.nodeType) {
                            if (curFromNodeType === ELEMENT_NODE) {
                                // Both nodes being compared are Element nodes

                                if (curToNodeKey) {
                                    // The target node has a key so we want to match it up with the correct element
                                    // in the original DOM tree
                                    if (curToNodeKey !== curFromNodeKey) {
                                        // The current element in the original DOM tree does not have a matching key so
                                        // let's check our lookup to see if there is a matching element in the original
                                        // DOM tree
                                        if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {
                                            if (curFromNodeChild.nextSibling === matchingFromEl) {
                                                // Special case for single element removals. To avoid removing the original
                                                // DOM node out of the tree (since that can break CSS transitions, etc.),
                                                // we will instead discard the current node and wait until the next
                                                // iteration to properly match up the keyed target element with its matching
                                                // element in the original tree
                                                isCompatible = false;
                                            } else {
                                                // We found a matching keyed element somewhere in the original DOM tree.
                                                // Let's moving the original DOM node into the current position and morph
                                                // it.

                                                // NOTE: We use insertBefore instead of replaceChild because we want to go through
                                                // the `removeNode()` function for the node that is being discarded so that
                                                // all lifecycle hooks are correctly invoked
                                                fromEl.insertBefore(matchingFromEl, curFromNodeChild);

                                                fromNextSibling = curFromNodeChild.nextSibling;

                                                if (curFromNodeKey) {
                                                    // Since the node is keyed it might be matched up later so we defer
                                                    // the actual removal to later
                                                    addKeyedRemoval(curFromNodeKey);
                                                } else {
                                                    // NOTE: we skip nested keyed nodes from being removed since there is
                                                    //       still a chance they will be matched up later
                                                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);
                                                }

                                                curFromNodeChild = matchingFromEl;
                                            }
                                        } else {
                                            // The nodes are not compatible since the "to" node has a key and there
                                            // is no matching keyed node in the source tree
                                            isCompatible = false;
                                        }
                                    }
                                } else if (curFromNodeKey) {
                                    // The original has a key
                                    isCompatible = false;
                                }

                                isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);
                                if (isCompatible) {
                                    // We found compatible DOM elements so transform
                                    // the current "from" node to match the current
                                    // target DOM node.
                                    morphEl(curFromNodeChild, curToNodeChild);
                                }

                            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {
                                // Both nodes being compared are Text or Comment nodes
                                isCompatible = true;
                                // Simply update nodeValue on the original node to
                                // change the text value
                                if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {
                                    curFromNodeChild.nodeValue = curToNodeChild.nodeValue;
                                }

                            }
                        }

                        if (isCompatible) {
                            // Advance both the "to" child and the "from" child since we found a match
                            curToNodeChild = toNextSibling;
                            curFromNodeChild = fromNextSibling;
                            continue outer;
                        }

                        // No compatible match so remove the old node from the DOM and continue trying to find a
                        // match in the original DOM. However, we only do this if the from node is not keyed
                        // since it is possible that a keyed node might match up with a node somewhere else in the
                        // target tree and we don't want to discard it just yet since it still might find a
                        // home in the final DOM tree. After everything is done we will remove any keyed nodes
                        // that didn't find a home
                        if (curFromNodeKey) {
                            // Since the node is keyed it might be matched up later so we defer
                            // the actual removal to later
                            addKeyedRemoval(curFromNodeKey);
                        } else {
                            // NOTE: we skip nested keyed nodes from being removed since there is
                            //       still a chance they will be matched up later
                            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);
                        }

                        curFromNodeChild = fromNextSibling;
                    }

                    // If we got this far then we did not find a candidate match for
                    // our "to node" and we exhausted all of the children "from"
                    // nodes. Therefore, we will just append the current "to" node
                    // to the end
                    if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {
                        fromEl.appendChild(matchingFromEl);
                        morphEl(matchingFromEl, curToNodeChild);
                    } else {
                        var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);
                        if (onBeforeNodeAddedResult !== false) {
                            if (onBeforeNodeAddedResult) {
                                curToNodeChild = onBeforeNodeAddedResult;
                            }

                            if (curToNodeChild.actualize) {
                                curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);
                            }
                            fromEl.appendChild(curToNodeChild);
                            handleNodeAdded(curToNodeChild);
                        }
                    }

                    curToNodeChild = toNextSibling;
                    curFromNodeChild = fromNextSibling;
                }

                // We have processed all of the "to nodes". If curFromNodeChild is
                // non-null then we still have some from nodes left over that need
                // to be removed
                while (curFromNodeChild) {
                    fromNextSibling = curFromNodeChild.nextSibling;
                    if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {
                        // Since the node is keyed it might be matched up later so we defer
                        // the actual removal to later
                        addKeyedRemoval(curFromNodeKey);
                    } else {
                        // NOTE: we skip nested keyed nodes from being removed since there is
                        //       still a chance they will be matched up later
                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);
                    }
                    curFromNodeChild = fromNextSibling;
                }
            }

            var specialElHandler = specialElHandlers[fromEl.nodeName];
            if (specialElHandler) {
                specialElHandler(fromEl, toEl);
            }
        } // END: morphEl(...)

        var morphedNode = fromNode;
        var morphedNodeType = morphedNode.nodeType;
        var toNodeType = toNode.nodeType;

        if (!childrenOnly) {
            // Handle the case where we are given two DOM nodes that are not
            // compatible (e.g. <div> --> <span> or <div> --> TEXT)
            if (morphedNodeType === ELEMENT_NODE) {
                if (toNodeType === ELEMENT_NODE) {
                    if (!compareNodeNames(fromNode, toNode)) {
                        onNodeDiscarded(fromNode);
                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));
                    }
                } else {
                    // Going from an element node to a text node
                    morphedNode = toNode;
                }
            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node
                if (toNodeType === morphedNodeType) {
                    if (morphedNode.nodeValue !== toNode.nodeValue) {
                        morphedNode.nodeValue = toNode.nodeValue;
                    }

                    return morphedNode;
                } else {
                    // Text node to something else
                    morphedNode = toNode;
                }
            }
        }

        if (morphedNode === toNode) {
            // The "to node" was not compatible with the "from node" so we had to
            // toss out the "from node" and use the "to node"
            onNodeDiscarded(fromNode);
        } else {
            morphEl(morphedNode, toNode, childrenOnly);

            // We now need to loop over any keyed nodes that might need to be
            // removed. We only do the removal if we know that the keyed node
            // never found a match. When a keyed node is matched up we remove
            // it out of fromNodesLookup and we use fromNodesLookup to determine
            // if a keyed node has been matched up or not
            if (keyedRemovalList) {
                for (var i=0, len=keyedRemovalList.length; i<len; i++) {
                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];
                    if (elToRemove) {
                        removeNode(elToRemove, elToRemove.parentNode, false);
                    }
                }
            }
        }

        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {
            if (morphedNode.actualize) {
                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);
            }
            // If we had to swap out the from node with a new node because the old
            // node was not compatible with the target node then we need to
            // replace the old DOM node in the original DOM tree. This is only
            // possible if the original DOM node was part of a DOM tree which
            // we know is the case if it has a parent node.
            fromNode.parentNode.replaceChild(morphedNode, fromNode);
        }

        return morphedNode;
    };
}

var morphdom = morphdomFactory(morphAttrs);

module.exports = morphdom;

},{}],348:[function(require,module,exports){
module.exports = require("./lib/main")
},{"./lib/main":352}],349:[function(require,module,exports){
// Generated by CoffeeScript 1.10.0
(function() {
  var IGNORE_KEYS, parseConnectionString, parseConnectionURI, qs, resolveConnectionString, url,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  url = require('url');

  qs = require('querystring');

  IGNORE_KEYS = ['stream'];

  parseConnectionURI = function(uri) {
    var instance, key, object, parsed, password, path, ref, user, value;
    parsed = url.parse(uri);
    path = parsed.pathname.substr(1).split('/');
    if (path.length > 1) {
      instance = path.shift();
    }
    if (parsed.auth) {
      parsed.auth = parsed.auth.split(':');
      user = parsed.auth.shift();
      password = parsed.auth.join(':');
    }
    object = {
      server: "" + parsed.hostname + (parsed.port ? "," + parsed.port : instance ? "\\" + instance : ""),
      uid: user || '',
      pwd: password || '',
      database: path[0]
    };
    if (parsed.query) {
      ref = qs.parse(parsed.query);
      for (key in ref) {
        value = ref[key];
        if (key === 'domain') {
          object.uid = value + "\\" + object.uid;
        } else {
          object[key] = value;
        }
      }
    }
    Object.defineProperty(object, 'toString', {
      value: function() {
        return ((function() {
          var results;
          results = [];
          for (key in this) {
            value = this[key];
            if (indexOf.call(IGNORE_KEYS, key) < 0) {
              results.push(key + "={" + value + "}");
            }
          }
          return results;
        }).call(this)).join(';');
      }
    });
    return object;
  };

  parseConnectionString = function(string) {
    var buffer, char, cursor, original, param, parsed, parsing, quotes;
    cursor = 0;
    parsing = 'name';
    param = null;
    buffer = '';
    quotes = null;
    parsed = {};
    original = {};
    Object.defineProperty(parsed, '__original__', {
      value: original
    });
    Object.defineProperty(parsed, 'toString', {
      value: function() {
        var key, value;
        return ((function() {
          var ref, ref1, ref2, ref3, results;
          results = [];
          for (key in this) {
            value = this[key];
            if (indexOf.call(IGNORE_KEYS, key) < 0) {
              results.push(original[key].name + "=" + ((ref = (ref1 = original[key].escape) != null ? ref1[0] : void 0) != null ? ref : '') + value + ((ref2 = (ref3 = original[key].escape) != null ? ref3[1] : void 0) != null ? ref2 : ''));
            }
          }
          return results;
        }).call(this)).join(';');
      }
    });
    while (cursor < string.length) {
      char = string.charAt(cursor);
      switch (char) {
        case '=':
          if (parsing === 'name') {
            buffer = buffer.trim();
            param = buffer.toLowerCase();
            original[param] = {
              name: buffer
            };
            parsing = 'value';
            buffer = '';
          } else {
            buffer += char;
          }
          break;
        case '\'':
        case '"':
          if (parsing === 'value') {
            if (!buffer.trim().length) {
              original[param].escape = [char, char];
              quotes = char;
              buffer = '';
            } else {
              if (quotes) {
                if (char === quotes) {
                  if (char === string.charAt(cursor + 1)) {
                    buffer += char;
                    cursor++;
                  } else {
                    parsed[param] = buffer;
                    param = null;
                    parsing = null;
                    buffer = '';
                    quotes = null;
                  }
                } else {
                  buffer += char;
                }
              } else {
                buffer += char;
              }
            }
          } else {
            throw new Error("Invalid connection string.");
          }
          break;
        case '{':
          if (parsing === 'value') {
            if (!buffer.trim().length) {
              original[param].escape = ['{', '}'];
              quotes = '{}';
              buffer = '';
            } else {
              buffer += char;
            }
          } else {
            throw new Error("Invalid connection string.");
          }
          break;
        case '}':
          if (parsing === 'value') {
            if (quotes === '{}') {
              parsed[param] = buffer;
              param = null;
              parsing = null;
              buffer = '';
              quotes = null;
            } else {
              buffer += char;
            }
          } else {
            throw new Error("Invalid connection string.");
          }
          break;
        case ';':
          if (parsing === 'value') {
            if (quotes) {
              buffer += char;
            } else {
              parsed[param] = buffer;
              param = null;
              parsing = 'name';
              buffer = '';
            }
          } else {
            buffer = '';
            parsing = 'name';
          }
          break;
        default:
          buffer += char;
      }
      cursor++;
    }
    if (parsing === 'value') {
      parsed[param] = buffer;
    }
    return parsed;
  };

  resolveConnectionString = function(string) {
    var config, parsed, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref15, ref16, ref17, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, server, user;
    if (/^(mssql|tedious|msnodesql|tds)\:\/\//i.test(string)) {
      parsed = parseConnectionURI(string);
    } else {
      parsed = parseConnectionString(string);
    }
    if (parsed.driver === 'msnodesql') {
      parsed.driver = 'SQL Server Native Client 11.0';
      if ((ref = parsed.__original__) != null) {
        ref.driver = {
          name: 'Driver',
          escape: ['{', '}']
        };
      }
      return {
        driver: 'msnodesql',
        connectionString: parsed.toString()
      };
    }
    user = (ref1 = parsed.uid) != null ? ref1 : parsed['user id'];
    server = (ref2 = (ref3 = (ref4 = (ref5 = parsed.server) != null ? ref5 : parsed.address) != null ? ref4 : parsed.addr) != null ? ref3 : parsed['data source']) != null ? ref2 : parsed['network address'];
    config = {
      driver: parsed.driver,
      password: (ref6 = parsed.pwd) != null ? ref6 : parsed.password,
      database: (ref7 = parsed.database) != null ? ref7 : parsed['initial catalog'],
      connectionTimeout: (ref8 = (ref9 = (ref10 = parsed.connectionTimeout) != null ? ref10 : parsed.timeout) != null ? ref9 : parsed['connect timeout']) != null ? ref8 : parsed['connection timeout'],
      requestTimeout: (ref11 = parsed.requestTimeout) != null ? ref11 : parsed['request timeout'],
      stream: (ref12 = (ref13 = parsed.stream) != null ? ref13.toLowerCase() : void 0) === 'true' || ref12 === 'yes' || ref12 === '1',
      options: {
        encrypt: (ref14 = (ref15 = parsed.encrypt) != null ? ref15.toLowerCase() : void 0) === 'true' || ref14 === 'yes' || ref14 === '1'
      }
    };
    if (parsed.useUTC != null) {
      config.options.useUTC = (ref16 = parsed.useUTC.toLowerCase()) === 'true' || ref16 === 'yes' || ref16 === '1';
    }
    if (config.connectionTimeout != null) {
      config.connectionTimeout = parseInt(config.connectionTimeout);
    }
    if (config.requestTimeout != null) {
      config.requestTimeout = parseInt(config.requestTimeout);
    }
    if (/^(.*)\\(.*)$/.exec(user)) {
      config.domain = RegExp.$1;
      user = RegExp.$2;
    }
    if (server) {
      server = server.trim();
      if (/^np\:/i.test(server)) {
        throw new Error("Connection via Named Pipes is not supported.");
      }
      if (/^tcp\:/i.test(server)) {
        server = server.substr(4);
      }
      if (/^(.*)\\(.*)$/.exec(server)) {
        server = RegExp.$1;
        config.options.instanceName = RegExp.$2;
      }
      if (/^(.*),(.*)$/.exec(server)) {
        server = RegExp.$1.trim();
        config.port = parseInt(RegExp.$2.trim());
      }
      if ((ref17 = server.toLowerCase()) === '.' || ref17 === '(.)' || ref17 === '(localdb)' || ref17 === '(local)') {
        server = 'localhost';
      }
    }
    config.user = user;
    config.server = server;
    return config;
  };

  module.exports = {
    parse: parseConnectionString,
    resolve: resolveConnectionString
  };

}).call(this);

},{"querystring":368,"url":370}],350:[function(require,module,exports){
(function (Buffer){
// Generated by CoffeeScript 1.10.0
(function() {
  var TYPES, fn, key, value, zero;

  TYPES = {
    VarChar: function(length) {
      return {
        type: TYPES.VarChar,
        length: length
      };
    },
    NVarChar: function(length) {
      return {
        type: TYPES.NVarChar,
        length: length
      };
    },
    Text: function() {
      return {
        type: TYPES.Text
      };
    },
    Int: function() {
      return {
        type: TYPES.Int
      };
    },
    BigInt: function() {
      return {
        type: TYPES.BigInt
      };
    },
    TinyInt: function() {
      return {
        type: TYPES.TinyInt
      };
    },
    SmallInt: function() {
      return {
        type: TYPES.SmallInt
      };
    },
    Bit: function() {
      return {
        type: TYPES.Bit
      };
    },
    Float: function() {
      return {
        type: TYPES.Float
      };
    },
    Numeric: function(precision, scale) {
      return {
        type: TYPES.Numeric,
        precision: precision,
        scale: scale
      };
    },
    Decimal: function(precision, scale) {
      return {
        type: TYPES.Decimal,
        precision: precision,
        scale: scale
      };
    },
    Real: function() {
      return {
        type: TYPES.Real
      };
    },
    Date: function() {
      return {
        type: TYPES.Date
      };
    },
    DateTime: function() {
      return {
        type: TYPES.DateTime
      };
    },
    DateTime2: function(scale) {
      return {
        type: TYPES.DateTime2,
        scale: scale
      };
    },
    DateTimeOffset: function(scale) {
      return {
        type: TYPES.DateTimeOffset,
        scale: scale
      };
    },
    SmallDateTime: function() {
      return {
        type: TYPES.SmallDateTime
      };
    },
    Time: function(scale) {
      return {
        type: TYPES.Time,
        scale: scale
      };
    },
    UniqueIdentifier: function() {
      return {
        type: TYPES.UniqueIdentifier
      };
    },
    SmallMoney: function() {
      return {
        type: TYPES.SmallMoney
      };
    },
    Money: function() {
      return {
        type: TYPES.Money
      };
    },
    Binary: function(length) {
      return {
        type: TYPES.Binary,
        length: length
      };
    },
    VarBinary: function(length) {
      return {
        type: TYPES.VarBinary,
        length: length
      };
    },
    Image: function() {
      return {
        type: TYPES.Image
      };
    },
    Xml: function() {
      return {
        type: TYPES.Xml
      };
    },
    Char: function(length) {
      return {
        type: TYPES.Char,
        length: length
      };
    },
    NChar: function(length) {
      return {
        type: TYPES.NChar,
        length: length
      };
    },
    NText: function() {
      return {
        type: TYPES.NText
      };
    },
    TVP: function(tvpType) {
      return {
        type: TYPES.TVP,
        tvpType: tvpType
      };
    },
    UDT: function() {
      return {
        type: TYPES.UDT
      };
    },
    Geography: function() {
      return {
        type: TYPES.Geography
      };
    },
    Geometry: function() {
      return {
        type: TYPES.Geometry
      };
    },
    Variant: function() {
      return {
        type: TYPES.Variant
      };
    }
  };

  module.exports.TYPES = TYPES;

  module.exports.DECLARATIONS = {};

  fn = function(key, value) {
    return value.inspect = function() {
      return "[sql." + key + "]";
    };
  };
  for (key in TYPES) {
    value = TYPES[key];
    value.declaration = key.toLowerCase();
    module.exports.DECLARATIONS[value.declaration] = value;
    fn(key, value);
  }

  module.exports.declare = function(type, options) {
    var ref, ref1, ref2, ref3, ref4, ref5;
    switch (type) {
      case TYPES.VarChar:
      case TYPES.NVarChar:
      case TYPES.VarBinary:
        return type.declaration + " (" + (options.length > 8000 ? 'MAX' : (ref = options.length) != null ? ref : 'MAX') + ")";
      case TYPES.NVarChar:
        return type.declaration + " (" + (options.length > 4000 ? 'MAX' : (ref1 = options.length) != null ? ref1 : 'MAX') + ")";
      case TYPES.Char:
      case TYPES.NChar:
      case TYPES.Binary:
        return type.declaration + " (" + ((ref2 = options.length) != null ? ref2 : 1) + ")";
      case TYPES.Decimal:
      case TYPES.Numeric:
        return type.declaration + " (" + ((ref3 = options.precision) != null ? ref3 : 18) + ", " + ((ref4 = options.scale) != null ? ref4 : 0) + ")";
      case TYPES.Time:
      case TYPES.DateTime2:
      case TYPES.DateTimeOffset:
        return type.declaration + " (" + ((ref5 = options.scale) != null ? ref5 : 7) + ")";
      case TYPES.TVP:
        return options.tvpType + " readonly";
      default:
        return type.declaration;
    }
  };

  module.exports.cast = function(value, type, options) {
    var ns, ref, scale;
    if (value == null) {
      return null;
    }
    switch (typeof value) {
      case 'string':
        return "N'" + (value.replace(/'/g, '\'\'')) + "'";
      case 'number':
        return value;
      case 'boolean':
        if (value) {
          return 1;
        } else {
          return 0;
        }
      case 'object':
        if (value instanceof Date) {
          ns = value.getUTCMilliseconds() / 1000;
          if (value.nanosecondDelta != null) {
            ns += value.nanosecondDelta;
          }
          scale = (ref = options.scale) != null ? ref : 7;
          if (scale > 0) {
            ns = String(ns).substr(1, scale + 1);
          } else {
            ns = "";
          }
          return "N'" + (value.getUTCFullYear()) + "-" + (zero(value.getUTCMonth() + 1)) + "-" + (zero(value.getUTCDate())) + " " + (zero(value.getUTCHours())) + ":" + (zero(value.getUTCMinutes())) + ":" + (zero(value.getUTCSeconds())) + ns + "'";
        } else if (Buffer.isBuffer(value)) {
          return "0x" + (value.toString('hex'));
        } else {
          return null;
        }
        break;
      default:
        return null;
    }
  };

  zero = function(value, length) {
    var i, j, ref;
    if (length == null) {
      length = 2;
    }
    value = String(value);
    if (value.length < length) {
      for (i = j = 1, ref = length - value.length; 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {
        value = "0" + value;
      }
    }
    return value;
  };

}).call(this);

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})

},{"../../is-buffer/index.js":345}],351:[function(require,module,exports){
// Generated by CoffeeScript 1.10.0
(function() {
  module.exports = {
    READ_UNCOMMITTED: 0x01,
    READ_COMMITTED: 0x02,
    REPEATABLE_READ: 0x03,
    SERIALIZABLE: 0x04,
    SNAPSHOT: 0x05
  };

}).call(this);

},{}],352:[function(require,module,exports){
(function (process,global,Buffer){
// Generated by CoffeeScript 1.10.0
(function() {
  var Connection, ConnectionError, ConnectionString, DRIVERS, EventEmitter, ISOLATION_LEVEL, PreparedStatement, PreparedStatementError, Request, RequestError, TYPES, Table, Transaction, TransactionError, declare, fs, getTypeByValue, global_connection, key, map, ref, ref1, util, value,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    slice = [].slice,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  EventEmitter = require('events').EventEmitter;

  util = require('util');

  fs = require('fs');

  ref = require('./datatypes'), TYPES = ref.TYPES, declare = ref.declare;

  ISOLATION_LEVEL = require('./isolationlevel');

  DRIVERS = ['msnodesql', 'tedious', 'tds', 'msnodesqlv8'];

  Table = require('./table');

  ConnectionString = require('./connectionstring');

  global_connection = null;

  map = [];


  /*
  Register you own type map.
  
  **Example:**
  ```
  sql.map.register(MyClass, sql.Text);
  ```
  You can also overwrite default type map.
  ```
  sql.map.register(Number, sql.BigInt);
  ```
  
  @path module.exports.map
  @param {*} jstype JS data type.
  @param {*} sqltype SQL data type.
   */

  map.register = function(jstype, sqltype) {
    var i, index, item, len;
    for (index = i = 0, len = this.length; i < len; index = ++i) {
      item = this[index];
      if (!(item.js === jstype)) {
        continue;
      }
      this.splice(index, 1);
      break;
    }
    this.push({
      js: jstype,
      sql: sqltype
    });
    return null;
  };

  map.register(String, TYPES.NVarChar);

  map.register(Number, TYPES.Int);

  map.register(Boolean, TYPES.Bit);

  map.register(Date, TYPES.DateTime);

  map.register(Buffer, TYPES.VarBinary);

  map.register(Table, TYPES.TVP);


  /*
  @ignore
   */

  getTypeByValue = function(value) {
    var i, item, j, k, l, len, len1, len2, len3;
    if (value === null || value === void 0) {
      return TYPES.NVarChar;
    }
    switch (typeof value) {
      case 'string':
        for (i = 0, len = map.length; i < len; i++) {
          item = map[i];
          if (item.js === String) {
            return item.sql;
          }
        }
        return TYPES.NVarChar;
      case 'number':
        for (j = 0, len1 = map.length; j < len1; j++) {
          item = map[j];
          if (item.js === Number) {
            return item.sql;
          }
        }
        return TYPES.Int;
      case 'boolean':
        for (k = 0, len2 = map.length; k < len2; k++) {
          item = map[k];
          if (item.js === Boolean) {
            return item.sql;
          }
        }
        return TYPES.Bit;
      case 'object':
        for (l = 0, len3 = map.length; l < len3; l++) {
          item = map[l];
          if (value instanceof item.js) {
            return item.sql;
          }
        }
        return TYPES.NVarChar;
      default:
        return TYPES.NVarChar;
    }
  };


  /*
  Class Connection.
  
  Internally, each `Connection` instance is a separate pool of TDS connections. Once you create a new `Request`/`Transaction`/`Prepared Statement`, a new TDS connection is acquired from the pool and reserved for desired action. Once the action is complete, connection is released back to the pool.
  
  @property {Boolean} connected If true, connection is established.
  @property {Boolean} connecting If true, connection is being established.
  @property {*} driver Reference to configured Driver.
  
  @event connect Dispatched after connection has established.
  @event close Dispatched after connection has closed a pool (by calling close).
   */

  Connection = (function(superClass) {
    extend(Connection, superClass);

    Connection.prototype.connected = false;

    Connection.prototype.connecting = false;

    Connection.prototype.driver = null;


    /*
    	Create new Connection.
    	
    	@param {Object|String} config Connection configuration object or connection string.
    	@callback [callback] A callback which is called after connection has established, or an error has occurred.
    		@param {Error} err Error on error, otherwise null.
     */

    function Connection(config1, callback) {
      var base, base1, base2, base3, base4, err, error, ex, ref1;
      this.config = config1;
      if ('string' === typeof this.config) {
        try {
          this.config = ConnectionString.resolve(this.config);
        } catch (error) {
          ex = error;
          if (callback) {
            return callback(ex);
          } else {
            throw ex;
          }
        }
      }
      if ((base = this.config).driver == null) {
        base.driver = 'tedious';
      }
      if ((base1 = this.config).port == null) {
        base1.port = 1433;
      }
      if ((base2 = this.config).options == null) {
        base2.options = {};
      }
      if ((base3 = this.config).stream == null) {
        base3.stream = false;
      }
      if ((base4 = this.config).parseJSON == null) {
        base4.parseJSON = false;
      }
      if (/^(.*)\\(.*)$/.exec(this.config.server)) {
        this.config.server = RegExp.$1;
        this.config.options.instanceName = RegExp.$2;
      }
      if (ref1 = this.config.driver, indexOf.call(DRIVERS, ref1) >= 0) {
        this.driver = this.initializeDriver(require("./" + this.config.driver));
        if (module.exports.fix) {
          this.driver.fix();
        }
      } else {
        err = new ConnectionError("Unknown driver " + this.config.driver + "!", 'EDRIVER');
        if (callback) {
          return callback(err);
        } else {
          throw err;
        }
      }
      if (callback) {
        this.connect(callback);
      }
    }


    /*
    	Write message to debug stream.
     */

    Connection.prototype._debug = function(msg) {
      var ref1;
      return (ref1 = this._debugStream) != null ? ref1.write((String(msg).replace(/\x1B\[[0-9;]*m/g, '')) + "\n") : void 0;
    };


    /*
    	Initializes driver for this connection. Separated from constructor and used by co-mssql.
    	
    	@private
    	@param {Function} driver Loaded driver.
    	
    	@returns {Connection}
     */

    Connection.prototype.initializeDriver = function(driver) {
      return driver(Connection, Transaction, Request, ConnectionError, TransactionError, RequestError);
    };


    /*
    	Creates a new connection pool with one active connection. This one initial connection serves as a probe to find out whether the configuration is valid.
    	
    	@callback [callback] A callback which is called after connection has established, or an error has occurred. If omited, method returns Promise.
    		@param {Error} err Error on error, otherwise null.
    	
    	@returns {Connection|Promise}
     */

    Connection.prototype.connect = function(callback) {
      if (callback != null) {
        return this._connect(callback);
      }
      return new module.exports.Promise((function(_this) {
        return function(resolve, reject) {
          return _this._connect(function(err) {
            if (err) {
              return reject(err);
            }
            return resolve(_this);
          });
        };
      })(this));
    };

    Connection.prototype._connect = function(callback) {
      var go;
      if (!this.driver) {
        return callback(new ConnectionError("Connection was closed. Create a new instance."));
      }
      if (this.connected) {
        return callback(new ConnectionError("Database is already connected! Call close before connecting to different database.", 'EALREADYCONNECTED'));
      }
      if (this.connecting) {
        return callback(new ConnectionError("Already connecting to database! Call close before connecting to different database.", 'EALREADYCONNECTING'));
      }
      go = (function(_this) {
        return function() {
          _this.connecting = true;
          return _this.driver.Connection.prototype.connect.call(_this, _this.config, function(err) {
            if (!_this.connecting) {
              return;
            }
            _this.connecting = false;
            if (err) {
              if (_this._debugStream) {
                _this._debugStream.removeAllListeners();
                _this._debugStream.end();
                _this._debugStream = null;
              }
            } else {
              _this.connected = true;
              _this.emit('connect');
            }
            return callback(err);
          });
        };
      })(this);
      if (this.config.debug) {
        this._debugStream = fs.createWriteStream("./mssql_debug_" + (Date.now()) + ".log");
        this._debugStream.once('open', go);
        this._debugStream.on('error', function(err) {
          if (this.connecting || this.connected) {
            return console.error(err.stack);
          } else {
            this._debugStream.removeListener('open', go);
            return callback(new ConnectionError("Failed to open debug stream. " + err.message, 'EDEBUG'));
          }
        });
      } else {
        go();
      }
      return this;
    };


    /*
    	Close all active connections in the pool.
    	
    	@callback [callback] A callback which is called after connection has closed, or an error has occurred. If omited, method returns Promise.
    		@param {Error} err Error on error, otherwise null.
    	
    	@returns {Connection|Promise}
     */

    Connection.prototype.close = function(callback) {
      if (callback != null) {
        return this._close(callback);
      }
      return new module.exports.Promise((function(_this) {
        return function(resolve, reject) {
          return _this._close(function(err) {
            if (err) {
              return reject(err);
            }
            return resolve();
          });
        };
      })(this));
    };

    Connection.prototype._close = function(callback) {
      if (this._debugStream) {
        this._debugStream.removeAllListeners();
        this._debugStream.end();
        this._debugStream = null;
      }
      if (this.connecting) {
        this.connecting = false;
        this.driver.Connection.prototype.close.call(this, (function(_this) {
          return function(err) {
            return callback(err);
          };
        })(this));
        this.driver = null;
      } else if (this.connected) {
        this.connected = false;
        this.driver.Connection.prototype.close.call(this, (function(_this) {
          return function(err) {
            if (!err) {
              _this.connected = false;
              _this.emit('close');
            }
            return callback(err);
          };
        })(this));
        this.driver = null;
      }
      return this;
    };


    /*
    	Returns new request using this connection.
    	
    	@returns {Request}
     */

    Connection.prototype.request = function() {
      return new Request(this);
    };


    /*
    	Returns new transaction using this connection.
    	
    	@returns {Transaction}
     */

    Connection.prototype.transaction = function() {
      return new Transaction(this);
    };


    /*
    	Creates a new query using this connection from a tagged template string.
    	
    	@param {Array} strings Array of string literals.
    	@param {...*} keys Values.
    	@returns {Request}
     */

    Connection.prototype.query = function() {
      var strings, values;
      strings = arguments[0], values = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      return new Request(this)._template('query', strings, values);
    };


    /*
    	Creates a new batch using this connection from a tagged template string.
    	
    	@param {Array} strings Array of string literals.
    	@param {...*} keys Values.
    	@returns {Request}
     */

    Connection.prototype.batch = function() {
      var strings, values;
      strings = arguments[0], values = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      return new Request(this)._template('batch', strings, values);
    };

    return Connection;

  })(EventEmitter);


  /*
  Class PreparedStatement.
  
  IMPORTANT: Rememeber that each prepared statement means one reserved connection from the pool. Don't forget to unprepare a prepared statement!
  
  @property {Connection} connection Reference to used connection.
  @property {Boolean} multiple If `true`, `execute` will handle multiple recordsets.
  @property {String} statement Prepared SQL statement.
  @property {Request} lastRequest References instance of most recent Request created by executing a statement.
   */

  PreparedStatement = (function(superClass) {
    extend(PreparedStatement, superClass);

    PreparedStatement.prototype._pooledConnection = null;

    PreparedStatement.prototype._queue = null;

    PreparedStatement.prototype._working = false;

    PreparedStatement.prototype._handle = 0;

    PreparedStatement.prototype.connection = null;

    PreparedStatement.prototype.transaction = null;

    PreparedStatement.prototype.prepared = false;

    PreparedStatement.prototype.statement = null;

    PreparedStatement.prototype.parameters = null;

    PreparedStatement.prototype.multiple = false;

    PreparedStatement.prototype.stream = null;

    PreparedStatement.prototype.lastRequest = null;


    /*
    	Create new Prepared Statement.
    	
    	@param {String} statement SQL statement.
    	@param {Connection} [connection] If ommited, global connection is used instead.
     */

    function PreparedStatement(connection) {
      if (connection instanceof Transaction) {
        this.transaction = connection;
        this.connection = connection.connection;
      } else if (connection instanceof Connection) {
        this.connection = connection;
      } else {
        this.connection = global_connection;
      }
      this._queue = [];
      this.parameters = {};
    }


    /*
    	Add an input parameter to the prepared statement.
    	
    	**Example:**
    	```
    	statement.input('input_parameter', sql.Int);
    	statement.input('input_parameter', sql.VarChar(50));
    	```
    	
    	@param {String} name Name of the input parameter without @ char.
    	@param {*} type SQL data type of input parameter.
    	@returns {PreparedStatement}
     */

    PreparedStatement.prototype.input = function(name, type) {
      if (/(--| |\/\*|\*\/|')/.test(name)) {
        throw new PreparedStatementError("SQL injection warning for param '" + name + "'", 'EINJECT');
      }
      if (arguments.length < 2) {
        throw new PreparedStatementError("Invalid number of arguments. 2 arguments expected.", 'EARGS');
      }
      if (type instanceof Function) {
        type = type();
      }
      this.parameters[name] = {
        name: name,
        type: type.type,
        io: 1,
        length: type.length,
        scale: type.scale,
        precision: type.precision,
        tvpType: type.tvpType
      };
      return this;
    };


    /*
    	Add an output parameter to the prepared statement.
    	
    	**Example:**
    	```
    	statement.output('output_parameter', sql.Int);
    	statement.output('output_parameter', sql.VarChar(50));
    	```
    	
    	@param {String} name Name of the output parameter without @ char.
    	@param {*} type SQL data type of output parameter.
    	@returns {PreparedStatement}
     */

    PreparedStatement.prototype.output = function(name, type) {
      if (/(--| |\/\*|\*\/|')/.test(name)) {
        throw new PreparedStatementError("SQL injection warning for param '" + name + "'", 'EINJECT');
      }
      if (arguments.length < 2) {
        throw new PreparedStatementError("Invalid number of arguments. 2 arguments expected.", 'EARGS');
      }
      if (type instanceof Function) {
        type = type();
      }
      this.parameters[name] = {
        name: name,
        type: type.type,
        io: 2,
        length: type.length,
        scale: type.scale,
        precision: type.precision
      };
      return this;
    };


    /*
    	Prepare a statement.
    	
    	@property {String} [statement] SQL statement to prepare.
    	@callback [callback] A callback which is called after preparation has completed, or an error has occurred. If omited, method returns Promise.
    		@param {Error} err Error on error, otherwise null.
    	@returns {PreparedStatement|Promise}
     */

    PreparedStatement.prototype.prepare = function(statement, callback) {
      if (callback != null) {
        return this._prepare(statement, callback);
      }
      return new module.exports.Promise((function(_this) {
        return function(resolve, reject) {
          return _this._prepare(statement, function(err) {
            if (err) {
              return reject(err);
            }
            return resolve(_this);
          });
        };
      })(this));
    };

    PreparedStatement.prototype._prepare = function(statement, callback) {
      var done;
      if (this._pooledConnection) {
        callback(new PreparedStatementError("Statement is already prepared.", 'EALREADYPREPARED'));
        return this;
      }
      if (typeof statement === 'function') {
        callback = statement;
        statement = void 0;
      }
      if (statement != null) {
        this.statement = statement;
      }
      done = (function(_this) {
        return function(err, connection) {
          var name, param, req;
          if (err) {
            return callback(err);
          }
          _this._pooledConnection = connection;
          req = new Request(_this);
          req.stream = false;
          req.output('handle', TYPES.Int);
          req.input('params', TYPES.NVarChar, ((function() {
            var ref1, results;
            ref1 = this.parameters;
            results = [];
            for (name in ref1) {
              param = ref1[name];
              results.push("@" + name + " " + (declare(param.type, param)) + (param.io === 2 ? " output" : ""));
            }
            return results;
          }).call(_this)).join(','));
          req.input('stmt', TYPES.NVarChar, _this.statement);
          return req.execute('sp_prepare', function(err) {
            if (err) {
              if (_this.transaction) {
                _this.transaction.next();
              } else {
                _this.connection.pool.release(_this._pooledConnection);
                _this._pooledConnection = null;
              }
              return callback(err);
            }
            _this._handle = req.parameters.handle.value;
            return callback(null);
          });
        };
      })(this);
      if (this.transaction) {
        if (!this.transaction._pooledConnection) {
          callback(new TransactionError("Transaction has not begun. Call begin() first.", 'ENOTBEGUN'));
          return this;
        }
        this.transaction.queue(done);
      } else {
        this.connection.pool.acquire(done);
      }
      return this;
    };


    /*
    	Execute next request in queue.
    	
    	@private
    	@returns {PreparedStatement}
     */

    PreparedStatement.prototype.next = function() {
      if (this._queue.length) {
        process.nextTick((function(_this) {
          return function() {
            return _this._queue.shift()(null, _this._pooledConnection);
          };
        })(this));
      } else {
        this._working = false;
      }
      return this;
    };


    /*
    	Add request to queue for connection. If queue is empty, execute the request immediately.
    	
    	@private
    	@callback callback A callback to call when connection in ready to execute request.
    		@param {Error} err Error on error, otherwise null.
    		@param {*} conn Internal driver's connection.
    	@returns {PreparedStatement}
     */

    PreparedStatement.prototype.queue = function(callback) {
      if (!this._pooledConnection) {
        callback(new PreparedStatementError("Statement is not prepared. Call prepare() first.", 'ENOTPREPARED'));
        return this;
      }
      if (this._working) {
        this._queue.push(callback);
      } else {
        this._working = true;
        callback(null, this._pooledConnection);
      }
      return this;
    };


    /*
    	Execute a prepared statement.
    	
    	@property {String} values An object whose names correspond to the names of parameters that were added to the prepared statement before it was prepared.
    	@callback [callback] A callback which is called after execution has completed, or an error has occurred. If omited, method returns Promise.
    		@param {Error} err Error on error, otherwise null.
    	@returns {Request|Promise}
     */

    PreparedStatement.prototype.execute = function(values, callback) {
      if (callback != null) {
        return this._execute(values, callback);
      }
      return new module.exports.Promise((function(_this) {
        return function(resolve, reject) {
          return _this._execute(values, function(err, recordset) {
            if (err) {
              return reject(err);
            }
            return resolve(recordset);
          });
        };
      })(this));
    };

    PreparedStatement.prototype._execute = function(values, callback) {
      var name, param, ref1, req;
      req = this.lastRequest = new Request(this);
      if (this.stream != null) {
        req.stream = this.stream;
      }
      req.input('handle', TYPES.Int, this._handle);
      ref1 = this.parameters;
      for (name in ref1) {
        param = ref1[name];
        req.parameters[name] = {
          name: name,
          type: param.type,
          io: param.io,
          value: values[name],
          length: param.length,
          scale: param.scale,
          precision: param.precision
        };
      }
      req.execute('sp_execute', (function(_this) {
        return function(err, recordsets, returnValue) {
          if (err) {
            return callback(err);
          }
          return callback(null, (_this.multiple ? recordsets : recordsets[0]), req.rowsAffected);
        };
      })(this));
      return req;
    };


    /*
    	Unprepare a prepared statement.
    	
    	@callback [callback] A callback which is called after unpreparation has completed, or an error has occurred. If omited, method returns Promise.
    		@param {Error} err Error on error, otherwise null.
    	@returns {PreparedStatement|Promise}
     */

    PreparedStatement.prototype.unprepare = function(callback) {
      if (callback != null) {
        return this._unprepare(callback);
      }
      return new module.exports.Promise((function(_this) {
        return function(resolve, reject) {
          return _this._unprepare(function(err) {
            if (err) {
              return reject(err);
            }
            return resolve();
          });
        };
      })(this));
    };

    PreparedStatement.prototype._unprepare = function(callback) {
      var done, req;
      if (!this._pooledConnection) {
        callback(new PreparedStatementError("Statement is not prepared. Call prepare() first.", 'ENOTPREPARED'));
        return this;
      }
      done = (function(_this) {
        return function(err) {
          if (err) {
            return callback(err);
          }
          if (_this.transaction) {
            _this.transaction.next();
          } else {
            _this.connection.pool.release(_this._pooledConnection);
            _this._pooledConnection = null;
          }
          _this._handle = 0;
          return callback(null);
        };
      })(this);
      req = new Request(this);
      req.stream = false;
      req.input('handle', TYPES.Int, this._handle);
      req.execute('sp_unprepare', done);
      return this;
    };

    return PreparedStatement;

  })(EventEmitter);


  /*
  Class Transaction.
  
  @property {Connection} connection Reference to used connection.
  @property {Number} isolationLevel Controls the locking and row versioning behavior of TSQL statements issued by a connection. READ_COMMITTED by default.
  @property {String} name Transaction name. Empty string by default.
  
  @event begin Dispatched when transaction begin.
  @event commit Dispatched on successful commit.
  @event rollback Dispatched on successful rollback.
   */

  Transaction = (function(superClass) {
    extend(Transaction, superClass);

    Transaction.prototype._pooledConnection = null;

    Transaction.prototype._queue = null;

    Transaction.prototype._aborted = false;

    Transaction.prototype._working = false;

    Transaction.prototype.name = "";

    Transaction.prototype.connection = null;

    Transaction.prototype.isolationLevel = ISOLATION_LEVEL.READ_COMMITTED;


    /*
    	Create new Transaction.
    	
    	@param {Connection} [connection] If ommited, global connection is used instead.
     */

    function Transaction(connection) {
      this._abort = bind(this._abort, this);
      this.connection = connection != null ? connection : global_connection;
      this._queue = [];
    }


    /*
    	@private
     */

    Transaction.prototype._abort = function() {
      return this.connection.driver.Transaction.prototype._abort.call(this);
    };


    /*
    	Begin a transaction.
    	
    	@param {Number} [isolationLevel] Controls the locking and row versioning behavior of TSQL statements issued by a connection.
    	@callback [callback] A callback which is called after transaction has began, or an error has occurred. If omited, method returns Promise.
    		@param {Error} err Error on error, otherwise null.
    	@returns {Transaction|Promise}
     */

    Transaction.prototype.begin = function(isolationLevel, callback) {
      if (isolationLevel instanceof Function) {
        callback = isolationLevel;
        isolationLevel = void 0;
      }
      if (callback != null) {
        return this._begin(isolationLevel, callback);
      }
      return new module.exports.Promise((function(_this) {
        return function(resolve, reject) {
          return _this._begin(isolationLevel, function(err) {
            if (err) {
              return reject(err);
            }
            return resolve(_this);
          });
        };
      })(this));
    };

    Transaction.prototype._begin = function(isolationLevel, callback) {
      if (isolationLevel != null) {
        this.isolationLevel = isolationLevel;
      }
      if (this._pooledConnection) {
        callback(new TransactionError("Transaction has already begun.", 'EALREADYBEGUN'));
        return this;
      }
      this.connection.driver.Transaction.prototype.begin.call(this, (function(_this) {
        return function(err) {
          if (!err) {
            _this.emit('begin');
          }
          return callback(err);
        };
      })(this));
      return this;
    };


    /*
    	Commit a transaction.
    	
    	@callback [callback] A callback which is called after transaction has commited, or an error has occurred. If omited, method returns Promise.
    		@param {Error} err Error on error, otherwise null.
    	@returns {Transaction|Promise}
     */

    Transaction.prototype.commit = function(callback) {
      if (callback != null) {
        return this._commit(callback);
      }
      return new module.exports.Promise((function(_this) {
        return function(resolve, reject) {
          return _this._commit(function(err) {
            if (err) {
              return reject(err);
            }
            return resolve();
          });
        };
      })(this));
    };

    Transaction.prototype._commit = function(callback) {
      if (!this._pooledConnection) {
        callback(new TransactionError("Transaction has not begun. Call begin() first.", 'ENOTBEGUN'));
        return this;
      }
      if (this._working) {
        callback(new TransactionError("Can't commit transaction. There is a request in progress.", 'EREQINPROG'));
        return this;
      }
      if (this._queue.length) {
        callback(new TransactionError("Can't commit transaction. There are request in queue.", 'EREQINPROG'));
        return this;
      }
      this.connection.driver.Transaction.prototype.commit.call(this, (function(_this) {
        return function(err) {
          if (!err) {
            _this.emit('commit');
          }
          return callback(err);
        };
      })(this));
      return this;
    };


    /*
    	Execute next request in queue.
    	
    	@private
    	@returns {Transaction}
     */

    Transaction.prototype.next = function() {
      var toAbort;
      if (this._aborted) {
        toAbort = this._queue;
        this._queue = [];
        process.nextTick((function(_this) {
          return function() {
            var results;
            results = [];
            while (toAbort.length) {
              results.push(toAbort.shift()(new TransactionError("Transaction aborted.", "EABORT")));
            }
            return results;
          };
        })(this));
      }
      this._working = false;
      if (this._queue.length) {
        process.nextTick((function(_this) {
          return function() {
            if (_this._aborted) {
              return _this.next();
            }
            _this._working = true;
            return _this._queue.shift()(null, _this._pooledConnection);
          };
        })(this));
      }
      return this;
    };


    /*
    	Add request to queue for connection. If queue is empty, execute the request immediately.
    	
    	@private
    	@callback callback A callback to call when connection in ready to execute request.
    		@param {Error} err Error on error, otherwise null.
    		@param {*} conn Internal driver's connection.
    	@returns {Transaction}
     */

    Transaction.prototype.queue = function(callback) {
      if (!this._pooledConnection) {
        callback(new TransactionError("Transaction has not begun. Call begin() first.", 'ENOTBEGUN'));
        return this;
      }
      if (this._working || this._queue.length) {
        this._queue.push(callback);
      } else {
        this._working = true;
        callback(null, this._pooledConnection);
      }
      return this;
    };


    /*
    	Returns new request using this transaction.
    	
    	@returns {Request}
     */

    Transaction.prototype.request = function() {
      return new Request(this);
    };


    /*
    	Rollback a transaction.
    	
    	@callback [callback] A callback which is called after transaction has rolled back, or an error has occurred. If omited, method returns Promise.
    		@param {Error} err Error on error, otherwise null.
    	@returns {Transaction|Promise}
     */

    Transaction.prototype.rollback = function(callback) {
      if (callback != null) {
        return this._rollback(callback);
      }
      return new module.exports.Promise((function(_this) {
        return function(resolve, reject) {
          return _this._rollback(function(err) {
            if (err) {
              return reject(err);
            }
            return resolve();
          });
        };
      })(this));
    };

    Transaction.prototype._rollback = function(callback) {
      if (this._aborted) {
        callback(new TransactionError("Transaction has been aborted.", 'EABORT'));
        return this;
      }
      if (!this._pooledConnection) {
        callback(new TransactionError("Transaction has not begun. Call begin() first.", 'ENOTBEGUN'));
        return this;
      }
      if (this._working) {
        callback(new TransactionError("Can't rollback transaction. There is a request in progress.", 'EREQINPROG'));
        return this;
      }
      if (this._queue.length) {
        this._aborted = true;
      }
      this.connection.driver.Transaction.prototype.rollback.call(this, (function(_this) {
        return function(err) {
          if (!err) {
            _this.emit('rollback', _this._aborted);
          }
          return callback(err);
        };
      })(this));
      return this;
    };

    return Transaction;

  })(EventEmitter);


  /*
  Class Request.
  
  @property {Connection} connection Reference to used connection.
  @property {Transaction} transaction Reference to transaction when request was created in transaction.
  @property {*} parameters Collection of input and output parameters.
  @property {Boolean} verbose If `true`, debug messages are printed to message log.
  @property {Boolean} multiple If `true`, `query` will handle multiple recordsets (`execute` always expect multiple recordsets).
  @property {Boolean} canceled `true` if request was canceled.
  
  @event recordset Dispatched when metadata for new recordset are parsed.
  @event row Dispatched when new row is parsed.
  @event done Dispatched when request is complete.
  @event error Dispatched on error.
   */

  Request = (function(superClass) {
    extend(Request, superClass);

    Request.prototype.connection = null;

    Request.prototype.transaction = null;

    Request.prototype.pstatement = null;

    Request.prototype.parameters = null;

    Request.prototype.verbose = false;

    Request.prototype.multiple = false;

    Request.prototype.canceled = false;

    Request.prototype.stream = null;

    Request.prototype.rowsAffected = null;


    /*
    	Create new Request.
    	
    	@param {Connection|Transaction} connection If ommited, global connection is used instead.
     */

    function Request(connection) {
      if (connection instanceof Transaction) {
        this.transaction = connection;
        this.connection = connection.connection;
      } else if (connection instanceof PreparedStatement) {
        this.pstatement = connection;
        this.connection = connection.connection;
      } else if (connection instanceof Connection) {
        this.connection = connection;
      } else {
        this.connection = global_connection;
      }
      this.parameters = {};
    }


    /*
    	Log to a function if assigned. Else, use console.log.
     */

    Request.prototype._log = function(out) {
      if (typeof this.logger === "function") {
        return this.logger(out);
      } else {
        return console.log(out);
      }
    };


    /*
    	Fetch request from tagged template string.
     */

    Request.prototype._template = function(method, strings, values) {
      var command, i, index, len, value;
      command = [strings[0]];
      for (index = i = 0, len = values.length; i < len; index = ++i) {
        value = values[index];
        this.input("param" + (index + 1), value);
        command.push("@param" + (index + 1), strings[index + 1]);
      }
      return this[method](command.join(''));
    };


    /*
    	Acquire connection for this request from connection.
     */

    Request.prototype._acquire = function(callback) {
      if (this.transaction) {
        return this.transaction.queue(callback);
      } else if (this.pstatement) {
        return this.pstatement.queue(callback);
      } else {
        if (!this.connection.pool) {
          return callback(new ConnectionError("Connection not yet open.", 'ENOTOPEN'));
        }
        return this.connection.pool.acquire(callback);
      }
    };


    /*
    	Makes the request dedicated to one connection.
     */

    Request.prototype._dedicated = function(connection) {
      this._acquire = function(callback) {
        return callback(null, connection);
      };
      this._release = function() {};
      return this;
    };


    /*
    	Release connection used by this request.
     */

    Request.prototype._release = function(connection) {
      if (this.transaction) {
        return this.transaction.next();
      } else if (this.pstatement) {
        return this.pstatement.next();
      } else {
        return this.connection.pool.release(connection);
      }
    };


    /*
    	Add an input parameter to the request.
    	
    	**Example:**
    	```
    	request.input('input_parameter', value);
    	request.input('input_parameter', sql.Int, value);
    	```
    	
    	@param {String} name Name of the input parameter without @ char.
    	@param {*} [type] SQL data type of input parameter. If you omit type, module automaticaly decide which SQL data type should be used based on JS data type.
    	@param {*} value Input parameter value. `undefined` and `NaN` values are automatically converted to `null` values.
    	@returns {Request}
     */

    Request.prototype.input = function(name, type, value) {
      if (/(--| |\/\*|\*\/|')/.test(name)) {
        throw new RequestError("SQL injection warning for param '" + name + "'", 'EINJECT');
      }
      if (arguments.length === 1) {
        throw new RequestError("Invalid number of arguments. At least 2 arguments expected.", 'EARGS');
      } else if (arguments.length === 2) {
        value = type;
        type = getTypeByValue(value);
      }
      if ((value != null ? value.valueOf : void 0) && !(value instanceof Date)) {
        value = value.valueOf();
      }
      if (value === void 0) {
        value = null;
      }
      if (value !== value) {
        value = null;
      }
      if (type instanceof Function) {
        type = type();
      }
      this.parameters[name] = {
        name: name,
        type: type.type,
        io: 1,
        value: value,
        length: type.length,
        scale: type.scale,
        precision: type.precision,
        tvpType: type.tvpType
      };
      return this;
    };


    /*
    	Add an output parameter to the request.
    	
    	**Example:**
    	```
    	request.output('output_parameter', sql.Int);
    	request.output('output_parameter', sql.VarChar(50), 'abc');
    	```
    	
    	@param {String} name Name of the output parameter without @ char.
    	@param {*} type SQL data type of output parameter.
    	@param {*} [value] Output parameter value initial value. `undefined` and `NaN` values are automatically converted to `null` values. Optional.
    	@returns {Request}
     */

    Request.prototype.output = function(name, type, value) {
      if (!type) {
        type = TYPES.NVarChar;
      }
      if (/(--| |\/\*|\*\/|')/.test(name)) {
        throw new RequestError("SQL injection warning for param '" + name + "'", 'EINJECT');
      }
      if (type === TYPES.Text || type === TYPES.NText || type === TYPES.Image) {
        throw new RequestError("Deprecated types (Text, NText, Image) are not supported as OUTPUT parameters.", 'EDEPRECATED');
      }
      if ((value != null ? value.valueOf : void 0) && !(value instanceof Date)) {
        value = value.valueOf();
      }
      if (value === void 0) {
        value = null;
      }
      if (value !== value) {
        value = null;
      }
      if (type instanceof Function) {
        type = type();
      }
      this.parameters[name] = {
        name: name,
        type: type.type,
        io: 2,
        value: value,
        length: type.length,
        scale: type.scale,
        precision: type.precision
      };
      return this;
    };


    /*
    	Execute the SQL batch.
    
    	@param {String} batch T-SQL batch to be executed.
    	@callback [callback] A callback which is called after execution has completed, or an error has occurred. If omited, method returns Promise.
    		@param {Error} err Error on error, otherwise null.
    		@param {*} recordset Recordset.
    	
    	@returns {Request|Promise}
     */

    Request.prototype.batch = function(batch, callback) {
      var ref1;
      if (this.stream == null) {
        this.stream = (ref1 = this.connection) != null ? ref1.config.stream : void 0;
      }
      this.rowsAffected = 0;
      if (this.stream || (callback != null)) {
        return this._batch(batch, callback);
      }
      return new module.exports.Promise((function(_this) {
        return function(resolve, reject) {
          return _this._batch(batch, function(err, recordset) {
            if (err) {
              return reject(err);
            }
            return resolve(recordset);
          });
        };
      })(this));
    };

    Request.prototype._batch = function(batch, callback) {
      if (!this.connection) {
        return process.nextTick((function(_this) {
          return function() {
            var e;
            e = new RequestError("No connection is specified for that request.", 'ENOCONN');
            if (_this.stream) {
              _this.emit('error', e);
              return _this.emit('done');
            } else {
              return callback(e);
            }
          };
        })(this));
      }
      if (!this.connection.connected) {
        return process.nextTick((function(_this) {
          return function() {
            var e;
            e = new ConnectionError("Connection is closed.", 'ECONNCLOSED');
            if (_this.stream) {
              _this.emit('error', e);
              return _this.emit('done');
            } else {
              return callback(e);
            }
          };
        })(this));
      }
      this.canceled = false;
      this.connection.driver.Request.prototype.batch.call(this, batch, (function(_this) {
        return function(err, recordsets) {
          if (_this.stream) {
            if (err) {
              _this.emit('error', err);
            }
            return _this.emit('done', _this.rowsAffected);
          } else {
            return callback(err, recordsets, _this.rowsAffected);
          }
        };
      })(this));
      return this;
    };


    /*
    	Bulk load.
    
    	@param {Table} table SQL table.
    	@callback [callback] A callback which is called after bulk load has completed, or an error has occurred. If omited, method returns Promise.
    		@param {Error} err Error on error, otherwise null.
    	
    	@returns {Request|Promise}
     */

    Request.prototype.bulk = function(table, callback) {
      var ref1;
      if (this.stream == null) {
        this.stream = (ref1 = this.connection) != null ? ref1.config.stream : void 0;
      }
      if (this.stream || (callback != null)) {
        return this._bulk(table, callback);
      }
      return new module.exports.Promise((function(_this) {
        return function(resolve, reject) {
          return _this._bulk(table, function(err, rowCount) {
            if (err) {
              return reject(err);
            }
            return resolve(rowCount);
          });
        };
      })(this));
    };

    Request.prototype._bulk = function(table, callback) {
      if (!this.connection) {
        return process.nextTick((function(_this) {
          return function() {
            var e;
            e = new RequestError("No connection is specified for that request.", 'ENOCONN');
            if (_this.stream) {
              _this.emit('error', e);
              return _this.emit('done');
            } else {
              return callback(e);
            }
          };
        })(this));
      }
      if (!this.connection.connected) {
        return process.nextTick((function(_this) {
          return function() {
            var e;
            e = new ConnectionError("Connection is closed.", 'ECONNCLOSED');
            if (_this.stream) {
              _this.emit('error', e);
              return _this.emit('done');
            } else {
              return callback(e);
            }
          };
        })(this));
      }
      this.canceled = false;
      this.connection.driver.Request.prototype.bulk.call(this, table, (function(_this) {
        return function(err, rowCount) {
          if (_this.stream) {
            if (err) {
              _this.emit('error', err);
            }
            return _this.emit('done');
          } else {
            return callback(err, rowCount);
          }
        };
      })(this));
      return this;
    };


    /*
    	Sets request to `stream` mode and pulls all rows from all recordsets to a given stream.
    	
    	@param {Stream} stream Stream to pipe data into.
    	@returns {Stream}
     */

    Request.prototype.pipe = function(stream) {
      this.stream = true;
      this.on('row', stream.write.bind(stream));
      this.on('error', stream.emit.bind(stream, 'error'));
      this.on('done', function() {
        return setImmediate(function() {
          return stream.end();
        });
      });
      stream.emit('pipe', this);
      return stream;
    };


    /*
    	Execute the SQL command.
    	
    	**Example:**
    	```
    	var request = new sql.Request();
    	request.query('select 1 as number', function(err, recordset) {
    	    console.log(recordset[0].number); // return 1
    	
    	    // ...
    	});
    	```
    	
    	You can enable multiple recordsets in querries by `request.multiple = true` command.
    	
    	```
    	var request = new sql.Request();
    	request.multiple = true;
    	
    	request.query('select 1 as number; select 2 as number', function(err, recordsets) {
    	    console.log(recordsets[0][0].number); // return 1
    	    console.log(recordsets[1][0].number); // return 2
    	
    	    // ...
    	});
    	```
    	
    	@param {String} command T-SQL command to be executed.
    	@callback [callback] A callback which is called after execution has completed, or an error has occurred. If omited, method returns Promise.
    		@param {Error} err Error on error, otherwise null.
    		@param {*} recordset Recordset.
    	
    	@returns {Request|Promise}
     */

    Request.prototype.query = function(command, callback) {
      var ref1;
      if (this.stream == null) {
        this.stream = (ref1 = this.connection) != null ? ref1.config.stream : void 0;
      }
      this.rowsAffected = 0;
      if (this.stream || (callback != null)) {
        return this._query(command, callback);
      }
      return new module.exports.Promise((function(_this) {
        return function(resolve, reject) {
          return _this._query(command, function(err, recordsets) {
            if (err) {
              return reject(err);
            }
            return resolve(recordsets);
          });
        };
      })(this));
    };

    Request.prototype._query = function(command, callback) {
      if (!this.connection) {
        return process.nextTick((function(_this) {
          return function() {
            var e;
            e = new RequestError("No connection is specified for that request.", 'ENOCONN');
            if (_this.stream) {
              _this.emit('error', e);
              return _this.emit('done');
            } else {
              return callback(e);
            }
          };
        })(this));
      }
      if (!this.connection.connected) {
        return process.nextTick((function(_this) {
          return function() {
            var e;
            e = new ConnectionError("Connection is closed.", 'ECONNCLOSED');
            if (_this.stream) {
              _this.emit('error', e);
              return _this.emit('done');
            } else {
              return callback(e);
            }
          };
        })(this));
      }
      this.canceled = false;
      this.connection.driver.Request.prototype.query.call(this, command, (function(_this) {
        return function(err, recordsets) {
          if (_this.stream) {
            if (err) {
              _this.emit('error', err);
            }
            return _this.emit('done', _this.rowsAffected);
          } else {
            return callback(err, recordsets, _this.rowsAffected);
          }
        };
      })(this));
      return this;
    };


    /*
    	Call a stored procedure.
    	
    	**Example:**
    	```
    	var request = new sql.Request();
    	request.input('input_parameter', sql.Int, value);
    	request.output('output_parameter', sql.Int);
    	request.execute('procedure_name', function(err, recordsets, returnValue) {
    	    console.log(recordsets.length); // count of recordsets returned by procedure
    	    console.log(recordset[0].length); // count of rows contained in first recordset
    	    console.log(returnValue); // procedure return value
    	    console.log(recordsets.returnValue); // procedure return value
    	
    	    console.log(request.parameters.output_parameter.value); // output value
    	
    	    // ...
    	});
    	```
    	
    	@param {String} procedure Name of the stored procedure to be executed.
    	@callback [callback] A callback which is called after execution has completed, or an error has occurred. If omited, method returns Promise.
    		@param {Error} err Error on error, otherwise null.
    		@param {Array} recordsets Recordsets.
    		@param {Number} returnValue Procedure return value.
    	
    	@returns {Request|Promise}
     */

    Request.prototype.execute = function(command, callback) {
      var ref1;
      if (this.stream == null) {
        this.stream = (ref1 = this.connection) != null ? ref1.config.stream : void 0;
      }
      this.rowsAffected = 0;
      if (this.stream || (callback != null)) {
        return this._execute(command, callback);
      }
      return new module.exports.Promise((function(_this) {
        return function(resolve, reject) {
          return _this._execute(command, function(err, recordset) {
            if (err) {
              return reject(err);
            }
            return resolve(recordset);
          });
        };
      })(this));
    };

    Request.prototype._execute = function(procedure, callback) {
      if (!this.connection) {
        return process.nextTick(function() {
          var e;
          e = new RequestError("No connection is specified for that request.", 'ENOCONN');
          if (this.stream) {
            this.emit('error', e);
            return this.emit('done');
          } else {
            return callback(e);
          }
        });
      }
      if (!this.connection.connected) {
        return process.nextTick((function(_this) {
          return function() {
            var e;
            e = new ConnectionError("Connection is closed.", 'ECONNCLOSED');
            if (_this.stream) {
              _this.emit('error', e);
              return _this.emit('done');
            } else {
              return callback(e);
            }
          };
        })(this));
      }
      this.canceled = false;
      this.connection.driver.Request.prototype.execute.call(this, procedure, (function(_this) {
        return function(err, recordsets, returnValue) {
          if (_this.stream) {
            if (err) {
              _this.emit('error', err);
            }
            return _this.emit('done', returnValue, _this.rowsAffected);
          } else {
            return callback(err, recordsets, returnValue, _this.rowsAffected);
          }
        };
      })(this));
      return this;
    };


    /*
    	Cancel currently executed request.
    	
    	@returns {Request}
     */

    Request.prototype.cancel = function() {
      this.canceled = true;
      this.connection.driver.Request.prototype.cancel.call(this);
      return this;
    };

    return Request;

  })(EventEmitter);

  ConnectionError = (function(superClass) {
    extend(ConnectionError, superClass);

    function ConnectionError(message, code) {
      var err;
      if (!(this instanceof ConnectionError)) {
        if (message instanceof Error) {
          err = new ConnectionError(message.message, message.code);
          Object.defineProperty(err, 'originalError', {
            value: message
          });
          Error.captureStackTrace(err, arguments.callee);
          return err;
        } else {
          err = new ConnectionError(message);
          Error.captureStackTrace(err, arguments.callee);
          return err;
        }
      }
      this.name = this.constructor.name;
      this.message = message;
      if (code != null) {
        this.code = code;
      }
      ConnectionError.__super__.constructor.call(this);
      Error.captureStackTrace(this, this.constructor);
    }

    return ConnectionError;

  })(Error);

  TransactionError = (function(superClass) {
    extend(TransactionError, superClass);

    function TransactionError(message, code) {
      var err;
      if (!(this instanceof TransactionError)) {
        if (message instanceof Error) {
          err = new TransactionError(message.message, message.code);
          Object.defineProperty(err, 'originalError', {
            value: message
          });
          Error.captureStackTrace(err, arguments.callee);
          return err;
        } else {
          err = new TransactionError(message);
          Error.captureStackTrace(err, arguments.callee);
          return err;
        }
      }
      this.name = this.constructor.name;
      this.message = message;
      if (code != null) {
        this.code = code;
      }
      TransactionError.__super__.constructor.call(this);
      Error.captureStackTrace(this, this.constructor);
    }

    return TransactionError;

  })(Error);

  RequestError = (function(superClass) {
    extend(RequestError, superClass);

    function RequestError(message, code) {
      var err, ref1, ref10, ref11, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9;
      if (!(this instanceof RequestError)) {
        if (message instanceof Error) {
          err = new RequestError(message.message, (ref1 = message.code) != null ? ref1 : code);
          err.number = (ref2 = (ref3 = message.info) != null ? ref3.number : void 0) != null ? ref2 : message.code;
          err.lineNumber = (ref4 = message.info) != null ? ref4.lineNumber : void 0;
          err.state = (ref5 = (ref6 = message.info) != null ? ref6.state : void 0) != null ? ref5 : message.sqlstate;
          err["class"] = (ref7 = (ref8 = message.info) != null ? ref8["class"] : void 0) != null ? ref7 : (ref9 = message.info) != null ? ref9.severity : void 0;
          err.serverName = (ref10 = message.info) != null ? ref10.serverName : void 0;
          err.procName = (ref11 = message.info) != null ? ref11.procName : void 0;
          Object.defineProperty(err, 'originalError', {
            value: message
          });
          Error.captureStackTrace(err, arguments.callee);
          return err;
        } else {
          err = new RequestError(message);
          Error.captureStackTrace(err, arguments.callee);
          return err;
        }
      }
      this.name = this.constructor.name;
      this.message = message;
      if (code != null) {
        this.code = code;
      }
      RequestError.__super__.constructor.call(this);
      Error.captureStackTrace(this, this.constructor);
    }

    return RequestError;

  })(Error);

  PreparedStatementError = (function(superClass) {
    extend(PreparedStatementError, superClass);

    function PreparedStatementError(message, code) {
      var err;
      if (!(this instanceof PreparedStatementError)) {
        if (message instanceof Error) {
          err = new PreparedStatementError(message.message, message.code);
          err.originalError = message;
          Error.captureStackTrace(err, arguments.callee);
          return err;
        } else {
          err = new PreparedStatementError(message);
          Error.captureStackTrace(err, arguments.callee);
          return err;
        }
      }
      this.name = this.constructor.name;
      this.message = message;
      this.code = code;
      PreparedStatementError.__super__.constructor.call(this);
      Error.captureStackTrace(this, this.constructor);
    }

    return PreparedStatementError;

  })(Error);


  /*
  Open global connection.
  
  @param {Object} config Connection configuration.
  @callback callback A callback which is called after connection has established, or an error has occurred.
  	@param {Error} err Error on error, otherwise null.
  	
  @returns {Connection}
   */

  module.exports.connect = function(config, callback) {
    global_connection = new Connection(config);
    return global_connection.connect(callback);
  };


  /*
  Close global connection.
  	
  @returns {Connection}
   */

  module.exports.close = function(callback) {
    return global_connection != null ? global_connection.close(callback) : void 0;
  };


  /*
  Attach evnet handler to global connection.
  
  @param {String} event Event name.
  @param {Function} handler Event handler.
  @returns {Connection}
   */

  module.exports.on = function(event, handler) {
    return global_connection != null ? global_connection.on(event, handler) : void 0;
  };


  /*
  Creates a new query using global connection from a tagged template string.
  
  @param {Array} strings Array of string literals.
  @param {...*} keys Values.
  @returns {Request}
   */

  module.exports.query = function() {
    var strings, values;
    strings = arguments[0], values = 2 <= arguments.length ? slice.call(arguments, 1) : [];
    return new Request()._template('query', strings, values);
  };


  /*
  Creates a new batch using global connection from a tagged template string.
  
  @param {Array} strings Array of string literals.
  @param {...*} keys Values.
  @returns {Request}
   */

  module.exports.batch = function() {
    var strings, values;
    strings = arguments[0], values = 2 <= arguments.length ? slice.call(arguments, 1) : [];
    return new Request()._template('batch', strings, values);
  };

  module.exports.Connection = Connection;

  module.exports.Transaction = Transaction;

  module.exports.Request = Request;

  module.exports.Table = Table;

  module.exports.PreparedStatement = PreparedStatement;

  module.exports.ConnectionError = ConnectionError;

  module.exports.TransactionError = TransactionError;

  module.exports.RequestError = RequestError;

  module.exports.PreparedStatementError = PreparedStatementError;

  module.exports.ISOLATION_LEVEL = ISOLATION_LEVEL;

  module.exports.DRIVERS = DRIVERS;

  module.exports.TYPES = TYPES;

  module.exports.MAX = 65535;

  module.exports.map = map;

  module.exports.fix = true;

  module.exports.Promise = (ref1 = global.Promise) != null ? ref1 : require('promise');

  for (key in TYPES) {
    value = TYPES[key];
    module.exports[key] = value;
    module.exports[key.toUpperCase()] = value;
  }

  module.exports.pool = {
    max: 10,
    min: 0,
    idleTimeoutMillis: 30000
  };

  module.exports.connection = {
    userName: '',
    password: '',
    server: ''
  };


  /*
  Initialize Tedious connection pool.
  
  @deprecated
   */

  module.exports.init = function() {
    return module.exports.connect({
      user: module.exports.connection.userName,
      password: module.exports.connection.password,
      server: module.exports.connection.server,
      options: module.exports.connection.options,
      driver: 'tedious',
      pool: module.exports.pool
    });
  };

}).call(this);

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)

},{"./connectionstring":349,"./datatypes":350,"./isolationlevel":351,"./table":353,"_process":9,"buffer":10,"events":339,"fs":8,"promise":357,"util":374}],353:[function(require,module,exports){
// Generated by CoffeeScript 1.10.0
(function() {
  var JSON_COLUMN_ID, MAX, TYPES, Table, declare, ref,
    slice = [].slice;

  ref = require('./datatypes'), TYPES = ref.TYPES, declare = ref.declare;

  MAX = 65535;

  JSON_COLUMN_ID = 'JSON_F52E2B61-18A1-11d1-B105-00805F49916B';

  Table = (function() {
    function Table(name) {
      var ref1;
      if (name) {
        ref1 = Table.parseName(name), this.name = ref1.name, this.schema = ref1.schema, this.database = ref1.database;
        this.path = "" + (this.database ? "[" + this.database + "]." : "") + (this.schema ? "[" + this.schema + "]." : "") + "[" + this.name + "]";
        this.temporary = this.name.charAt(0) === '#';
      }
      this.columns = [];
      this.rows = [];
      Object.defineProperty(this.columns, "add", {
        value: function(name, column, options) {
          if (options == null) {
            options = {};
          }
          if (column == null) {
            throw new Error("Column data type is not defined.");
          }
          if (column instanceof Function) {
            column = column();
          }
          column.name = name;
          column.nullable = options.nullable;
          column.primary = options.primary;
          return this.push(column);
        }
      });
      Object.defineProperty(this.rows, "add", {
        value: function() {
          var values;
          values = 1 <= arguments.length ? slice.call(arguments, 0) : [];
          return this.push(values);
        }
      });
    }


    /*
    	@private
     */

    Table.prototype._makeBulk = function() {
      var col, i, len, ref1;
      ref1 = this.columns;
      for (i = 0, len = ref1.length; i < len; i++) {
        col = ref1[i];
        switch (col.type) {
          case TYPES.Xml:
            col.type = TYPES.NVarChar(MAX).type;
            break;
          case TYPES.UDT:
          case TYPES.Geography:
          case TYPES.Geometry:
            col.type = TYPES.VarBinary(MAX).type;
        }
      }
      return this;
    };

    Table.prototype.declare = function() {
      var cols, pkey;
      pkey = this.columns.filter(function(col) {
        return col.primary === true;
      }).map(function(col) {
        return col.name;
      });
      cols = this.columns.map(function(col) {
        var def;
        def = ["[" + col.name + "] " + (declare(col.type, col))];
        if (col.nullable === true) {
          def.push("null");
        } else if (col.nullable === false) {
          def.push("not null");
        }
        if (col.primary === true && pkey.length === 1) {
          def.push("primary key");
        }
        return def.join(' ');
      });
      return "create table " + this.path + " (" + (cols.join(', ')) + (pkey.length > 1 ? ", constraint PK_" + (this.temporary ? this.name.substr(1) : this.name) + " primary key (" + (pkey.join(', ')) + ")" : "") + ")";
    };

    Table.fromRecordset = function(recordset, name) {
      var col, i, j, len, len1, ref1, ref2, row, t;
      t = new this(name);
      ref1 = recordset.columns;
      for (name in ref1) {
        col = ref1[name];
        t.columns.add(name, {
          type: col.type,
          length: col.length,
          scale: col.scale,
          precision: col.precision
        }, {
          nullable: col.nullable
        });
      }
      if (t.columns.length === 1 && t.columns[0].name === JSON_COLUMN_ID) {
        for (i = 0, len = recordset.length; i < len; i++) {
          row = recordset[i];
          t.rows.add(JSON.stringify(row));
        }
      } else {
        for (j = 0, len1 = recordset.length; j < len1; j++) {
          row = recordset[j];
          (ref2 = t.rows).add.apply(ref2, (function() {
            var k, len2, ref2, results;
            ref2 = t.columns;
            results = [];
            for (k = 0, len2 = ref2.length; k < len2; k++) {
              col = ref2[k];
              results.push(row[col.name]);
            }
            return results;
          })());
        }
      }
      return t;
    };

    Table.parseName = function(name) {
      var buffer, char, cursor, escaped, length, path;
      length = name.length;
      cursor = -1;
      buffer = '';
      escaped = false;
      path = [];
      while (++cursor < length) {
        char = name.charAt(cursor);
        if (char === '[') {
          if (escaped) {
            buffer += char;
          } else {
            escaped = true;
          }
        } else if (char === ']') {
          if (escaped) {
            escaped = false;
          } else {
            throw new Error("Invalid table name.");
          }
        } else if (char === '.') {
          if (escaped) {
            buffer += char;
          } else {
            path.push(buffer);
            buffer = '';
          }
        } else {
          buffer += char;
        }
      }
      if (buffer) {
        path.push(buffer);
      }
      switch (path.length) {
        case 1:
          return {
            name: path[0],
            schema: null,
            database: null
          };
        case 2:
          return {
            name: path[1],
            schema: path[0],
            database: null
          };
        case 3:
          return {
            name: path[2],
            schema: path[1],
            database: path[0]
          };
        default:
          throw new Error("Invalid table name.");
      }
    };

    return Table;

  })();

  module.exports = Table;

}).call(this);

},{"./datatypes":350}],354:[function(require,module,exports){
assert.notEqual = notEqual
assert.notOk = notOk
assert.equal = equal
assert.ok = assert

module.exports = assert

function equal (a, b, m) {
  assert(a == b, m) // eslint-disable-line eqeqeq
}

function notEqual (a, b, m) {
  assert(a != b, m) // eslint-disable-line eqeqeq
}

function notOk (t, m) {
  assert(!t, m)
}

function assert (t, m) {
  if (!t) throw new Error(m || 'AssertionError')
}

},{}],355:[function(require,module,exports){
/* global MutationObserver */
var document = require('global/document')
var window = require('global/window')
var assert = require('assert')
var watch = Object.create(null)
var KEY_ID = 'onloadid' + (new Date() % 9e6).toString(36)
var KEY_ATTR = 'data-' + KEY_ID
var INDEX = 0

if (window && window.MutationObserver) {
  var observer = new MutationObserver(function (mutations) {
    if (Object.keys(watch).length < 1) return
    for (var i = 0; i < mutations.length; i++) {
      if (mutations[i].attributeName === KEY_ATTR) {
        eachAttr(mutations[i], turnon, turnoff)
        continue
      }
      eachMutation(mutations[i].removedNodes, turnoff)
      eachMutation(mutations[i].addedNodes, turnon)
    }
  })
  if (document.body) {
    beginObserve(observer)
  } else {
    document.addEventListener('DOMContentLoaded', function (event) {
      beginObserve(observer)
    })
  }
}

function beginObserve (observer) {
  observer.observe(document.documentElement, {
    childList: true,
    subtree: true,
    attributes: true,
    attributeOldValue: true,
    attributeFilter: [KEY_ATTR]
  })
}

module.exports = function onload (el, on, off, caller) {
  assert(document.body, 'on-load: will not work prior to DOMContentLoaded')
  on = on || function () {}
  off = off || function () {}
  el.setAttribute(KEY_ATTR, 'o' + INDEX)
  watch['o' + INDEX] = [on, off, 0, caller || onload.caller]
  INDEX += 1
  return el
}

module.exports.KEY_ATTR = KEY_ATTR
module.exports.KEY_ID = KEY_ID

function turnon (index, el) {
  if (watch[index][0] && watch[index][2] === 0) {
    watch[index][0](el)
    watch[index][2] = 1
  }
}

function turnoff (index, el) {
  if (watch[index][1] && watch[index][2] === 1) {
    watch[index][1](el)
    watch[index][2] = 0
  }
}

function eachAttr (mutation, on, off) {
  var newValue = mutation.target.getAttribute(KEY_ATTR)
  if (sameOrigin(mutation.oldValue, newValue)) {
    watch[newValue] = watch[mutation.oldValue]
    return
  }
  if (watch[mutation.oldValue]) {
    off(mutation.oldValue, mutation.target)
  }
  if (watch[newValue]) {
    on(newValue, mutation.target)
  }
}

function sameOrigin (oldValue, newValue) {
  if (!oldValue || !newValue) return false
  return watch[oldValue][3] === watch[newValue][3]
}

function eachMutation (nodes, fn) {
  var keys = Object.keys(watch)
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i] && nodes[i].getAttribute && nodes[i].getAttribute(KEY_ATTR)) {
      var onloadid = nodes[i].getAttribute(KEY_ATTR)
      keys.forEach(function (k) {
        if (onloadid === k) {
          fn(k, nodes[i])
        }
      })
    }
    if (nodes[i].childNodes.length > 0) {
      eachMutation(nodes[i].childNodes, fn)
    }
  }
}

},{"assert":354,"global/document":340,"global/window":341}],356:[function(require,module,exports){
(function (process){
(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.page = factory());
}(this, (function () { 'use strict';

var isarray = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

/**
 * Expose `pathToRegexp`.
 */
var pathToRegexp_1 = pathToRegexp;
var parse_1 = parse;
var compile_1 = compile;
var tokensToFunction_1 = tokensToFunction;
var tokensToRegExp_1 = tokensToRegExp;

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g');

/**
 * Parse a string for the raw tokens.
 *
 * @param  {String} str
 * @return {Array}
 */
function parse (str) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var res;

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1];
      continue
    }

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path);
      path = '';
    }

    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var suffix = res[6];
    var asterisk = res[7];

    var repeat = suffix === '+' || suffix === '*';
    var optional = suffix === '?' || suffix === '*';
    var delimiter = prefix || '/';
    var pattern = capture || group || (asterisk ? '.*' : '[^' + delimiter + ']+?');

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      pattern: escapeGroup(pattern)
    });
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index);
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path);
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {String}   str
 * @return {Function}
 */
function compile (str) {
  return tokensToFunction(parse(str))
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length);

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^' + tokens[i].pattern + '$');
    }
  }

  return function (obj) {
    var path = '';
    var data = obj || {};

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;

        continue
      }

      var value = data[token.name];
      var segment;

      if (value == null) {
        if (token.optional) {
          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received "' + value + '"')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encodeURIComponent(value[j]);

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue
      }

      segment = encodeURIComponent(value);

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment;
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {String} str
 * @return {String}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {String} group
 * @return {String}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {RegExp} re
 * @param  {Array}  keys
 * @return {RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys;
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {String}
 */
function flags (options) {
  return options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {RegExp} path
 * @param  {Array}  keys
 * @return {RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        pattern: null
      });
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {Array}  path
 * @param  {Array}  keys
 * @param  {Object} options
 * @return {RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {String} path
 * @param  {Array}  keys
 * @param  {Object} options
 * @return {RegExp}
 */
function stringToRegexp (path, keys, options) {
  var tokens = parse(path);
  var re = tokensToRegExp(tokens, options);

  // Attach keys back to the regexp.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] !== 'string') {
      keys.push(tokens[i]);
    }
  }

  return attachKeys(re, keys)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {Array}  tokens
 * @param  {Array}  keys
 * @param  {Object} options
 * @return {RegExp}
 */
function tokensToRegExp (tokens, options) {
  options = options || {};

  var strict = options.strict;
  var end = options.end !== false;
  var route = '';
  var lastToken = tokens[tokens.length - 1];
  var endsWithSlash = typeof lastToken === 'string' && /\/$/.test(lastToken);

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = token.pattern;

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }

      if (token.optional) {
        if (prefix) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }

      route += capture;
    }
  }

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithSlash ? route.slice(0, -2) : route) + '(?:\\/(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithSlash ? '' : '(?=\\/|$)';
  }

  return new RegExp('^' + route, flags(options))
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(String|RegExp|Array)} path
 * @param  {Array}                 [keys]
 * @param  {Object}                [options]
 * @return {RegExp}
 */
function pathToRegexp (path, keys, options) {
  keys = keys || [];

  if (!isarray(keys)) {
    options = keys;
    keys = [];
  } else if (!options) {
    options = {};
  }

  if (path instanceof RegExp) {
    return regexpToRegexp(path, keys, options)
  }

  if (isarray(path)) {
    return arrayToRegexp(path, keys, options)
  }

  return stringToRegexp(path, keys, options)
}

pathToRegexp_1.parse = parse_1;
pathToRegexp_1.compile = compile_1;
pathToRegexp_1.tokensToFunction = tokensToFunction_1;
pathToRegexp_1.tokensToRegExp = tokensToRegExp_1;

/**
   * Module dependencies.
   */

  

  /**
   * Module exports.
   */

  var page_js = page;
  page.default = page;
  page.Context = Context;
  page.Route = Route;
  page.sameOrigin = sameOrigin;

  /**
   * Short-cuts for global-object checks
   */

  var hasDocument = ('undefined' !== typeof document);
  var hasWindow = ('undefined' !== typeof window);
  var hasHistory = ('undefined' !== typeof history);
  var hasProcess = typeof process !== 'undefined';

  /**
   * Detect click event
   */
  var clickEvent = hasDocument && document.ontouchstart ? 'touchstart' : 'click';

  /**
   * To work properly with the URL
   * history.location generated polyfill in https://github.com/devote/HTML5-History-API
   */

  var isLocation = hasWindow && !!(window.history.location || window.location);

  /**
   * Perform initial dispatch.
   */

  var dispatch = true;


  /**
   * Decode URL components (query string, pathname, hash).
   * Accommodates both regular percent encoding and x-www-form-urlencoded format.
   */
  var decodeURLComponents = true;

  /**
   * Base path.
   */

  var base = '';

  /**
   * Strict path matching.
   */

  var strict = false;

  /**
   * Running flag.
   */

  var running;

  /**
   * HashBang option
   */

  var hashbang = false;

  /**
   * Previous context, for capturing
   * page exit events.
   */

  var prevContext;

  /**
   * The window for which this `page` is running
   */
  var pageWindow;

  /**
   * Register `path` with callback `fn()`,
   * or route `path`, or redirection,
   * or `page.start()`.
   *
   *   page(fn);
   *   page('*', fn);
   *   page('/user/:id', load, user);
   *   page('/user/' + user.id, { some: 'thing' });
   *   page('/user/' + user.id);
   *   page('/from', '/to')
   *   page();
   *
   * @param {string|!Function|!Object} path
   * @param {Function=} fn
   * @api public
   */

  function page(path, fn) {
    // <callback>
    if ('function' === typeof path) {
      return page('*', path);
    }

    // route <path> to <callback ...>
    if ('function' === typeof fn) {
      var route = new Route(/** @type {string} */ (path));
      for (var i = 1; i < arguments.length; ++i) {
        page.callbacks.push(route.middleware(arguments[i]));
      }
      // show <path> with [state]
    } else if ('string' === typeof path) {
      page['string' === typeof fn ? 'redirect' : 'show'](path, fn);
      // start [options]
    } else {
      page.start(path);
    }
  }

  /**
   * Callback functions.
   */

  page.callbacks = [];
  page.exits = [];

  /**
   * Current path being processed
   * @type {string}
   */
  page.current = '';

  /**
   * Number of pages navigated to.
   * @type {number}
   *
   *     page.len == 0;
   *     page('/login');
   *     page.len == 1;
   */

  page.len = 0;

  /**
   * Get or set basepath to `path`.
   *
   * @param {string} path
   * @api public
   */

  page.base = function(path) {
    if (0 === arguments.length) return base;
    base = path;
  };

  /**
   * Get or set strict path matching to `enable`
   *
   * @param {boolean} enable
   * @api public
   */

  page.strict = function(enable) {
    if (0 === arguments.length) return strict;
    strict = enable;
  };

  /**
   * Bind with the given `options`.
   *
   * Options:
   *
   *    - `click` bind to click events [true]
   *    - `popstate` bind to popstate [true]
   *    - `dispatch` perform initial dispatch [true]
   *
   * @param {Object} options
   * @api public
   */

  page.start = function(options) {
    options = options || {};
    if (running) return;
    running = true;
    pageWindow = options.window || (hasWindow && window);
    if (false === options.dispatch) dispatch = false;
    if (false === options.decodeURLComponents) decodeURLComponents = false;
    if (false !== options.popstate && hasWindow) pageWindow.addEventListener('popstate', onpopstate, false);
    if (false !== options.click && hasDocument) {
      pageWindow.document.addEventListener(clickEvent, onclick, false);
    }
    hashbang = !!options.hashbang;
    if(hashbang && hasWindow && !hasHistory) {
      pageWindow.addEventListener('hashchange', onpopstate, false);
    }
    if (!dispatch) return;

    var url;
    if(isLocation) {
      var loc = pageWindow.location;

      if(hashbang && ~loc.hash.indexOf('#!')) {
        url = loc.hash.substr(2) + loc.search;
      } else if (hashbang) {
        url = loc.search + loc.hash;
      } else {
        url = loc.pathname + loc.search + loc.hash;
      }
    }

    page.replace(url, null, true, dispatch);
  };

  /**
   * Unbind click and popstate event handlers.
   *
   * @api public
   */

  page.stop = function() {
    if (!running) return;
    page.current = '';
    page.len = 0;
    running = false;
    hasDocument && pageWindow.document.removeEventListener(clickEvent, onclick, false);
    hasWindow && pageWindow.removeEventListener('popstate', onpopstate, false);
    hasWindow && pageWindow.removeEventListener('hashchange', onpopstate, false);
  };

  /**
   * Show `path` with optional `state` object.
   *
   * @param {string} path
   * @param {Object=} state
   * @param {boolean=} dispatch
   * @param {boolean=} push
   * @return {!Context}
   * @api public
   */

  page.show = function(path, state, dispatch, push) {
    var ctx = new Context(path, state),
      prev = prevContext;
    prevContext = ctx;
    page.current = ctx.path;
    if (false !== dispatch) page.dispatch(ctx, prev);
    if (false !== ctx.handled && false !== push) ctx.pushState();
    return ctx;
  };

  /**
   * Goes back in the history
   * Back should always let the current route push state and then go back.
   *
   * @param {string} path - fallback path to go back if no more history exists, if undefined defaults to page.base
   * @param {Object=} state
   * @api public
   */

  page.back = function(path, state) {
    if (page.len > 0) {
      // this may need more testing to see if all browsers
      // wait for the next tick to go back in history
      hasHistory && pageWindow.history.back();
      page.len--;
    } else if (path) {
      setTimeout(function() {
        page.show(path, state);
      });
    }else{
      setTimeout(function() {
        page.show(getBase(), state);
      });
    }
  };


  /**
   * Register route to redirect from one path to other
   * or just redirect to another route
   *
   * @param {string} from - if param 'to' is undefined redirects to 'from'
   * @param {string=} to
   * @api public
   */
  page.redirect = function(from, to) {
    // Define route from a path to another
    if ('string' === typeof from && 'string' === typeof to) {
      page(from, function(e) {
        setTimeout(function() {
          page.replace(/** @type {!string} */ (to));
        }, 0);
      });
    }

    // Wait for the push state and replace it with another
    if ('string' === typeof from && 'undefined' === typeof to) {
      setTimeout(function() {
        page.replace(from);
      }, 0);
    }
  };

  /**
   * Replace `path` with optional `state` object.
   *
   * @param {string} path
   * @param {Object=} state
   * @param {boolean=} init
   * @param {boolean=} dispatch
   * @return {!Context}
   * @api public
   */


  page.replace = function(path, state, init, dispatch) {
    var ctx = new Context(path, state),
      prev = prevContext;
    prevContext = ctx;
    page.current = ctx.path;
    ctx.init = init;
    ctx.save(); // save before dispatching, which may redirect
    if (false !== dispatch) page.dispatch(ctx, prev);
    return ctx;
  };

  /**
   * Dispatch the given `ctx`.
   *
   * @param {Context} ctx
   * @api private
   */

  page.dispatch = function(ctx, prev) {
    var i = 0,
      j = 0;

    function nextExit() {
      var fn = page.exits[j++];
      if (!fn) return nextEnter();
      fn(prev, nextExit);
    }

    function nextEnter() {
      var fn = page.callbacks[i++];

      if (ctx.path !== page.current) {
        ctx.handled = false;
        return;
      }
      if (!fn) return unhandled(ctx);
      fn(ctx, nextEnter);
    }

    if (prev) {
      nextExit();
    } else {
      nextEnter();
    }
  };

  /**
   * Unhandled `ctx`. When it's not the initial
   * popstate then redirect. If you wish to handle
   * 404s on your own use `page('*', callback)`.
   *
   * @param {Context} ctx
   * @api private
   */
  function unhandled(ctx) {
    if (ctx.handled) return;
    var current;

    if (hashbang) {
      current = isLocation && getBase() + pageWindow.location.hash.replace('#!', '');
    } else {
      current = isLocation && pageWindow.location.pathname + pageWindow.location.search;
    }

    if (current === ctx.canonicalPath) return;
    page.stop();
    ctx.handled = false;
    isLocation && (pageWindow.location.href = ctx.canonicalPath);
  }

  /**
   * Register an exit route on `path` with
   * callback `fn()`, which will be called
   * on the previous context when a new
   * page is visited.
   */
  page.exit = function(path, fn) {
    if (typeof path === 'function') {
      return page.exit('*', path);
    }

    var route = new Route(path);
    for (var i = 1; i < arguments.length; ++i) {
      page.exits.push(route.middleware(arguments[i]));
    }
  };

  /**
   * Remove URL encoding from the given `str`.
   * Accommodates whitespace in both x-www-form-urlencoded
   * and regular percent-encoded form.
   *
   * @param {string} val - URL component to decode
   */
  function decodeURLEncodedURIComponent(val) {
    if (typeof val !== 'string') { return val; }
    return decodeURLComponents ? decodeURIComponent(val.replace(/\+/g, ' ')) : val;
  }

  /**
   * Initialize a new "request" `Context`
   * with the given `path` and optional initial `state`.
   *
   * @constructor
   * @param {string} path
   * @param {Object=} state
   * @api public
   */

  function Context(path, state) {
    var pageBase = getBase();
    if ('/' === path[0] && 0 !== path.indexOf(pageBase)) path = pageBase + (hashbang ? '#!' : '') + path;
    var i = path.indexOf('?');

    this.canonicalPath = path;
    this.path = path.replace(pageBase, '') || '/';
    if (hashbang) this.path = this.path.replace('#!', '') || '/';

    this.title = (hasDocument && pageWindow.document.title);
    this.state = state || {};
    this.state.path = path;
    this.querystring = ~i ? decodeURLEncodedURIComponent(path.slice(i + 1)) : '';
    this.pathname = decodeURLEncodedURIComponent(~i ? path.slice(0, i) : path);
    this.params = {};

    // fragment
    this.hash = '';
    if (!hashbang) {
      if (!~this.path.indexOf('#')) return;
      var parts = this.path.split('#');
      this.path = this.pathname = parts[0];
      this.hash = decodeURLEncodedURIComponent(parts[1]) || '';
      this.querystring = this.querystring.split('#')[0];
    }
  }

  /**
   * Expose `Context`.
   */

  page.Context = Context;

  /**
   * Push state.
   *
   * @api private
   */

  Context.prototype.pushState = function() {
    page.len++;
    if (hasHistory) {
        pageWindow.history.pushState(this.state, this.title,
          hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);
    }
  };

  /**
   * Save the context state.
   *
   * @api public
   */

  Context.prototype.save = function() {
    if (hasHistory && pageWindow.location.protocol !== 'file:') {
        pageWindow.history.replaceState(this.state, this.title,
          hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);
    }
  };

  /**
   * Initialize `Route` with the given HTTP `path`,
   * and an array of `callbacks` and `options`.
   *
   * Options:
   *
   *   - `sensitive`    enable case-sensitive routes
   *   - `strict`       enable strict matching for trailing slashes
   *
   * @constructor
   * @param {string} path
   * @param {Object=} options
   * @api private
   */

  function Route(path, options) {
    options = options || {};
    options.strict = options.strict || strict;
    this.path = (path === '*') ? '(.*)' : path;
    this.method = 'GET';
    this.regexp = pathToRegexp_1(this.path,
      this.keys = [],
      options);
  }

  /**
   * Expose `Route`.
   */

  page.Route = Route;

  /**
   * Return route middleware with
   * the given callback `fn()`.
   *
   * @param {Function} fn
   * @return {Function}
   * @api public
   */

  Route.prototype.middleware = function(fn) {
    var self = this;
    return function(ctx, next) {
      if (self.match(ctx.path, ctx.params)) return fn(ctx, next);
      next();
    };
  };

  /**
   * Check if this route matches `path`, if so
   * populate `params`.
   *
   * @param {string} path
   * @param {Object} params
   * @return {boolean}
   * @api private
   */

  Route.prototype.match = function(path, params) {
    var keys = this.keys,
      qsIndex = path.indexOf('?'),
      pathname = ~qsIndex ? path.slice(0, qsIndex) : path,
      m = this.regexp.exec(decodeURIComponent(pathname));

    if (!m) return false;

    for (var i = 1, len = m.length; i < len; ++i) {
      var key = keys[i - 1];
      var val = decodeURLEncodedURIComponent(m[i]);
      if (val !== undefined || !(hasOwnProperty.call(params, key.name))) {
        params[key.name] = val;
      }
    }

    return true;
  };


  /**
   * Handle "populate" events.
   */

  var onpopstate = (function () {
    var loaded = false;
    if ( ! hasWindow ) {
      return;
    }
    if (hasDocument && document.readyState === 'complete') {
      loaded = true;
    } else {
      window.addEventListener('load', function() {
        setTimeout(function() {
          loaded = true;
        }, 0);
      });
    }
    return function onpopstate(e) {
      if (!loaded) return;
      if (e.state) {
        var path = e.state.path;
        page.replace(path, e.state);
      } else if (isLocation) {
        var loc = pageWindow.location;
        page.show(loc.pathname + loc.hash, undefined, undefined, false);
      }
    };
  })();
  /**
   * Handle "click" events.
   */

  /* jshint +W054 */
  function onclick(e) {
    if (1 !== which(e)) return;

    if (e.metaKey || e.ctrlKey || e.shiftKey) return;
    if (e.defaultPrevented) return;

    // ensure link
    // use shadow dom when available if not, fall back to composedPath() for browsers that only have shady
    var el = e.target;
    var eventPath = e.path || (e.composedPath ? e.composedPath() : null);

    if(eventPath) {
      for (var i = 0; i < eventPath.length; i++) {
        if (!eventPath[i].nodeName) continue;
        if (eventPath[i].nodeName.toUpperCase() !== 'A') continue;
        if (!eventPath[i].href) continue;

        el = eventPath[i];
        break;
      }
    }
    // continue ensure link
    // el.nodeName for svg links are 'a' instead of 'A'
    while (el && 'A' !== el.nodeName.toUpperCase()) el = el.parentNode;
    if (!el || 'A' !== el.nodeName.toUpperCase()) return;

    // check if link is inside an svg
    // in this case, both href and target are always inside an object
    var svg = (typeof el.href === 'object') && el.href.constructor.name === 'SVGAnimatedString';

    // Ignore if tag has
    // 1. "download" attribute
    // 2. rel="external" attribute
    if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') return;

    // ensure non-hash for the same path
    var link = el.getAttribute('href');
    if(!hashbang && samePath(el) && (el.hash || '#' === link)) return;

    // Check for mailto: in the href
    if (link && link.indexOf('mailto:') > -1) return;

    // check target
    // svg target is an object and its desired value is in .baseVal property
    if (svg ? el.target.baseVal : el.target) return;

    // x-origin
    // note: svg links that are not relative don't call click events (and skip page.js)
    // consequently, all svg links tested inside page.js are relative and in the same origin
    if (!svg && !sameOrigin(el.href)) return;

    // rebuild path
    // There aren't .pathname and .search properties in svg links, so we use href
    // Also, svg href is an object and its desired value is in .baseVal property
    var path = svg ? el.href.baseVal : (el.pathname + el.search + (el.hash || ''));

    path = path[0] !== '/' ? '/' + path : path;

    // strip leading "/[drive letter]:" on NW.js on Windows
    if (hasProcess && path.match(/^\/[a-zA-Z]:\//)) {
      path = path.replace(/^\/[a-zA-Z]:\//, '/');
    }

    // same page
    var orig = path;
    var pageBase = getBase();

    if (path.indexOf(pageBase) === 0) {
      path = path.substr(base.length);
    }

    if (hashbang) path = path.replace('#!', '');

    if (pageBase && orig === path) return;

    e.preventDefault();
    page.show(orig);
  }

  /**
   * Event button.
   */

  function which(e) {
    e = e || (hasWindow && window.event);
    return null == e.which ? e.button : e.which;
  }

  /**
   * Convert to a URL object
   */
  function toURL(href) {
    if(typeof URL === 'function' && isLocation) {
      return new URL(href, location.toString());
    } else if (hasDocument) {
      var anc = document.createElement('a');
      anc.href = href;
      return anc;
    }
  }

  /**
   * Check if `href` is the same origin.
   */

  function sameOrigin(href) {
    if(!href || !isLocation) return false;
    var url = toURL(href);

    var loc = pageWindow.location;
    return loc.protocol === url.protocol &&
      loc.hostname === url.hostname &&
      loc.port === url.port;
  }

  function samePath(url) {
    if(!isLocation) return false;
    var loc = pageWindow.location;
    return url.pathname === loc.pathname &&
      url.search === loc.search;
  }

  /**
   * Gets the `base`, which depends on whether we are using History or
   * hashbang routing.
   */
  function getBase() {
    if(!!base) return base;
    var loc = hasWindow && pageWindow && pageWindow.location;
    return (hasWindow && hashbang && loc && loc.protocol === 'file:') ? loc.pathname : base;
  }

  page.sameOrigin = sameOrigin;

return page_js;

})));

}).call(this,require('_process'))

},{"_process":9}],357:[function(require,module,exports){
'use strict';

module.exports = require('./lib')

},{"./lib":362}],358:[function(require,module,exports){
'use strict';

var asap = require('asap/raw');

function noop() {}

// States:
//
// 0 - pending
// 1 - fulfilled with _value
// 2 - rejected with _value
// 3 - adopted the state of another promise, _value
//
// once the state is no longer pending (0) it is immutable

// All `_` prefixed properties will be reduced to `_{random number}`
// at build time to obfuscate them and discourage their use.
// We don't use symbols or Object.defineProperty to fully hide them
// because the performance isn't good enough.


// to avoid using try/catch inside critical functions, we
// extract them to here.
var LAST_ERROR = null;
var IS_ERROR = {};
function getThen(obj) {
  try {
    return obj.then;
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

function tryCallOne(fn, a) {
  try {
    return fn(a);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}
function tryCallTwo(fn, a, b) {
  try {
    fn(a, b);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

module.exports = Promise;

function Promise(fn) {
  if (typeof this !== 'object') {
    throw new TypeError('Promises must be constructed via new');
  }
  if (typeof fn !== 'function') {
    throw new TypeError('Promise constructor\'s argument is not a function');
  }
  this._40 = 0;
  this._65 = 0;
  this._55 = null;
  this._72 = null;
  if (fn === noop) return;
  doResolve(fn, this);
}
Promise._37 = null;
Promise._87 = null;
Promise._61 = noop;

Promise.prototype.then = function(onFulfilled, onRejected) {
  if (this.constructor !== Promise) {
    return safeThen(this, onFulfilled, onRejected);
  }
  var res = new Promise(noop);
  handle(this, new Handler(onFulfilled, onRejected, res));
  return res;
};

function safeThen(self, onFulfilled, onRejected) {
  return new self.constructor(function (resolve, reject) {
    var res = new Promise(noop);
    res.then(resolve, reject);
    handle(self, new Handler(onFulfilled, onRejected, res));
  });
}
function handle(self, deferred) {
  while (self._65 === 3) {
    self = self._55;
  }
  if (Promise._37) {
    Promise._37(self);
  }
  if (self._65 === 0) {
    if (self._40 === 0) {
      self._40 = 1;
      self._72 = deferred;
      return;
    }
    if (self._40 === 1) {
      self._40 = 2;
      self._72 = [self._72, deferred];
      return;
    }
    self._72.push(deferred);
    return;
  }
  handleResolved(self, deferred);
}

function handleResolved(self, deferred) {
  asap(function() {
    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;
    if (cb === null) {
      if (self._65 === 1) {
        resolve(deferred.promise, self._55);
      } else {
        reject(deferred.promise, self._55);
      }
      return;
    }
    var ret = tryCallOne(cb, self._55);
    if (ret === IS_ERROR) {
      reject(deferred.promise, LAST_ERROR);
    } else {
      resolve(deferred.promise, ret);
    }
  });
}
function resolve(self, newValue) {
  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
  if (newValue === self) {
    return reject(
      self,
      new TypeError('A promise cannot be resolved with itself.')
    );
  }
  if (
    newValue &&
    (typeof newValue === 'object' || typeof newValue === 'function')
  ) {
    var then = getThen(newValue);
    if (then === IS_ERROR) {
      return reject(self, LAST_ERROR);
    }
    if (
      then === self.then &&
      newValue instanceof Promise
    ) {
      self._65 = 3;
      self._55 = newValue;
      finale(self);
      return;
    } else if (typeof then === 'function') {
      doResolve(then.bind(newValue), self);
      return;
    }
  }
  self._65 = 1;
  self._55 = newValue;
  finale(self);
}

function reject(self, newValue) {
  self._65 = 2;
  self._55 = newValue;
  if (Promise._87) {
    Promise._87(self, newValue);
  }
  finale(self);
}
function finale(self) {
  if (self._40 === 1) {
    handle(self, self._72);
    self._72 = null;
  }
  if (self._40 === 2) {
    for (var i = 0; i < self._72.length; i++) {
      handle(self, self._72[i]);
    }
    self._72 = null;
  }
}

function Handler(onFulfilled, onRejected, promise){
  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
  this.onRejected = typeof onRejected === 'function' ? onRejected : null;
  this.promise = promise;
}

/**
 * Take a potentially misbehaving resolver function and make sure
 * onFulfilled and onRejected are only called once.
 *
 * Makes no guarantees about asynchrony.
 */
function doResolve(fn, promise) {
  var done = false;
  var res = tryCallTwo(fn, function (value) {
    if (done) return;
    done = true;
    resolve(promise, value);
  }, function (reason) {
    if (done) return;
    done = true;
    reject(promise, reason);
  });
  if (!done && res === IS_ERROR) {
    done = true;
    reject(promise, LAST_ERROR);
  }
}

},{"asap/raw":2}],359:[function(require,module,exports){
'use strict';

var Promise = require('./core.js');

module.exports = Promise;
Promise.prototype.done = function (onFulfilled, onRejected) {
  var self = arguments.length ? this.then.apply(this, arguments) : this;
  self.then(null, function (err) {
    setTimeout(function () {
      throw err;
    }, 0);
  });
};

},{"./core.js":358}],360:[function(require,module,exports){
'use strict';

//This file contains the ES6 extensions to the core Promises/A+ API

var Promise = require('./core.js');

module.exports = Promise;

/* Static Functions */

var TRUE = valuePromise(true);
var FALSE = valuePromise(false);
var NULL = valuePromise(null);
var UNDEFINED = valuePromise(undefined);
var ZERO = valuePromise(0);
var EMPTYSTRING = valuePromise('');

function valuePromise(value) {
  var p = new Promise(Promise._61);
  p._65 = 1;
  p._55 = value;
  return p;
}
Promise.resolve = function (value) {
  if (value instanceof Promise) return value;

  if (value === null) return NULL;
  if (value === undefined) return UNDEFINED;
  if (value === true) return TRUE;
  if (value === false) return FALSE;
  if (value === 0) return ZERO;
  if (value === '') return EMPTYSTRING;

  if (typeof value === 'object' || typeof value === 'function') {
    try {
      var then = value.then;
      if (typeof then === 'function') {
        return new Promise(then.bind(value));
      }
    } catch (ex) {
      return new Promise(function (resolve, reject) {
        reject(ex);
      });
    }
  }
  return valuePromise(value);
};

Promise.all = function (arr) {
  var args = Array.prototype.slice.call(arr);

  return new Promise(function (resolve, reject) {
    if (args.length === 0) return resolve([]);
    var remaining = args.length;
    function res(i, val) {
      if (val && (typeof val === 'object' || typeof val === 'function')) {
        if (val instanceof Promise && val.then === Promise.prototype.then) {
          while (val._65 === 3) {
            val = val._55;
          }
          if (val._65 === 1) return res(i, val._55);
          if (val._65 === 2) reject(val._55);
          val.then(function (val) {
            res(i, val);
          }, reject);
          return;
        } else {
          var then = val.then;
          if (typeof then === 'function') {
            var p = new Promise(then.bind(val));
            p.then(function (val) {
              res(i, val);
            }, reject);
            return;
          }
        }
      }
      args[i] = val;
      if (--remaining === 0) {
        resolve(args);
      }
    }
    for (var i = 0; i < args.length; i++) {
      res(i, args[i]);
    }
  });
};

Promise.reject = function (value) {
  return new Promise(function (resolve, reject) {
    reject(value);
  });
};

Promise.race = function (values) {
  return new Promise(function (resolve, reject) {
    values.forEach(function(value){
      Promise.resolve(value).then(resolve, reject);
    });
  });
};

/* Prototype Methods */

Promise.prototype['catch'] = function (onRejected) {
  return this.then(null, onRejected);
};

},{"./core.js":358}],361:[function(require,module,exports){
'use strict';

var Promise = require('./core.js');

module.exports = Promise;
Promise.prototype['finally'] = function (f) {
  return this.then(function (value) {
    return Promise.resolve(f()).then(function () {
      return value;
    });
  }, function (err) {
    return Promise.resolve(f()).then(function () {
      throw err;
    });
  });
};

},{"./core.js":358}],362:[function(require,module,exports){
'use strict';

module.exports = require('./core.js');
require('./done.js');
require('./finally.js');
require('./es6-extensions.js');
require('./node-extensions.js');
require('./synchronous.js');

},{"./core.js":358,"./done.js":359,"./es6-extensions.js":360,"./finally.js":361,"./node-extensions.js":363,"./synchronous.js":364}],363:[function(require,module,exports){
'use strict';

// This file contains then/promise specific extensions that are only useful
// for node.js interop

var Promise = require('./core.js');
var asap = require('asap');

module.exports = Promise;

/* Static Functions */

Promise.denodeify = function (fn, argumentCount) {
  if (
    typeof argumentCount === 'number' && argumentCount !== Infinity
  ) {
    return denodeifyWithCount(fn, argumentCount);
  } else {
    return denodeifyWithoutCount(fn);
  }
};

var callbackFn = (
  'function (err, res) {' +
  'if (err) { rj(err); } else { rs(res); }' +
  '}'
);
function denodeifyWithCount(fn, argumentCount) {
  var args = [];
  for (var i = 0; i < argumentCount; i++) {
    args.push('a' + i);
  }
  var body = [
    'return function (' + args.join(',') + ') {',
    'var self = this;',
    'return new Promise(function (rs, rj) {',
    'var res = fn.call(',
    ['self'].concat(args).concat([callbackFn]).join(','),
    ');',
    'if (res &&',
    '(typeof res === "object" || typeof res === "function") &&',
    'typeof res.then === "function"',
    ') {rs(res);}',
    '});',
    '};'
  ].join('');
  return Function(['Promise', 'fn'], body)(Promise, fn);
}
function denodeifyWithoutCount(fn) {
  var fnLength = Math.max(fn.length - 1, 3);
  var args = [];
  for (var i = 0; i < fnLength; i++) {
    args.push('a' + i);
  }
  var body = [
    'return function (' + args.join(',') + ') {',
    'var self = this;',
    'var args;',
    'var argLength = arguments.length;',
    'if (arguments.length > ' + fnLength + ') {',
    'args = new Array(arguments.length + 1);',
    'for (var i = 0; i < arguments.length; i++) {',
    'args[i] = arguments[i];',
    '}',
    '}',
    'return new Promise(function (rs, rj) {',
    'var cb = ' + callbackFn + ';',
    'var res;',
    'switch (argLength) {',
    args.concat(['extra']).map(function (_, index) {
      return (
        'case ' + (index) + ':' +
        'res = fn.call(' + ['self'].concat(args.slice(0, index)).concat('cb').join(',') + ');' +
        'break;'
      );
    }).join(''),
    'default:',
    'args[argLength] = cb;',
    'res = fn.apply(self, args);',
    '}',
    
    'if (res &&',
    '(typeof res === "object" || typeof res === "function") &&',
    'typeof res.then === "function"',
    ') {rs(res);}',
    '});',
    '};'
  ].join('');

  return Function(
    ['Promise', 'fn'],
    body
  )(Promise, fn);
}

Promise.nodeify = function (fn) {
  return function () {
    var args = Array.prototype.slice.call(arguments);
    var callback =
      typeof args[args.length - 1] === 'function' ? args.pop() : null;
    var ctx = this;
    try {
      return fn.apply(this, arguments).nodeify(callback, ctx);
    } catch (ex) {
      if (callback === null || typeof callback == 'undefined') {
        return new Promise(function (resolve, reject) {
          reject(ex);
        });
      } else {
        asap(function () {
          callback.call(ctx, ex);
        })
      }
    }
  }
};

Promise.prototype.nodeify = function (callback, ctx) {
  if (typeof callback != 'function') return this;

  this.then(function (value) {
    asap(function () {
      callback.call(ctx, null, value);
    });
  }, function (err) {
    asap(function () {
      callback.call(ctx, err);
    });
  });
};

},{"./core.js":358,"asap":1}],364:[function(require,module,exports){
'use strict';

var Promise = require('./core.js');

module.exports = Promise;
Promise.enableSynchronous = function () {
  Promise.prototype.isPending = function() {
    return this.getState() == 0;
  };

  Promise.prototype.isFulfilled = function() {
    return this.getState() == 1;
  };

  Promise.prototype.isRejected = function() {
    return this.getState() == 2;
  };

  Promise.prototype.getValue = function () {
    if (this._65 === 3) {
      return this._55.getValue();
    }

    if (!this.isFulfilled()) {
      throw new Error('Cannot get a value of an unfulfilled promise.');
    }

    return this._55;
  };

  Promise.prototype.getReason = function () {
    if (this._65 === 3) {
      return this._55.getReason();
    }

    if (!this.isRejected()) {
      throw new Error('Cannot get a rejection reason of a non-rejected promise.');
    }

    return this._55;
  };

  Promise.prototype.getState = function () {
    if (this._65 === 3) {
      return this._55.getState();
    }
    if (this._65 === -1 || this._65 === -2) {
      return 0;
    }

    return this._65;
  };
};

Promise.disableSynchronous = function() {
  Promise.prototype.isPending = undefined;
  Promise.prototype.isFulfilled = undefined;
  Promise.prototype.isRejected = undefined;
  Promise.prototype.getValue = undefined;
  Promise.prototype.getReason = undefined;
  Promise.prototype.getState = undefined;
};

},{"./core.js":358}],365:[function(require,module,exports){
(function (global){
/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		typeof define == 'function' &&
		typeof define.amd == 'object' &&
		define.amd
	) {
		define('punycode', function() {
			return punycode;
		});
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],366:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],367:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],368:[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":366,"./encode":367}],369:[function(require,module,exports){

var orig = document.title;

exports = module.exports = set;

function set(str) {
  var i = 1;
  var args = arguments;
  document.title = str.replace(/%[os]/g, function(_){
    switch (_) {
      case '%o':
        return orig;
      case '%s':
        return args[i++];
    }
  });
}

exports.reset = function(){
  set(orig);
};

},{}],370:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var punycode = require('punycode');
var util = require('./util');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = require('querystring');

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};

},{"./util":371,"punycode":365,"querystring":368}],371:[function(require,module,exports){
'use strict';

module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};

},{}],372:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],373:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],374:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./support/isBuffer":373,"_process":9,"inherits":372}],375:[function(require,module,exports){
var bel = require('bel') // turns template tag into DOM elements
var morphdom = require('morphdom') // efficiently diffs + morphs two DOM elements
var defaultEvents = require('./update-events.js') // default events to be copied when dom elements update

module.exports = bel

// TODO move this + defaultEvents to a new module once we receive more feedback
module.exports.update = function (fromNode, toNode, opts) {
  if (!opts) opts = {}
  if (opts.events !== false) {
    if (!opts.onBeforeElUpdated) opts.onBeforeElUpdated = copier
  }

  return morphdom(fromNode, toNode, opts)

  // morphdom only copies attributes. we decided we also wanted to copy events
  // that can be set via attributes
  function copier (f, t) {
    // copy events:
    var events = opts.events || defaultEvents
    for (var i = 0; i < events.length; i++) {
      var ev = events[i]
      if (t[ev]) { // if new element has a whitelisted attribute
        f[ev] = t[ev] // update existing element
      } else if (f[ev]) { // if existing element has it and new one doesnt
        f[ev] = undefined // remove it from existing element
      }
    }
    var oldValue = f.value
    var newValue = t.value
    // copy values for form elements
    if ((f.nodeName === 'INPUT' && f.type !== 'file') || f.nodeName === 'SELECT') {
      if (!newValue && !t.hasAttribute('value')) {
        t.value = f.value
      } else if (newValue !== oldValue) {
        f.value = newValue
      }
    } else if (f.nodeName === 'TEXTAREA') {
      if (t.getAttribute('value') === null) f.value = t.value
    }
  }
}

},{"./update-events.js":376,"bel":6,"morphdom":347}],376:[function(require,module,exports){
module.exports = [
  // attribute events (can be set with attributes)
  'onclick',
  'ondblclick',
  'onmousedown',
  'onmouseup',
  'onmouseover',
  'onmousemove',
  'onmouseout',
  'ondragstart',
  'ondrag',
  'ondragenter',
  'ondragleave',
  'ondragover',
  'ondrop',
  'ondragend',
  'onkeydown',
  'onkeypress',
  'onkeyup',
  'onunload',
  'onabort',
  'onerror',
  'onresize',
  'onscroll',
  'onselect',
  'onchange',
  'onsubmit',
  'onreset',
  'onfocus',
  'onblur',
  'oninput',
  // other common events
  'oncontextmenu',
  'onfocusin',
  'onfocusout'
]

},{}],377:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var ENV_WEB = true;
var URL = ENV_WEB ? '' : 'http://localhost:3000';
var URL_REPORT = 'http://127.0.0.1:3000';
var NOMBRES_DOC = [{ 'TKF': 'TicketFactura', 'ancho': '2.00in', 'alto': '5.5in' }, { 'TKB': 'TicketBoleta' }, { 'FE': 'Factura' }, { 'BE': 'Boleta' }];
exports.ENV_WEB = ENV_WEB;
exports.URL = URL;
exports.URL_REPORT = URL_REPORT;
exports.NOMBRES_DOC = NOMBRES_DOC;

},{}],378:[function(require,module,exports){
'use strict';

var _templateObject = _taggedTemplateLiteral([''], ['']);

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var page = require('page');
var empty = require('empty-element');
var title = require('title');
var navegador = require('../navegador_procesos');
var movimientos_caja = require('../sis_procesos/movimientos_caja');
var yo = require('yo-yo');

var el = yo(_templateObject);
page('/', movimientos_caja, navegador, function (ctx, next) {
  title('iFacturacion - Procesos');
  // var main = document.getElementById('contenido');
  // empty(main).appendChild(el);
});

},{"../navegador_procesos":380,"../sis_procesos/movimientos_caja":398,"empty-element":338,"page":356,"title":369,"yo-yo":375}],379:[function(require,module,exports){
'use strict';

var _constantes = require('./constantes_entorno/constantes');

require('babel-polyfill');
var page = require('page');
var navegador = require('./navegador_procesos');


if (!_constantes.ENV_WEB) navegador();else {
    require('./home_procesos');
    page();
}

},{"./constantes_entorno/constantes":377,"./home_procesos":378,"./navegador_procesos":380,"babel-polyfill":3,"page":356}],380:[function(require,module,exports){
'use strict';

var _templateObject = _taggedTemplateLiteral(['\n        ', ''], ['\n        ', '']),
    _templateObject2 = _taggedTemplateLiteral(['<ul class="nav navbar-nav">\n                \n                <li class="dropdown">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-refresh"></i> Movimientos de caja <span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li class=""><a  href="javascript:void(0)" onclick=', '>Recibo de Ingresos</a></li>\n                        <li class=""><a  href="javascript:void(0)" onclick=', '> Recibo de Egresos</a></li>\n                        <li class=""><a  href="javascript:void(0)" onclick=', '> Compra y Venta de Dolares</a></li>\n                        <li class=""><a  href="javascript:void(0)" onclick=', '> Envio Efectivo</a></li> \n                        <li class=""><a href="javascript:void(0);" onclick=', '> <span>Recepcion de Efectivo</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-opencart"></i> Ventas<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li class=""><a href="javascript:void(0);" onclick=', '><span> Nueva Venta</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-shopping-basket"></i> Compras<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li>\n                            <a href="javascript:void(0);" onclick=', '>\n                                <span>Facturas Recibidas</span>\n                            </a>\n                        </li>\n                    </ul>\n                </li>\n\n                <li class="dropdown">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-industry"></i> Almacen<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li class=""><a href="javascript:void(0);" onclick=', '><i class="fa fa-arrow-circle-down"></i> <span> Registro de Entradas</span></a></li>\n                        <li class=""><a href="javascript:void(0);" onclick=', '><i class="fa fa-arrow-circle-up"></i> <span> Registro de Salidas</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-cogs"></i> Administracion<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li><a href="javascript:void(0);" onclick=', '><span> Cuentas por Cobrar</span></a></li>\n                        <li><a href="javascript:void(0);" onclick=', '><span> Cuentas por Pagar</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-laptop"></i> Sistema<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li><a href="javascript:void(0);" onclick=', '><i class="fa fa-circle-o"></i> <span> Arqueo de Caja</span></a></li>  \n                    </ul>\n                </li>\n \n            </ul>'], ['<ul class="nav navbar-nav">\n                \n                <li class="dropdown">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-refresh"></i> Movimientos de caja <span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li class=""><a  href="javascript:void(0)" onclick=', '>Recibo de Ingresos</a></li>\n                        <li class=""><a  href="javascript:void(0)" onclick=', '> Recibo de Egresos</a></li>\n                        <li class=""><a  href="javascript:void(0)" onclick=', '> Compra y Venta de Dolares</a></li>\n                        <li class=""><a  href="javascript:void(0)" onclick=', '> Envio Efectivo</a></li> \n                        <li class=""><a href="javascript:void(0);" onclick=', '> <span>Recepcion de Efectivo</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-opencart"></i> Ventas<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li class=""><a href="javascript:void(0);" onclick=', '><span> Nueva Venta</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-shopping-basket"></i> Compras<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li>\n                            <a href="javascript:void(0);" onclick=', '>\n                                <span>Facturas Recibidas</span>\n                            </a>\n                        </li>\n                    </ul>\n                </li>\n\n                <li class="dropdown">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-industry"></i> Almacen<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li class=""><a href="javascript:void(0);" onclick=', '><i class="fa fa-arrow-circle-down"></i> <span> Registro de Entradas</span></a></li>\n                        <li class=""><a href="javascript:void(0);" onclick=', '><i class="fa fa-arrow-circle-up"></i> <span> Registro de Salidas</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-cogs"></i> Administracion<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li><a href="javascript:void(0);" onclick=', '><span> Cuentas por Cobrar</span></a></li>\n                        <li><a href="javascript:void(0);" onclick=', '><span> Cuentas por Pagar</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-laptop"></i> Sistema<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li><a href="javascript:void(0);" onclick=', '><i class="fa fa-circle-o"></i> <span> Arqueo de Caja</span></a></li>  \n                    </ul>\n                </li>\n \n            </ul>']),
    _templateObject3 = _taggedTemplateLiteral(['\n            <ul class="nav navbar-nav">\n                \n                <li class="dropdown not-active">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Movimientos de caja <span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li class=""><a  href="javascript:void(0)"><i class="fa fa-circle-o"></i> Recibo de Ingresos</a></li>\n                        <li class=""><a  href="javascript:void(0)"><i class="fa fa-circle-o"></i> Recibo de Egresos</a></li>\n                        <li class=""><a  href="javascript:void(0)"><i class="fa fa-circle-o"></i> Compra y Venta de Dolares</a></li>\n                        <li class=""><a  href="javascript:void(0)"><i class="fa fa-circle-o"></i> Envio Efectivo</a></li> \n                        <li class=""><a href="javascript:void(0);"><i class="fa fa-circle-o"></i> <span>Recepcion de Efectivo</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown not-active">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Ventas<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li class=""><a href="javascript:void(0);"><i class="fa fa-cart-plus"></i> <span> Nueva Venta</span></a></li>\n                        <li class=""><a href="javascript:void(0);"><i class="fa fa-shopping-basket"></i> <span> Venta Simple</span></a></li>\n                        <li class=""><a href="javascript:void(0);"><i class="fa fa-opencart"></i> <span> Venta Completa</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown not-active">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Compras<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li>\n                            <a href="javascript:void(0);">\n                                <i class="fa fa-circle-o"></i> <span>Facturas Recibidas</span>\n                            </a>\n                        </li>\n                    </ul>\n                </li>\n\n                <li class="dropdown not-active">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Almacen<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li class=""><a href="javascript:void(0);"><i class="fa fa-arrow-circle-down"></i> <span> Registro de Entradas</span></a></li>\n                        <li class=""><a href="javascript:void(0);"><i class="fa fa-arrow-circle-up"></i> <span> Registro de Salidas</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown not-active">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Administracion<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li><a href="javascript:void(0);"><span> Cuentas por Cobrar</span></a></li>\n                        <li><a href="javascript:void(0);"><span> Cuentas por Pagar</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown not-active">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Administracion<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li><a href="javascript:void(0);"><i class="fa fa-circle-o"></i> <span> Arqueo de Caja</span></a></li>  \n                    </ul>\n                </li>\n \n            </ul>\n            '], ['\n            <ul class="nav navbar-nav">\n                \n                <li class="dropdown not-active">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Movimientos de caja <span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li class=""><a  href="javascript:void(0)"><i class="fa fa-circle-o"></i> Recibo de Ingresos</a></li>\n                        <li class=""><a  href="javascript:void(0)"><i class="fa fa-circle-o"></i> Recibo de Egresos</a></li>\n                        <li class=""><a  href="javascript:void(0)"><i class="fa fa-circle-o"></i> Compra y Venta de Dolares</a></li>\n                        <li class=""><a  href="javascript:void(0)"><i class="fa fa-circle-o"></i> Envio Efectivo</a></li> \n                        <li class=""><a href="javascript:void(0);"><i class="fa fa-circle-o"></i> <span>Recepcion de Efectivo</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown not-active">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Ventas<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li class=""><a href="javascript:void(0);"><i class="fa fa-cart-plus"></i> <span> Nueva Venta</span></a></li>\n                        <li class=""><a href="javascript:void(0);"><i class="fa fa-shopping-basket"></i> <span> Venta Simple</span></a></li>\n                        <li class=""><a href="javascript:void(0);"><i class="fa fa-opencart"></i> <span> Venta Completa</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown not-active">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Compras<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li>\n                            <a href="javascript:void(0);">\n                                <i class="fa fa-circle-o"></i> <span>Facturas Recibidas</span>\n                            </a>\n                        </li>\n                    </ul>\n                </li>\n\n                <li class="dropdown not-active">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Almacen<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li class=""><a href="javascript:void(0);"><i class="fa fa-arrow-circle-down"></i> <span> Registro de Entradas</span></a></li>\n                        <li class=""><a href="javascript:void(0);"><i class="fa fa-arrow-circle-up"></i> <span> Registro de Salidas</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown not-active">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Administracion<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li><a href="javascript:void(0);"><span> Cuentas por Cobrar</span></a></li>\n                        <li><a href="javascript:void(0);"><span> Cuentas por Pagar</span></a></li>\n                    </ul>\n                </li>\n\n                <li class="dropdown not-active">\n                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Administracion<span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li><a href="javascript:void(0);"><i class="fa fa-circle-o"></i> <span> Arqueo de Caja</span></a></li>  \n                    </ul>\n                </li>\n \n            </ul>\n            ']);

var _constantes = require('../constantes_entorno/constantes');

var _recibo_compra_venta_me = require('../sis_procesos/mod_ventas/recibo_compra_venta_me');

var _transferencias = require('../sis_procesos/mod_ventas/transferencias');

var _recibo_ingreso = require('../sis_procesos/mod_ventas/recibo_ingreso');

var _recibo_egreso = require('../sis_procesos/mod_ventas/recibo_egreso');

var _ventas = require('../sis_procesos/mod_ventas/ventas');

var _arqueo_caja = require('../sis_procesos/mod_ventas/arqueo_caja');

var _recepcion_efectivo = require('../sis_procesos/mod_compras/recepcion_efectivo');

var _comprobante_pago = require('../sis_procesos/mod_compras/comprobante_pago');

var _entradas_salidas = require('../sis_procesos/mod_almacen/entradas_salidas');

var _cuentas_pagar_compra = require('../sis_procesos/mod_administracion/cuentas_pagar_compra');

var _reservas = require('../sis_procesos/mod_reservas/reservas');

var _habitaciones = require('../sis_procesos/mod_reservas/habitaciones');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var yo = require('yo-yo');
var empty = require('empty-element');

//Views CompraVenta

//Views Envio Efectivo


function Ver(Flag_Cerrado) {

    var el = yo(_templateObject, !Flag_Cerrado ? yo(_templateObject2, function () {
        return (0, _recibo_ingreso.NuevoIngreso)();
    }, function () {
        return (0, _recibo_egreso.NuevoEgreso)();
    }, function () {
        return (0, _recibo_compra_venta_me.NuevoCompraVentaME)(true);
    }, function () {
        return (0, _transferencias.NuevoEnvioEfectivo)(true);
    }, function () {
        return (0, _recepcion_efectivo.NuevaRecepcion)();
    }, function () {
        return (0, _ventas.NuevaVenta)();
    }, function () {
        return (0, _comprobante_pago.ComprobantePago)('08');
    }, function () {
        return (0, _entradas_salidas.EntradasSalidas)('NE');
    }, function () {
        return (0, _entradas_salidas.EntradasSalidas)('NS');
    }, function () {
        return (0, _cuentas_pagar_compra.Cuentas)('14');
    }, function () {
        return (0, _cuentas_pagar_compra.Cuentas)('08');
    }, function () {
        return (0, _arqueo_caja.NuevoArqueoCaja)();
    }) : yo(_templateObject3));
    var container = document.getElementById('navbar-collapse');
    empty(container).appendChild(el);
}

module.exports = function navegador(ctx, next) {

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({})
    };
    fetch(_constantes.URL + '/cajas_api/get_arqueo', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        Ver(res.arqueo[0].Flag_Cerrado);
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
};

},{"../constantes_entorno/constantes":377,"../sis_procesos/mod_administracion/cuentas_pagar_compra":381,"../sis_procesos/mod_almacen/entradas_salidas":382,"../sis_procesos/mod_compras/comprobante_pago":383,"../sis_procesos/mod_compras/recepcion_efectivo":384,"../sis_procesos/mod_reservas/habitaciones":385,"../sis_procesos/mod_reservas/reservas":386,"../sis_procesos/mod_ventas/arqueo_caja":387,"../sis_procesos/mod_ventas/recibo_compra_venta_me":388,"../sis_procesos/mod_ventas/recibo_egreso":389,"../sis_procesos/mod_ventas/recibo_ingreso":390,"../sis_procesos/mod_ventas/transferencias":391,"../sis_procesos/mod_ventas/ventas":392,"empty-element":338,"yo-yo":375}],381:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Cuentas = undefined;

var _templateObject = _taggedTemplateLiteral(['\n    <div class="modal-dialog modal-lg">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"><b>', '</b></h4>\n            </div>\n            <div class="modal-body" id="modal_form_ingreso">\n                <div class="modal fade" id="modal_observaciones">\n                    <div class="modal-dialog modal-sm" > \n                        <div class="modal-content" id="modal_obs_body"></div>\n                    </div> \n                </div>\n                <div class="row">\n                    <div class="callout callout-danger hidden" id="modal_error_ingreso">\n                        <p>Es necesario llenar todos los campos requeridos y el Importe mayor a cero</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-8" id="div-cliente-cuentas">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <h4> Cliente/Proveedor </h4>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-md-4" id="divCodTipoDoc">\n                                        <div class="form-group">\n                                            <select id="Cod_TipoDoc" class="form-control input-sm">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-8" id="divNroDocumento">\n                                        <div class="input-fromr">\n                                            <input type="text" id="Nro_Documento" onblur="', '" class="form-control input-sm required">\n                                        </div>\n                                    </div>\n                               \n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12" id="divCliente">\n                                        <div class="form-group">\n                                            <label> Se\xF1or(es) : </label>\n                                            <input type="text" id="Cliente" class="form-control input-sm required" data-id=null>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12" id="divDireccion">\n                                        <div class="form-group">\n                                            <label> Direccion : </label>\n                                            <input type="text" id="Direccion" class="form-control input-sm required">\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div class="box-footer">\n                                \n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-md-4">\n                        <div class="panel panel-default" id="divCabecera">\n                            <div class="panel-heading text-center">\n                                <div class="row">\n                                    <h4 class="box-title" id="Ruc_Empresa"><strong> R.U.C. ', '</strong></h4>\n                                </div>\n                                <div class="row">\n                                    <div class="col-sm-12">\n                                        <div class="form-group">\n                                            <select id="Cod_TipoComprobante" class="form-control selectPalerp" onchange=', '>\n                                                 <option style="text-transform:uppercase" value=', '>', '</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div> \n                                \n                                <div class="row">\n                                    <div class="col-md-5" id="divSerie">\n                                        <div class="form-group">\n \n                                            <select class="form-control input-sm" id="Serie" onchange=', '>\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-7" id="divNumero">\n                                        <div class="form-group">\n                                            <input type="text" class="form-control input-sm required" id="Numero" value="00000000', '" onkeypress=', '>\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-12">\n                        <div class="panel panel-default">\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-sm-6">\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <div class="col-sm-4" id="divContado">\n                                                    <div class="radio">\n                                                        <label>\n                                                            <input type="radio" value="contado" id="optCredito" name="optCredito"  checked> Contado\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                                 \n                                                <div class="col-sm-8" id="divOperacion">\n                                                    <label id="lbCuentaCajaBanco">#Operacion</label>\n                                                    <div class="form-group">\n                                                        <select class="form-control input-sm" id="Cod_CuentaBancaria" onchange=', '> \n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-4" id="divFormasPago">\n                                                <div class="form-group">\n                                                    <select class="form-control input-sm" id="Cod_FormaPago" onchange="', '"> \n                                                        ', '\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-8" id="divCuentaCajaBancos">\n                                                <div class="form-group" style="display: flex;">\n                                                    <select class="form-control input-sm select-preserve" id="Cuenta_CajaBancos"> \n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-sm-6">\n                                        <div class="row">\n                                            <div class="col-sm-4" id="divMoneda">\n                                                <div class="form-group">\n                                                    <b>Moneda: </b>\n                                                    <select id="Cod_Moneda" class="form-control input-sm" onchange=', '>\n                                                        ', '\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class="col-sm-3" id="divTC">\n                                                <div class="form-group">\n                                                    <b>T/C: </b>\n                                                    <input class="form-control input-sm" type="number" id="Tipo_Cambio" value="1.00">\n                                                </div>\n                                            </div>\n                                            <div class="col-sm-5" id="divFecha">\n                                                <div class="form-group">\n                                                    <b>Fecha: </b>\n                                                    <input type="date" class="form-control input-sm" id="Fecha" value="', '" onkeypress=', '>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-sm-12" id="divPlantilla" style="display:none">\n                                                <div class="form-group">\n                                                    <b>Plantilla: </b>\n                                                    <select id="Cod_Plantilla" id="" class="form-control input-sm">\n                                                      \n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-sm-4 col-md-4">\n                                        <div class="panel panel-default">\n                                            <div class="panel-body">\n                                                <div class="row">\n                                                    <div class="col-md-8 col-sm-8">\n                                                        <div class="checkbox">\n                                                            <label> \n                                                                <input type="checkbox" id="optTodoFechas" checked onchange=', '> Todo \n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                    <div class="col-md-4 col-sm-4">\n                                                        <button class="btn btn-info" type="button" onclick=', '>Ver</button>\n                                                    </div>\n                                                </div>\n                                                <div class="row">\n                                                    <div class="col-md-6 col-md-6">\n                                                        <div class="form-group">\n                                                            <b>Desde: </b>\n                                                            <input type="date" id="FechaInicio" value="', '" class="form-control input-sm">\n                                                        </div>\n                                                    </div>\n                                                    <div class="col-md-6 col-md-6">\n                                                        <div class="form-group">\n                                                            <b>Hasta: </b>\n                                                            <input type="date" id="FechaFin" value="', '" class="form-control input-sm">\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-sm-4 col-md-4">\n                                        <div class="panel panel-default">\n                                            <div class="panel-body">\n                                                <div class="row">\n                                                    <div class="col-md-8 col-sm-8">\n                                                        <div class="checkbox">\n                                                            <label> \n                                                                <input type="checkbox" id="optTodoVencimiento" checked onchange=', '> Todo \n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                    <div class="col-md-4 col-sm-4">\n                                                        <button class="btn btn-info" type="button" onclick=', '>Ver</button>\n                                                    </div>\n                                                </div>\n                                                <div class="row">\n                                                    <div class="col-md-6 col-sm-6">\n                                                        <div class="radio">\n                                                            <label> \n                                                                <input type="radio" name="optRadios" id="optRadiosPorVencer" value="PorVencer"> Por vencer \n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                    <div class="col-md-6 col-sm-6">\n                                                        <div class="radio">\n                                                            <label> \n                                                                <input type="radio" name="optRadios" id="optRadiosVencidos" value="Vencidos"> Vencidos \n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-sm-4 col-md-4">\n                                        <div class="panel panel-default">\n                                            <div class="panel-body">\n                                                <div class="row">\n                                                    <div class="col-md-4 col-sm-4">\n                                                        <div class="checkbox">\n                                                            <label> \n                                                                <input type="checkbox" id="optTodoLicitacion" checked onchange=', '> Todo \n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                    <div class="col-md-8 col-sm-8">\n                                                        <div class="checkbox">\n                                                            <label> \n                                                                <input type="checkbox"> Solo Documentos Formales \n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class="row">\n                                                    <div class="col-sm-8 col-md-8">\n                                                        <div class="form-group"> \n                                                            <select class="form-control input-sm" id="Cod_Licitacion"></select>\n                                                        </div>\n                                                    </div>\n                                                    <div class="col-sm-4 col-md-4">\n                                                        <button class="btn btn-info" type="button" onclick=', '>Ver</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-12">\n                        <div class="panel panel-default">\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="table-responsive" id="divTablaComprobantes">\n\n                                        <table id="tablaComprobantes" class="table table-bordered table-striped">\n                                            <thead>\n                                                <tr>\n                                                    <th>Fecha</th>\n                                                    <th>Vencimiento</th> \n                                                    <th>Documento</th>\n                                                    <th>Total Faltante</th>\n                                                    <th>Amortizar</th>\n                                                    <th>Saldo</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                            </tbody>\n                                        </table>\n\n                                    </div>\n                                </div>\n                                <div class="row" id="divAnulado" style="display:none">\n                                    <div class="col-md-12 text-center">\n                                        <div class="small-box bg-red">\n                                            <div class="inner">\n                                                <h3 id="laAnulado">EXTORNADO</h3>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="panel-footer">\n                                <div class="row">\n                                    <div class="col-md-4">\n                                        <div class="form-group row">\n                                            <label class="col-sm-4 col-form-label">Comentarios:</label>\n                                            <div class="col-sm-8">\n                                                <input type="text" id="Comentarios" class="form-control-plaintext input-sm form-control">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-8">\n\n                                        <div class="form-group row">\n                                            <label class="col-sm-1 col-form-label">Total</label>\n                                            <div class="col-sm-10"> \n                                                <div class="col-sm-4">\n                                                    <input type="number" id="Total" class="form-control">\n                                                </div>\n                                                <div class="col-sm-4">\n                                                    <input type="number" id="TotalAmortizar" class="form-control">\n                                                </div>\n                                                <div class="col-sm-4">\n                                                    <input type="number" id="TotalSaldo" class="form-control">\n                                                </div>\n                                            </div>  \n                                        </div>\n \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    \n            <div class="modal-footer">\n                <button class="btn btn-primary" onclick=', '>', '</button>\n                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar</button>\n            </div>\n        </div>\n    </div>'], ['\n    <div class="modal-dialog modal-lg">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"><b>', '</b></h4>\n            </div>\n            <div class="modal-body" id="modal_form_ingreso">\n                <div class="modal fade" id="modal_observaciones">\n                    <div class="modal-dialog modal-sm" > \n                        <div class="modal-content" id="modal_obs_body"></div>\n                    </div> \n                </div>\n                <div class="row">\n                    <div class="callout callout-danger hidden" id="modal_error_ingreso">\n                        <p>Es necesario llenar todos los campos requeridos y el Importe mayor a cero</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-8" id="div-cliente-cuentas">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <h4> Cliente/Proveedor </h4>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-md-4" id="divCodTipoDoc">\n                                        <div class="form-group">\n                                            <select id="Cod_TipoDoc" class="form-control input-sm">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-8" id="divNroDocumento">\n                                        <div class="input-fromr">\n                                            <input type="text" id="Nro_Documento" onblur="', '" class="form-control input-sm required">\n                                        </div>\n                                    </div>\n                               \n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12" id="divCliente">\n                                        <div class="form-group">\n                                            <label> Se\xF1or(es) : </label>\n                                            <input type="text" id="Cliente" class="form-control input-sm required" data-id=null>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12" id="divDireccion">\n                                        <div class="form-group">\n                                            <label> Direccion : </label>\n                                            <input type="text" id="Direccion" class="form-control input-sm required">\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div class="box-footer">\n                                \n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-md-4">\n                        <div class="panel panel-default" id="divCabecera">\n                            <div class="panel-heading text-center">\n                                <div class="row">\n                                    <h4 class="box-title" id="Ruc_Empresa"><strong> R.U.C. ', '</strong></h4>\n                                </div>\n                                <div class="row">\n                                    <div class="col-sm-12">\n                                        <div class="form-group">\n                                            <select id="Cod_TipoComprobante" class="form-control selectPalerp" onchange=', '>\n                                                 <option style="text-transform:uppercase" value=', '>', '</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div> \n                                \n                                <div class="row">\n                                    <div class="col-md-5" id="divSerie">\n                                        <div class="form-group">\n \n                                            <select class="form-control input-sm" id="Serie" onchange=', '>\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-7" id="divNumero">\n                                        <div class="form-group">\n                                            <input type="text" class="form-control input-sm required" id="Numero" value="00000000', '" onkeypress=', '>\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-12">\n                        <div class="panel panel-default">\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-sm-6">\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <div class="col-sm-4" id="divContado">\n                                                    <div class="radio">\n                                                        <label>\n                                                            <input type="radio" value="contado" id="optCredito" name="optCredito"  checked> Contado\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                                 \n                                                <div class="col-sm-8" id="divOperacion">\n                                                    <label id="lbCuentaCajaBanco">#Operacion</label>\n                                                    <div class="form-group">\n                                                        <select class="form-control input-sm" id="Cod_CuentaBancaria" onchange=', '> \n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-4" id="divFormasPago">\n                                                <div class="form-group">\n                                                    <select class="form-control input-sm" id="Cod_FormaPago" onchange="', '"> \n                                                        ', '\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-8" id="divCuentaCajaBancos">\n                                                <div class="form-group" style="display: flex;">\n                                                    <select class="form-control input-sm select-preserve" id="Cuenta_CajaBancos"> \n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-sm-6">\n                                        <div class="row">\n                                            <div class="col-sm-4" id="divMoneda">\n                                                <div class="form-group">\n                                                    <b>Moneda: </b>\n                                                    <select id="Cod_Moneda" class="form-control input-sm" onchange=', '>\n                                                        ', '\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class="col-sm-3" id="divTC">\n                                                <div class="form-group">\n                                                    <b>T/C: </b>\n                                                    <input class="form-control input-sm" type="number" id="Tipo_Cambio" value="1.00">\n                                                </div>\n                                            </div>\n                                            <div class="col-sm-5" id="divFecha">\n                                                <div class="form-group">\n                                                    <b>Fecha: </b>\n                                                    <input type="date" class="form-control input-sm" id="Fecha" value="', '" onkeypress=', '>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-sm-12" id="divPlantilla" style="display:none">\n                                                <div class="form-group">\n                                                    <b>Plantilla: </b>\n                                                    <select id="Cod_Plantilla" id="" class="form-control input-sm">\n                                                      \n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-sm-4 col-md-4">\n                                        <div class="panel panel-default">\n                                            <div class="panel-body">\n                                                <div class="row">\n                                                    <div class="col-md-8 col-sm-8">\n                                                        <div class="checkbox">\n                                                            <label> \n                                                                <input type="checkbox" id="optTodoFechas" checked onchange=', '> Todo \n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                    <div class="col-md-4 col-sm-4">\n                                                        <button class="btn btn-info" type="button" onclick=', '>Ver</button>\n                                                    </div>\n                                                </div>\n                                                <div class="row">\n                                                    <div class="col-md-6 col-md-6">\n                                                        <div class="form-group">\n                                                            <b>Desde: </b>\n                                                            <input type="date" id="FechaInicio" value="', '" class="form-control input-sm">\n                                                        </div>\n                                                    </div>\n                                                    <div class="col-md-6 col-md-6">\n                                                        <div class="form-group">\n                                                            <b>Hasta: </b>\n                                                            <input type="date" id="FechaFin" value="', '" class="form-control input-sm">\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-sm-4 col-md-4">\n                                        <div class="panel panel-default">\n                                            <div class="panel-body">\n                                                <div class="row">\n                                                    <div class="col-md-8 col-sm-8">\n                                                        <div class="checkbox">\n                                                            <label> \n                                                                <input type="checkbox" id="optTodoVencimiento" checked onchange=', '> Todo \n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                    <div class="col-md-4 col-sm-4">\n                                                        <button class="btn btn-info" type="button" onclick=', '>Ver</button>\n                                                    </div>\n                                                </div>\n                                                <div class="row">\n                                                    <div class="col-md-6 col-sm-6">\n                                                        <div class="radio">\n                                                            <label> \n                                                                <input type="radio" name="optRadios" id="optRadiosPorVencer" value="PorVencer"> Por vencer \n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                    <div class="col-md-6 col-sm-6">\n                                                        <div class="radio">\n                                                            <label> \n                                                                <input type="radio" name="optRadios" id="optRadiosVencidos" value="Vencidos"> Vencidos \n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-sm-4 col-md-4">\n                                        <div class="panel panel-default">\n                                            <div class="panel-body">\n                                                <div class="row">\n                                                    <div class="col-md-4 col-sm-4">\n                                                        <div class="checkbox">\n                                                            <label> \n                                                                <input type="checkbox" id="optTodoLicitacion" checked onchange=', '> Todo \n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                    <div class="col-md-8 col-sm-8">\n                                                        <div class="checkbox">\n                                                            <label> \n                                                                <input type="checkbox"> Solo Documentos Formales \n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class="row">\n                                                    <div class="col-sm-8 col-md-8">\n                                                        <div class="form-group"> \n                                                            <select class="form-control input-sm" id="Cod_Licitacion"></select>\n                                                        </div>\n                                                    </div>\n                                                    <div class="col-sm-4 col-md-4">\n                                                        <button class="btn btn-info" type="button" onclick=', '>Ver</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-12">\n                        <div class="panel panel-default">\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="table-responsive" id="divTablaComprobantes">\n\n                                        <table id="tablaComprobantes" class="table table-bordered table-striped">\n                                            <thead>\n                                                <tr>\n                                                    <th>Fecha</th>\n                                                    <th>Vencimiento</th> \n                                                    <th>Documento</th>\n                                                    <th>Total Faltante</th>\n                                                    <th>Amortizar</th>\n                                                    <th>Saldo</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                            </tbody>\n                                        </table>\n\n                                    </div>\n                                </div>\n                                <div class="row" id="divAnulado" style="display:none">\n                                    <div class="col-md-12 text-center">\n                                        <div class="small-box bg-red">\n                                            <div class="inner">\n                                                <h3 id="laAnulado">EXTORNADO</h3>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="panel-footer">\n                                <div class="row">\n                                    <div class="col-md-4">\n                                        <div class="form-group row">\n                                            <label class="col-sm-4 col-form-label">Comentarios:</label>\n                                            <div class="col-sm-8">\n                                                <input type="text" id="Comentarios" class="form-control-plaintext input-sm form-control">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-8">\n\n                                        <div class="form-group row">\n                                            <label class="col-sm-1 col-form-label">Total</label>\n                                            <div class="col-sm-10"> \n                                                <div class="col-sm-4">\n                                                    <input type="number" id="Total" class="form-control">\n                                                </div>\n                                                <div class="col-sm-4">\n                                                    <input type="number" id="TotalAmortizar" class="form-control">\n                                                </div>\n                                                <div class="col-sm-4">\n                                                    <input type="number" id="TotalSaldo" class="form-control">\n                                                </div>\n                                            </div>  \n                                        </div>\n \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    \n            <div class="modal-footer">\n                <button class="btn btn-primary" onclick=', '>', '</button>\n                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar</button>\n            </div>\n        </div>\n    </div>']),
    _templateObject2 = _taggedTemplateLiteral(['<option style="text-transform:uppercase" value="', '">', '</option>'], ['<option style="text-transform:uppercase" value="', '">', '</option>']),
    _templateObject3 = _taggedTemplateLiteral(['<table id="tablaComprobantes" class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Fecha</th>\n            <th>Vencimiento</th> \n            <th>Documento</th>\n            <th>Total Faltante</th>\n            <th>Amortizar</th>\n            <th>Saldo</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>'], ['<table id="tablaComprobantes" class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Fecha</th>\n            <th>Vencimiento</th> \n            <th>Documento</th>\n            <th>Total Faltante</th>\n            <th>Amortizar</th>\n            <th>Saldo</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>']),
    _templateObject4 = _taggedTemplateLiteral(['\n        <tr>\n            <td class="hidden idComprobante">', '</td>\n            <td class="FechaEmision">', '</td>\n            <td class="FechaVencimiento">', '</td> \n            <td class="hidden Dias">', '</td> \n            <td class="Documento">', '</td> \n            <td class="TotalFaltante">', '</td> \n            <td class="Amortizar"><input class="form-control" type="number" value="0.00" onkeypress=', '></td> \n            <td class="Saldo">', '</td> \n        </tr>'], ['\n        <tr>\n            <td class="hidden idComprobante">', '</td>\n            <td class="FechaEmision">', '</td>\n            <td class="FechaVencimiento">', '</td> \n            <td class="hidden Dias">', '</td> \n            <td class="Documento">', '</td> \n            <td class="TotalFaltante">', '</td> \n            <td class="Amortizar"><input class="form-control" type="number" value="0.00" onkeypress=', '></td> \n            <td class="Saldo">', '</td> \n        </tr>']),
    _templateObject5 = _taggedTemplateLiteral(['\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"> Confirmacion </h4>\n            </div>\n            <div class="modal-body">\n                <p>Esta seguro que desea realizar esta operacion?</p>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                <button type="button" class="btn btn-primary" onclick=', '>Aceptar</button>\n            </div>\n        </div>\n        <!-- /.modal-content -->\n    </div>'], ['\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"> Confirmacion </h4>\n            </div>\n            <div class="modal-body">\n                <p>Esta seguro que desea realizar esta operacion?</p>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                <button type="button" class="btn btn-primary" onclick=', '>Aceptar</button>\n            </div>\n        </div>\n        <!-- /.modal-content -->\n    </div>']);

var _constantes = require('../../../constantes_entorno/constantes');

var _tools = require('../../../../utility/tools');

var _modales = require('../../modales');

var _series = require('../../modales/series');

var _cuentas = require('../../modales/cuentas');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');


var listaFormaPago = [];
var obs_xml = null;
var aSaldo = 0;
var contador = 0;
var contadorPercepcion = 0;
var idFilaSeleccionadaSerie = 0;

function VerCuentas(variables, fecha_actual, CodLibro) {
    global.objCliente = '';
    global.objProducto = '';
    global.arraySeries = '';
    contador = 0;
    contadorPercepcion = 0;
    var el = yo(_templateObject, CodLibro == '08' ? 'CUENTAS POR PAGAR' : 'CUENTAS POR COBRAR', variables.dataDocumentos.map(function (e) {
        return yo(_templateObject2, e.Cod_TipoDoc, e.Nom_TipoDoc);
    }), function () {
        return BuscarClienteDoc(CodLibro);
    }, variables.empresa.RUC, function () {
        return (0, _tools.BloquearControles)(event);
    }, CodLibro == '08' ? 'RI' : 'RE', CodLibro == '08' ? 'RECIBO DE EGRESO' : 'RECIBO DE INGRESO', function () {
        return (0, _tools.BloquearControles)(event);
    }, variables.dataComprobante.map(function (e) {
        return yo(_templateObject2, e.Serie, e.Serie);
    }), variables.dataMov[0].Numero, function () {
        return (0, _tools.BloquearControles)(event);
    }, function () {
        return CambioCodCuentaBancaria(CodLibro);
    }, function () {
        return CambioFormasPago(CodLibro);
    }, variables.dataFormasPago.map(function (e) {
        return yo(_templateObject2, e.Cod_FormaPago, e.Nom_FormaPago);
    }), function () {
        return CambioMoneda(CodLibro);
    }, variables.dataMonedas.map(function (e) {
        return yo(_templateObject2, e.Cod_Moneda, e.Nom_Moneda);
    }), fecha_actual, function () {
        return TraerTipoCambio(CodLibro);
    }, function () {
        return CambioTodoFechas();
    }, function () {
        return BuscarPorFecha(CodLibro);
    }, fecha_actual, fecha_actual, function () {
        return CambioTodoVencimiento();
    }, function () {
        return BuscarPorFecha(CodLibro);
    }, function () {
        return CambioTodoLicitacion();
    }, function () {
        return BuscarPorFecha(CodLibro);
    }, function () {
        return VerGuardar(CodLibro);
    }, CodLibro == '08' ? 'Pagar' : 'Cobrar');
    var ingreso = document.getElementById('modal-proceso');
    empty(ingreso).appendChild(el);
    $('#modal-proceso').modal();
    CambioFormasPago(CodLibro);
    if (global.objCliente == '') (0, _cuentas.BuscarCuentasPendientes)(CodLibro, 0, '1753-01-01 00:00:00', '9999-12-31 23:59:59.997');else {
        $("#Cod_TipoDocumento").val(global.objCliente.Cod_TipoDocumento);
        $("#Cliente").val(global.objCliente.Nom_Cliente);
        $("#Nro_Documento").val(global.objCliente.Doc_Cliente);
        $("#Direccion").val(global.objCliente.Direccion_Cliente);
        $("#Cliente").attr("data-id", global.objCliente.Id_Cliente);
        $("#Cod_Moneda").val(global.objCliente.Cod_Moneda);
        CargarLicitacionesCliente(global.objCliente.Id_Cliente);
        BuscarPorFecha(CodLibro);
    }

    $('#modal-otros-procesos').on('hidden.bs.modal', function () {

        if (global.objCliente != '' && global.arraySeries) {
            $("#Cod_TipoDocumento").val(global.objCliente.Cod_TipoDocumento);
            $("#Cliente").val(global.objCliente.Nom_Cliente);
            $("#Nro_Documento").val(global.objCliente.Doc_Cliente);
            $("#Direccion").val(global.objCliente.Direccion_Cliente);
            $("#Cliente").attr("data-id", global.objCliente.Id_Cliente);
            $("#Cod_Moneda").val(global.objCliente.Cod_Moneda);
            CargarLicitacionesCliente(global.objCliente.Id_Cliente);
            BuscarPorFecha(CodLibro);
        }
    });

    CambioTodoFechas();
    CambioTodoVencimiento();
    CambioTodoLicitacion();

    $("#Cuenta_CajaBancos").combobox();
    $("#Cuenta_CajaBancos").parent().find('input.ui-widget').blur(function () {
        TraerPorCuentaOperacion();
    });
}

function AgregarTabla(comprobantes) {
    var el = yo(_templateObject3, comprobantes.map(function (c, index) {
        return yo(_templateObject4, c.id_ComprobantePago, c.FechaEmision, c.FechaVencimiento, c.Dias, c.Documento, c.TotalFaltante, function () {
            return CambioAmortizar();
        }, c.TotalFaltante);
    }));
    empty(document.getElementById('divTablaComprobantes')).appendChild(el);
}

function CargarModalConfirmacionCuentas(CodLibro) {
    var el = yo(_templateObject5, function () {
        return AceptarConfirmacionCuenta(CodLibro);
    });

    var modal_proceso = document.getElementById('modal-alerta');
    empty(modal_proceso).appendChild(el);
    $('#modal-alerta').modal();
}

function LlenarCuentaBancaria(cuentas, CodLibro) {
    var html = '';
    for (var i = 0; i < cuentas.length; i++) {
        html = html + '<option value="' + cuentas[i].Cod_CuentaBancaria + '">' + cuentas[i].Des_CuentaBancaria + '</option>';
    }

    $("#Cod_CuentaBancaria").html('');
    $("#Cod_CuentaBancaria").html(html);
    CambioCodCuentaBancaria(CodLibro);
}

function LlenarCuentaBancaria_(cuentas, CodLibro) {
    var html = '';
    for (var i = 0; i < cuentas.length; i++) {
        html = html + '<option value="' + cuentas[i].NroCuenta_Bancaria + '">' + cuentas[i].CuentaBancaria + '</option>';
    }

    $("#Cod_CuentaBancaria").html('');
    $("#Cod_CuentaBancaria").html(html);
    CambioCodCuentaBancaria(CodLibro);
}

function LlenarCheques(cheques) {
    var html = '<option value="">Seleccione una opcion</option>';
    for (var i = 0; i < cheques.length; i++) {
        html = html + '<option value="' + cheques[i].Id_MovimientoCuenta + '">' + cheques[i].Des_Movimiento + '</option>';
    }

    $("#Cuenta_CajaBancos").html('');
    $("#Cuenta_CajaBancos").html(html);
}

function EsValido() {
    var MontoMaximo = 0;

    if ($("#divCuentaCajaBancos").css("display") == "block" && $("#Cuenta_CajaBancos").val() != '' && $("#Cuenta_CajaBancos").val() != null) {
        try {
            MontoMaximo = parseFloat($("#Cuenta_CajaBancos").val().split('[', ']')[1]);
        } catch (e) {
            MontoMaximo = 0;
        }
    }

    if ($("#Cliente").attr("data-id") != null && $("#Cliente").attr("data-id") != '') {
        if ($("#tablaComprobantes > tbody tr").length > 0) {
            if (MontoMaximo == 0 || parseFloat($("#TotalAmortizar").val()) <= MontoMaximo) {
                if (parseFloat($("#TotalAmortizar").val()) != 0) {
                    return true;
                } else {
                    toastr.error('El Monto a Amortizar debe ser Mayor a CERO (0.00).', 'Error', { timeOut: 5000 });
                    $("#TotalAmortizar").focus();
                }
            } else {
                if ($("#Cod_FormaPago").val().toString() == "998") {
                    toastr.error('Debe de selecionar un Pago Adelantado que sea superior o igual al Monto Total de Comprobante.', 'Error', { timeOut: 5000 });
                } else {
                    if ($("#Cod_FormaPago").val().toString() == "007") {
                        toastr.error('Debe de selecionar un Cheque que sea superior o igual al Monto Total de Comprobante.', 'Error', { timeOut: 5000 });
                    }
                }
                $("#Cuenta_CajaBancos").focus();
            }
        } else {
            toastr.error('Debe ingresar como minimo un Detalle en el Comprobante.', 'Error', { timeOut: 5000 });
        }
    } else {
        toastr.error('Debe selecionar un cliente si por defecto dejarlo en CLIENTES VARIOS.', 'Error', { timeOut: 5000 });
        $("#Cliente").focus();
    }

    return false;
}

function CalcularTotal() {
    try {
        var SumaTotal = 0;
        var SumaAmortiza = 0;
        $('#tablaComprobantes > tbody tr').each(function () {

            SumaAmortiza += parseFloat($(this).find("td").eq(6).find("input").val());
            if (parseFloat($(this).find("td").eq(5).text()) - parseFloat($(this).find("td").eq(5).find("input").val()) > 0) $(this).find("td").eq(7).text(parseFloat($(this).find("td").eq(5).text()) - parseFloat($(this).find("td").eq(5).find("input").val()));else $(this).find("td").eq(7).text("0.00");

            SumaTotal += parseFloat($(this).find("td").eq(5).text());
        });

        $("#Total").val(SumaTotal);
        $("#TotalAmortizar").val(SumaAmortiza);
        $("#TotalFaltante").val(SumaTotal - SumaAmortiza);
    } catch (e) {}
}

function BuscarPorFecha(CodLibro) {
    var Id_Cliente = $("#Cliente").attr("data-id");
    var Cod_Libro = CodLibro;
    var FechaInicio = $("#optTodoFechas").is(":checked") ? '1753-01-01 00:00:00' : $("#FechaInicio").val();
    var FechaFin = $("#optTodoFechas").is(":checked") ? '9999-12-31 23:59:59.997' : $("#FechaFin").val();
    var Cod_Moneda = $("#Cod_Moneda").val();
    var Vencimiento = $("#optTodoVencimiento").is(":checked") ? null : $('input[name=optRadios]:checked').val() == "PorVencer" ? true : false;
    var Cod_Licitacion = $("#optTodoLicitacion").is(":checked") ? null : $("#Cod_Licitacion").val();

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_Cliente: Id_Cliente,
            Cod_Libro: Cod_Libro,
            FechaInicio: FechaInicio,
            FechaFin: FechaFin,
            Cod_Moneda: Cod_Moneda,
            Vencimiento: Vencimiento,
            Cod_Licitacion: Cod_Licitacion
        })
    };
    fetch(_constantes.URL + '/recibo_iegreso_api/get_cuentas_by_cobrar_pagar', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            AgregarTabla(res.data.cuentas);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CambioMoneda(CodLibro) {
    if ($("#Cod_Moneda").val() != null && $("#Cod_Moneda").val() != "") {
        if ($("#Cod_Moneda").val() == "USD") {
            $("#divTC").css("display", "block");
            TraerTipoCambio(CodLibro);
        } else {
            $("#divTC").css("display", "none");
            $("#Tipo_Cambio").val("1");
        }
    }
}

function CambioTodoFechas() {
    $("#FechaFin").attr("disabled", $("#optTodoFechas").is(":checked"));
    $("#FechaInicio").attr("disabled", $("#optTodoFechas").is(":checked"));
}

function CambioTodoLicitacion() {
    $("#Cod_Licitacion").attr("disabled", $("#optTodoFechas").is(":checked"));
}

function CambioTodoVencimiento() {
    if ($("#optTodoVencimiento").is(":checked")) {
        $('input[name=optRadios]').attr("checked", false);
        $('input[name=optRadios]').attr("disabled", true);
    } else {
        $('#optRadiosPorVencer').attr("checked", true);
        $('#optRadiosVencidos').attr("checked", false);
        $('input[name=optRadios]').attr("disabled", false);
    }
}

function CambioCodCuentaBancaria(CodLibro) {
    var Cod_CuentaBancaria = $("#Cod_CuentaBancaria").val();
    var Beneficiario = $("#Cliente").val();
    var Cod_Libro = CodLibro;

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_CuentaBancaria: Cod_CuentaBancaria,
            Beneficiario: Beneficiario,
            Cod_Libro: Cod_Libro
        })
    };
    fetch(_constantes.URL + '/cuentas_bancarias_api/get_cheques_by_cuenta_cliente', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var cheques = res.data.cheques;
            LlenarCheques(cheques);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CambioAmortizar() {
    CalcularTotal();
}

function CambioFormasPago(CodLibro) {
    if ($("#Cod_FormaPago").val() != null && $("#Cod_FormaPago").val() != "") {
        var flagDisplay = "none";
        if ($("#Cod_FormaPago").val() != "008") flagDisplay = "block";

        $("#divOperacion").css("display", flagDisplay);
        $("#Cod_CuentaBancaria").css("display", flagDisplay);
        $("#divCuentaCajaBancos").css("display", flagDisplay);

        if ($("#divOperacion").css("display") == "block") {
            switch ($("#Cod_FormaPago").val()) {
                case "007":
                    if (CodLibro == "08") {
                        $("#lbCuentaCajaBanco").text("# de Cheque: ");
                        TraerCuentaBancariaPorSucursal(CodLibro);
                    } else {
                        toastr.error('No Existe la Operacion de CHEQUE para ventas.\nSe debe de Depositar el Cheque eh ingresarlo como Deposito en Cuenta.', 'Error', { timeOut: 5000 });
                        $("#Cod_FormaPago").val(null);
                    }
                    break;
                case "011":
                    $("#Cod_CuentaBancaria").css("display", "block");
                    $("#lbCuentaCajaBanco").text("# de Operacion");
                    if (CodLibro == "08") {
                        TraerCuentasBancariasXIdClienteProveedor(CodLibro);
                    } else {
                        TraerCuentaBancariaPorSucursal(CodLibro);
                    }
                    break;
                case "001":
                    $("#lbCuentaCajaBanco").text("# de Letra: ");
                    break;
                case "005":
                    $("#lbCuentaCajaBanco").text("# de Tarjeta VISA: ");
                    break;
                case "006":
                    $("#lbCuentaCajaBanco").text("# de Tarjeta MASTER CARD: ");
                    break;
                case "004":
                    $("#lbCuentaCajaBanco").text("# de Orden de Pago: ");
                    break;
                case "003":
                    $("#Cod_CuentaBancaria").css("display", "block");
                    $("#lbCuentaCajaBanco").text("Seleccione Transferencia: ");
                    TraerCuentaBancariaPorSucursal();
                    break;
                case "008":
                    $("#divOperacion").css("display", "none");
                    $("#Cod_CuentaBancaria").css("display", "none");
                    $("#divCuentaCajaBancos").css("display", "none");
                    $("#divCabecera").css("pointer-events", "auto");
                    break;
                case "998":
                    $("#lbCuentaCajaBanco").text("Selecione Pago Adelantado: ");
                    TraerSaldoPagoAdelantado();
                    break;
                default:
                    $("#lbCuentaCajaBanco").text("# de OperaciÃ³n: ");
                    break;
            }
        }
    }
}

function TraerPorCuentaOperacion() {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_CuentaBancaria: $("#Cod_CuentaBancaria").val(),
            Nro_Operacion: $("#Cuenta_CajaBancos option:selected").text()
        })
    };
    fetch(_constantes.URL + '/cuentas_bancarias_api/get_by_cuenta_operacion', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var cuentas = res.data.cuentas;
            if (cuentas.length > 0) {
                toastr.error('En la Cuenta: ' + $("#Cod_CuentaBancaria option:selected").text() + ' la Operacion NÂ°: ' + $("#Cuenta_CajaBancos option:selected").text() + ', ya Existe. Verifique y Vuelva a Intentarlo', 'Error', { timeOut: 5000 });
                $("#Cuenta_CajaBancos").val("");
                $("#Cuenta_CajaBancos").focus();
            }
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function TraerTipoCambio(CodLibro) {
    if ($("#Cod_Moneda").val() != "PEN") {
        try {
            var Cod_Moneda = $("#Cod_Moneda").val();
            var FechaHora = $("#Fecha").val();
            var parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Cod_Moneda: Cod_Moneda,
                    FechaHora: FechaHora
                })
            };
            fetch(_constantes.URL + '/comprobantes_pago_api/get_variables_formas_pago', parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                if (res.respuesta == 'ok') {
                    if (res.data.tipos_cambios.length > 0) {
                        if (CodLibro == "08") {
                            $("#Tipo_Cambio").val(res.data.tipos_cambios[0].SunatCompra);
                        } else {
                            $("#Tipo_Cambio").val(res.data.tipos_cambios[0].SunatVenta);
                        }
                    } else {
                        $("#Tipo_Cambio").val(1);
                    }
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        } catch (e) {
            $("#Tipo_Cambio").val(1);
        }
    }
}

function TraerSaldoPagoAdelantado() {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_ClienteProveedor: global.objCliente.Id_ClienteProveedor
        })
    };
    fetch(_constantes.URL + '/comprobantes_pago_api/get_pago_adelantado', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var pagos_adelantados = res.data.pagos_adelantados;
            if (pagos_adelantados.length > 0) {
                LlenarPagosAdelantados(pagos_adelantados);
            } else {
                $("#lbCuentaCajaBanco").text("No tienen Ningun Adelanto para Selecionar.");
                $("#Cuenta_CajaBancos").html('');
                $("#divCuentaCajaBancos").css("display", "none");
            }
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function TraerCuentasBancariasXIdClienteProveedor(CodLibro) {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_ClienteProveedor: global.objCliente.Id_ClienteProveedor
        })
    };
    fetch(_constantes.URL + '/cuentas_bancarias_api/get_cuenta_by_id_cliente', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var cuentas = res.data.cuentas;
            LlenarCuentaBancaria_(cuentas, CodLibro);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function TraerCuentaBancariaPorSucursal(CodLibro) {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({})
    };
    fetch(_constantes.URL + '/cuentas_bancarias_api/get_cuenta_by_sucursal', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var cuentas = res.data.cuentas;
            LlenarCuentaBancaria(cuentas, CodLibro);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function BuscarClienteDoc(CodLibro) {
    run_waitMe($('#div-cliente-cuentas'), 1, "ios", "Buscando cliente...");
    var Nro_Documento = document.getElementById('Nro_Documento').value;
    var Cod_TipoDocumento = document.getElementById('Cod_TipoDoc').value;
    var Cod_TipoCliente = CodLibro == "08" ? "001" : "002";
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Nro_Documento: Nro_Documento, Cod_TipoDocumento: Cod_TipoDocumento, Cod_TipoCliente: Cod_TipoCliente
        })
    };
    fetch(_constantes.URL + '/clientes_api/get_cliente_by_documento', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok' && res.data.cliente.length > 0) {
            global.objCliente = res.data.cliente[0];

            if (global.objCliente != '' && global.objCliente) {
                $("#Cod_TipoDocumento").val(global.objCliente.Cod_TipoDocumento);
                $("#Cliente").val(global.objCliente.Cliente);
                $("#Direccion").val(global.objCliente.Direccion);
                $("#Nro_Documento").val(global.objCliente.Nro_Documento);
                $("#Cliente").attr("data-id", global.objCliente.Id_ClienteProveedor);
                CargarLicitacionesCliente(global.objCliente.Id_ClienteProveedor);
            }
        }
        $('#div-cliente-cuentas').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#div-cliente-cuentas').waitMe('hide');
    });
}

function CargarLicitacionesCliente(Id_ClienteProveedor) {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_ClienteProveedor: Id_ClienteProveedor
        })
    };
    fetch(_constantes.URL + '/clientes_api/get_licitaciones_by_cliente', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var licitaciones = res.data.licitaciones;
            if (licitaciones.length > 0) {
                $("#divCodigoLicitacion").css("display", "block");
                $("#divLicitacion").css("display", "block");
                $("#optLicitacion").attr("checked", true);
                LlenarLicitaciones(licitaciones);
            } else {
                $("#divCodigoLicitacion").css("display", "none");
                $("#divLicitacion").css("display", "none");
                $("#optLicitacion").attr("checked", false);
            }
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function VerGuardar(CodLibro) {
    try {
        if (EsValido()) {
            CargarModalConfirmacionCuentas(CodLibro);
        }
    } catch (e) {
        toastr.error('Error al agregar nuevo elemento, intentelo mas luego.\n\n', 'Error', { timeOut: 5000 });
    }
}

function GuardarMovimientoBancario(Facturas, CodLibro) {

    var Cod_CuentaBancaria = $("#Cod_CuentaBancaria").val();
    var Nro_Operacion = $("#Cuenta_CajaBancos option:selected").text();
    var Des_Movimiento = CodLibro == "08" ? "POR PAGO DEL(DE LOS) COMPROBANTE(S): " + Facturas : "POR COBRO DE LO(S) COMPROBANTE(S): " + Facturas;
    var Cod_TipoOperacionBancaria = '';
    if ($("#Cod_FormaPago").val() == "007") {
        Cod_TipoOperacionBancaria = "006";
    } else {
        Cod_TipoOperacionBancaria = "001";
    }

    var Fecha = $("#Fecha").val();
    var Monto = (CodLibro == "08" ? -1 : 1) * parseFloat($("#TotalAmortizar").val());
    var TipoCambio = $("#Tipo_Cambio").val();
    var Cod_Plantilla = $("#Tipo_Cambio").val();
    var Nro_Cheque = 0;
    if ($("#Cod_FormaPago").val() == "007") {
        Nro_Cheque = "00000000" + $("#Cuenta_CajaBancos option:selected").text();
    }
    var Beneficiario = $("#Cliente").val();
    var Id_ComprobantePago = -1;
    var Obs_Movimiento = $("#Comentarios").val();

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_CuentaBancaria: Cod_CuentaBancaria,
            Nro_Operacion: Nro_Operacion,
            Des_Movimiento: Des_Movimiento,
            Cod_TipoOperacionBancaria: Cod_TipoOperacionBancaria,
            Fecha: Fecha,
            Monto: Monto,
            TipoCambio: TipoCambio,
            Cod_Plantilla: Cod_Plantilla,
            Nro_Cheque: Nro_Cheque,
            Beneficiario: Beneficiario,
            Id_ComprobantePago: Id_ComprobantePago,
            Obs_Movimiento: Obs_Movimiento
        })
    };
    fetch(_constantes.URL + '/cuentas_bancarias_api/guardar_cuenta_movimiento', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        console.log(res);
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function GuardarMovimientoCaja(Facturas, CodLibro) {
    var Id_Concepto = CodLibro == "08" ? 6000 : 7000;
    var Id_ClienteProveedor = $("#Cliente").attr("data-id");
    var Cliente = $("#Cliente").val();
    var Des_Movimiento = CodLibro == "08" ? "POR PAGO DEL(DE LOS) COMPROBANTE(S): " + Facturas : "POR COBRO DE LO(S) COMPROBANTE(S): " + Facturas;
    var Cod_TipoComprobante = CodLibro == "08" ? "RE" : "RI";
    var Serie = $("#Serie").val();
    var Fecha = $("#Fecha").val();
    var Tipo_Cambio = $("#Tipo_Cambio").val();
    var Ingreso = 0;
    var Cod_MonedaIng = "";
    var Egreso = 0;
    var Cod_MonedaEgr = "";
    if (CodLibro != "08") {
        Ingreso = $("#TotalAmortizar").val();
        Cod_MonedaIng = $("#Cod_Moneda").val();
        Egreso = 0;
        Cod_MonedaEgr = $("#Cod_Moneda").val();
    } else {
        Ingreso = 0;
        Cod_MonedaIng = $("#Cod_Moneda").val();
        Egreso = $("#TotalAmortizar").val();
        Cod_MonedaEgr = $("#Cod_Moneda").val();
    }
    var Flag_Extornado = '0';
    var fecha = new Date();
    var mes = fecha.getMonth() + 1;
    var dia = fecha.getDate();
    var fecha_format = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);
    var Fecha_Aut = fecha_format;

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_Concepto: Id_Concepto,
            Id_ClienteProveedor: Id_ClienteProveedor,
            Cliente: Cliente,
            Des_Movimiento: Des_Movimiento,
            Cod_TipoComprobante: Cod_TipoComprobante,
            Serie: Serie,
            Fecha: Fecha,
            Tipo_Cambio: Tipo_Cambio,
            Ingreso: Ingreso,
            Cod_MonedaIng: Cod_MonedaIng,
            Egreso: Egreso,
            Cod_MonedaEgr: Cod_MonedaEgr,
            Flag_Extornado: Flag_Extornado,
            Fecha_Aut: Fecha_Aut
        })
    };
    fetch(_constantes.URL + '/movimientos_caja_api/guardar_movimiento_caja', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        console.log(res);
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function AceptarConfirmacionCuenta(CodLibro) {

    var Facturas = "";
    // ------- Inicio EstablecerCamposEntidad

    var Fecha_FormaPago = $("#Fecha").val();
    var Cod_TipoFormaPago_FormaPago = $("#Cod_FormaPago").val();
    var Id_Movimiento_FormaPago = 0;
    var Cuenta_CajaBancos_FormaPago = '';
    if ($("#Cuenta_CajaBancos").val() != null && $("#Cuenta_CajaBancos").val() != '') {
        Id_Movimiento_FormaPago = parseInt($("#Cuenta_CajaBancos").val());
        Cuenta_CajaBancos_FormaPago = $("#Cuenta_CajaBancos option:selected").text().split('(', ')')[1];
    } else if ($("#divCuentaCajaBancos").css("display") == "display") Cuenta_CajaBancos_FormaPago = $("#Cuenta_CajaBancos option:selected").text().trim();

    if ($("#Cod_CuentaBancaria").val() == "003") {
        Cuenta_CajaBancos_FormaPago = $("#Cuenta_CajaBancos option:selected").text();
    }
    var Des_FormaPago_FormaPago = $("#Comentarios").val().trim();
    var TipoCambio_FormaPago = $("#Tipo_Cambio").val();
    var Cod_Moneda_FormaPago = $("#Cod_Moneda").val();

    // ------- Fin EstablecerCamposEntidad

    var i = 0;
    var Facturas = "";
    $('#tablaComprobantes > tbody tr').each(function () {
        if (parseFloat($(this).find("td").eq(6).find("input").val()) > 0) {
            if (parseFloat($(this).find("td").eq(5).text()) == parseFloat($(this).find("td").eq(6).find("input").val())) {

                var parametrosComprobantePago = {
                    method: 'POST',
                    headers: {
                        Accept: 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        id_ComprobantePago: parseInt($(this).find("td").eq(0).text().trim())

                    })
                };
                fetch(_constantes.URL + '/comprobantes_pago_api/get_comprobante_pago', parametrosFormaPago).then(function (req) {
                    return req.json();
                }).then(function (res) {
                    if (res.respuesta == "ok") {

                        var parametrosComprobante = [{ nom_parametro: 'id_ComprobantePago', valor_parametro: -1, tipo: "output" }, { nom_parametro: 'Cod_Libro', valor_parametro: res.data.comprobante_pago[0].Cod_Libro }, { nom_parametro: 'Cod_Periodo', valor_parametro: res.data.comprobante_pago[0].Cod_Periodo }, { nom_parametro: 'Cod_Caja', valor_parametro: res.data.comprobante_pago[0].Cod_Caja }, { nom_parametro: 'Cod_Turno', valor_parametro: res.data.comprobante_pago[0].Cod_Turno }, { nom_parametro: 'Cod_TipoOperacion', valor_parametro: res.data.comprobante_pago[0].Cod_TipoOperacion }, { nom_parametro: 'Cod_TipoComprobante', valor_parametro: res.data.comprobante_pago[0].Cod_TipoComprobante }, { nom_parametro: 'Serie', valor_parametro: res.data.comprobante_pago[0].Serie }, { nom_parametro: 'Numero', valor_parametro: res.data.comprobante_pago[0].Numero }, { nom_parametro: 'Id_Cliente', valor_parametro: res.data.comprobante_pago[0].Id_Cliente }, { nom_parametro: 'Cod_TipoDoc', valor_parametro: res.data.comprobante_pago[0].Cod_TipoDoc }, { nom_parametro: 'Doc_Cliente', valor_parametro: res.data.comprobante_pago[0].Doc_Cliente }, { nom_parametro: 'Nom_Cliente', valor_parametro: res.data.comprobante_pago[0].Nom_Cliente }, { nom_parametro: 'Direccion_Cliente', valor_parametro: res.data.comprobante_pago[0].Direccion_Cliente }, { nom_parametro: 'FechaEmision', valor_parametro: res.data.comprobante_pago[0].FechaEmision }, { nom_parametro: 'FechaVencimiento', valor_parametro: res.data.comprobante_pago[0].FechaVencimiento }, { nom_parametro: 'FechaCancelacion', valor_parametro: $("#Fecha").val() }, { nom_parametro: 'Glosa', valor_parametro: res.data.comprobante_pago[0].Glosa }, { nom_parametro: 'TipoCambio', valor_parametro: res.data.comprobante_pago[0].TipoCambio }, { nom_parametro: 'Flag_Anulado', valor_parametro: res.data.comprobante_pago[0].Flag_Anulado }, { nom_parametro: 'Flag_Despachado', valor_parametro: res.data.comprobante_pago[0].Falg_Despachado }, { nom_parametro: 'Cod_FormaPago', valor_parametro: res.data.comprobante_pago[0].Cod_FormaPago }, { nom_parametro: 'Descuento_Total', valor_parametro: res.data.comprobante_pago[0].Descuento_Total }, { nom_parametro: 'Cod_Moneda', valor_parametro: res.data.comprobante_pago[0].Cod_Moneda }, { nom_parametro: 'Impuesto', valor_parametro: res.data.comprobante_pago[0].Impuesto }, { nom_parametro: 'Total', valor_parametro: res.data.comprobante_pago[0].Total }, { nom_parametro: 'Obs_Comprobante', valor_parametro: res.data.comprobante_pago[0].Obs_Comprobante }, { nom_parametro: 'Id_GuiaRemision', valor_parametro: res.data.comprobante_pago[0].Id_GuiaRemision }, { nom_parametro: 'GuiaRemision', valor_parametro: res.data.comprobante_pago[0].GuiaRemision }, { nom_parametro: 'id_ComprobanteRef', valor_parametro: res.data.comprobante_pago[0].id_ComprobanteRef }, { nom_parametro: 'Cod_Plantilla', valor_parametro: res.data.comprobante_pago[0].Cod_Plantilla }, { nom_parametro: 'Nro_Ticketera', valor_parametro: res.data.comprobante_pago[0].Nro_Ticketera }, { nom_parametro: 'Cod_UsuarioVendedor', valor_parametro: res.data.comprobante_pago[0].Cod_UsuarioVendedor }, { nom_parametro: 'Cod_RegimenPercepcion', valor_parametro: res.data.comprobante_pago[0].Cod_RegimenPercepcion }, { nom_parametro: 'Tasa_Percepcion', valor_parametro: res.data.comprobante_pago[0].Tasa_Percepcion }, { nom_parametro: 'Placa_Vehiculo', valor_parametro: res.data.comprobante_pago[0].Placa_Vehiculo }, { nom_parametro: 'Cod_TipoDocReferencia', valor_parametro: res.data.comprobante_pago[0].Cod_TipoDocReferencia }, { nom_parametro: 'Nro_DocReferencia', valor_parametro: res.data.comprobante_pago[0].Nro_DocReferencia }, { nom_parametro: 'Valor_Resumen', valor_parametro: res.data.comprobante_pago[0].Valor_Resumen }, { nom_parametro: 'Valor_Firma', valor_parametro: res.data.comprobante_pago[0].Valor_Firma }, { nom_parametro: 'Cod_EstadoComprobante', valor_parametro: res.data.comprobante_pago[0].Cod_EstadoComprobante }, { nom_parametro: 'MotivoAnulacion', valor_parametro: res.data.comprobante_pago[0].MotivoAnulacion }, { nom_parametro: 'Otros_Cargos', valor_parametro: res.data.comprobante_pago[0].Otros_Cargos }, { nom_parametro: 'Otros_Tributos', valor_parametro: res.data.comprobante_pago[0].Otros_Tributos }, { nom_parametro: 'Cod_Usuario', valor_parametro: res.data.comprobante_pago[0].Cod_UsuarioAct }];

                        EXEC_SQL_OUTPUT('USP_CAJ_COMPROBANTE_PAGO_G', parametrosComprobante, function (dataComprobante) {
                            if (dataComprobante.err) return res.json({ respuesta: "error", detalle_error: 'No se pudo guardar correctamente la venta' });
                        });
                    }
                }).catch(function (e) {
                    console.log(e);
                    toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                });

                Facturas += $(this).find("td").eq(5).text() + ", ";
                i++;
            } else {
                Facturas += $(this).find("td").eq(5).text() + ", ";
                i++;
            }
        }
    });

    if (i > 0) {
        Facturas = Facturas.substring(0, Facturas.length - 2);
    }

    switch ($("#Cod_FormaPago").val()) {
        case "008":
            GuardarMovimientoCaja(Facturas, CodLibro);
            break;
        case "007":
            if (CodLibro == "08") {
                if ($("#Cuenta_CajaBancos").val() == null || $("#Cuenta_CajaBancos").val() == "") {
                    GuardarMovimientoBancario(Facturas, CodLibro);
                }
            }
            break;
        case "011":
            if ($("#Cuenta_CajaBancos").val() == null || $("#Cuenta_CajaBancos").val() == "") {
                if (CodLibro == "08") {
                    GuardarMovimientoCaja(Facturas, CodLibro);
                } else {
                    if (CodLibro == "14") {
                        GuardarMovimientoBancario(Facturas, CodLibro);
                    }
                }
            }
            break;
        case "003":
            if ($("#Cuenta_CajaBancos").val() == null || $("#Cuenta_CajaBancos").val() == "") {
                if (CodLibro == "08") {
                    GuardarMovimientoCaja(Facturas, CodLibro);
                } else {
                    GuardarMovimientoBancario(Facturas, CodLibro);
                }
            }
            break;
    }

    $('#tablaComprobantes > tbody tr').each(function () {
        if (parseFloat($(this).find("td").eq(6).find("input").val()) > 0) {
            var id_ComprobantePago = parseInt($(this).find("td").eq(0).text()); //parseInt()
            var Monto = parseFloat($(this).find("td").eq(6).find("input").val());
            Id_Movimiento_FormaPago = 0;
            if ($("#Cuenta_CajaBancos").val() != null || $("#Cuenta_CajaBancos").val() != "") {
                Id_Movimiento_FormaPago = parseInt($("#Cuenta_CajaBancos").val());
            }

            var parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    id_ComprobantePago: id_ComprobantePago
                })
            };
            fetch(_constantes.URL + '/formas_pago_api/traer_siguiente_item', parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                if (res.respuesta == "ok") {
                    var Item = res.data.item[0][''];
                    var Cod_Plantilla = null;
                    var Obs_FormaPago = '';

                    var _parametrosFormaPago = {
                        method: 'POST',
                        headers: {
                            Accept: 'application/json',
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            id_ComprobantePago: id_ComprobantePago,
                            Item: Item,
                            Des_FormaPago: Des_FormaPago_FormaPago,
                            Cod_TipoFormaPago: Cod_TipoFormaPago_FormaPago,
                            Cuenta_CajaBancos: Cuenta_CajaBancos_FormaPago,
                            Id_Movimiento: Id_Movimiento_FormaPago,
                            TipoCambio: TipoCambio_FormaPago,
                            Cod_Moneda: Cod_Moneda_FormaPago,
                            Monto: Monto,
                            Cod_Plantilla: Cod_Plantilla,
                            Obs_FormaPago: Obs_FormaPago,
                            Fecha: Fecha_FormaPago

                        })
                    };
                    fetch(_constantes.URL + '/formas_pago_api/guardar_forma_pago', _parametrosFormaPago).then(function (req) {
                        return req.json();
                    }).then(function (res) {
                        if (res.respuesta == "ok") {}
                    }).catch(function (e) {
                        console.log(e);
                        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                    });
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        }
    });
    $("#modal_proceso").modal('hide');
}

function Cuentas(Cod_Libro) {
    run_waitMe($('#main-contenido'), 1, "ios");
    var fecha = new Date();
    var mes = fecha.getMonth() + 1;
    var dia = fecha.getDate();
    var fecha_format = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_TipoComprobante: 'RE',
            Id_Cliente: 0,
            Cod_Libro: Cod_Libro,
            FechaInicio: '1753-01-01 00:00:00',
            FechaFin: '9999-12-31 23:59:59.997'
        })
    };
    fetch(_constantes.URL + '/recibo_iegreso_api/get_variables_cuentas_cobrar_pagar', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        var variables = res.data;
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        };
        fetch(_constantes.URL + '/cajas_api/get_empresa', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            var data_empresa = res.empresa;
            variables['empresa'] = data_empresa;
            VerCuentas(variables, fecha_format, Cod_Libro);
            $('#main-contenido').waitMe('hide');
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            $('#main-contenido').waitMe('hide');
        });
    });
}

exports.Cuentas = Cuentas;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../../../../utility/tools":401,"../../../constantes_entorno/constantes":377,"../../modales":395,"../../modales/cuentas":394,"../../modales/series":397,"empty-element":338,"yo-yo":375}],382:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EntradasSalidas = undefined;

var _templateObject = _taggedTemplateLiteral(['\n    <div class="modal-dialog modal-lg">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title">', '</h4>\n            </div>\n            <div class="modal-body">\n                <div class="modal fade" id="modal_observaciones">\n                    <div class="modal-dialog modal-sm" > \n                        <div class="modal-content" id="modal_obs_body"></div>\n                    </div> \n                </div>\n                <div class="row">\n                    <div class="callout callout-danger hidden" id="modal_error_ingreso">\n                        <p>Es necesario llenar todos los campos requeridos y el Importe mayor a cero</p>\n                    </div>\n                </div>\n                <div class="row" id="divAnulado" style="display:none">\n                    <div class="col-md-12 text-center">\n                        <div class="small-box bg-red">\n                            <div class="inner">\n                                <h3 id="laAnulado">ANULADO</h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-7">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <h4> Almacen </h4>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <div class="form-group">\n                                            <label>Almacen</label>\n                                            <select id="Cod_Almacen" class="form-control input-sm required">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row" id="divOperacion">\n                                    <div class="col-md-12">\n                                        <div class="form-group">\n                                            <label>Operacion</label>\n                                            <select id="Cod_Operacion" class="form-control input-sm required" onchange=', '>\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row" id="divDestino">\n                                    <div class="col-md-12">\n                                        <div class="form-group">\n                                            <label id="laCod_Destino">Destino</label>\n                                            <select id="Cod_Destino" class="form-control input-sm required" onchange=', '>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <div class="form-group">\n                                            <label> Motivo : </label>\n                                            <input type="text" id="Motivo" class="form-control input-sm required">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-4" id="divDocRef">\n                                        <div class="checkbox">\n                                            <label> \n                                                <input type="checkbox" id="optDocRef" onchange=', '> Con Doc Ref? \n                                            </label>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-8" style="display:none" id="divId_ComprobantePago">\n                                        <div class="input-group">\n                                            <input type="text" id="Id_ComprobantePago" data-id=0 class="form-control required" disabled>\n                                            <div class="input-group-btn">\n                                                <button type="button" data-toggle="modal" id="BuscarId_ComprobantePago" class="btn btn-success" onclick=', '>\n                                                    <i class="fa fa-search"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                            </div>\n                            \n                        </div>\n                    </div>\n                    <div class="col-md-5">\n                        <div class="panel panel-default">\n                            <div class="panel-heading text-center">\n                                <div class="row">\n                                    <h4 class="box-title" id="Ruc_Empresa"><strong> R.U.C. ', '</strong></h4>\n                                </div>\n                                <div class="row">\n                                    <h4><strong>', '</strong></h4>\n                                </div> \n                                \n                                <div class="row">\n                                    <div class="col-md-5" id="divSerie">\n                                        <div class="form-group">\n \n                                            <select class="form-control input-sm" id="Serie">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-7" id="divNumero">\n                                        <div class="form-group">\n                                            <input type="text" class="form-control input-sm required" value="00000000', '" id="Numero" onkeypress=', '>\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                            <div class="panel-footer">\n                                <div class="row">\n                                    <div class="col-md-12">  \n                                        <div class="col-md-6" id="divRechazar">  \n                                            <button class="btn btn-danger btn-sm">Rechazar Envio</button>\n                                        </div>\n                                        <div class="col-md-6">\n                                            <div class="form-group">\n                                                <b>Fecha: </b>\n                                                <input type="date" class="form-control input-sm" id="Fecha" value="', '">\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="panel panel-default">\n                        <div class="panel-heading">\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="col-md-3">\n                                        <h4><strong>Detalle Producto</strong></h4>\n                                    </div>\n                                    <div class="col-md-9">\n                                        <div class="col-md-4">\n                                            <button class="btn btn-sm btn-info btn-block" onclick=', '>Recuperar Productos</button>\n                                        </div>\n                                        <div class="col-md-4">\n                                            <button class="btn btn-sm btn-danger btn-block">Agregar por serie</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="panel-body">\n                            <form id="formTablaMovAlmacen">\n                                <div class="row">\n                                    <div class="col-md-12"> \n                                        <button type="button" class="btn btn-success btn-sm" onclick="', '"><i class="fa fa-plus"></i> Agregar Item</button>\n                                    </div>\n                                </div>\n                                <div class="table-responsive" id="divTablaProductos">\n                                    <table class="table table-hover">\n                                        <thead>\n                                            <tr>\n                                                <th>Codigo</th>\n                                                <th>Producto</th>\n                                                <th>Cantidad</th>\n                                                <th>PU</th>\n                                                <th>UM</th>\n                                                <th>Observaciones</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody id="tablaBody">\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    \n                </div>\n            </div>\n    \n            <div class="modal-footer">\n                <button class="btn btn-primary" id="btnAceptar" onclick="', '">Aceptar</button>\n                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar</button>\n            </div>\n        </div>\n    </div>'], ['\n    <div class="modal-dialog modal-lg">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title">', '</h4>\n            </div>\n            <div class="modal-body">\n                <div class="modal fade" id="modal_observaciones">\n                    <div class="modal-dialog modal-sm" > \n                        <div class="modal-content" id="modal_obs_body"></div>\n                    </div> \n                </div>\n                <div class="row">\n                    <div class="callout callout-danger hidden" id="modal_error_ingreso">\n                        <p>Es necesario llenar todos los campos requeridos y el Importe mayor a cero</p>\n                    </div>\n                </div>\n                <div class="row" id="divAnulado" style="display:none">\n                    <div class="col-md-12 text-center">\n                        <div class="small-box bg-red">\n                            <div class="inner">\n                                <h3 id="laAnulado">ANULADO</h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-7">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <h4> Almacen </h4>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <div class="form-group">\n                                            <label>Almacen</label>\n                                            <select id="Cod_Almacen" class="form-control input-sm required">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row" id="divOperacion">\n                                    <div class="col-md-12">\n                                        <div class="form-group">\n                                            <label>Operacion</label>\n                                            <select id="Cod_Operacion" class="form-control input-sm required" onchange=', '>\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row" id="divDestino">\n                                    <div class="col-md-12">\n                                        <div class="form-group">\n                                            <label id="laCod_Destino">Destino</label>\n                                            <select id="Cod_Destino" class="form-control input-sm required" onchange=', '>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <div class="form-group">\n                                            <label> Motivo : </label>\n                                            <input type="text" id="Motivo" class="form-control input-sm required">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-4" id="divDocRef">\n                                        <div class="checkbox">\n                                            <label> \n                                                <input type="checkbox" id="optDocRef" onchange=', '> Con Doc Ref? \n                                            </label>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-8" style="display:none" id="divId_ComprobantePago">\n                                        <div class="input-group">\n                                            <input type="text" id="Id_ComprobantePago" data-id=0 class="form-control required" disabled>\n                                            <div class="input-group-btn">\n                                                <button type="button" data-toggle="modal" id="BuscarId_ComprobantePago" class="btn btn-success" onclick=', '>\n                                                    <i class="fa fa-search"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                            </div>\n                            \n                        </div>\n                    </div>\n                    <div class="col-md-5">\n                        <div class="panel panel-default">\n                            <div class="panel-heading text-center">\n                                <div class="row">\n                                    <h4 class="box-title" id="Ruc_Empresa"><strong> R.U.C. ', '</strong></h4>\n                                </div>\n                                <div class="row">\n                                    <h4><strong>', '</strong></h4>\n                                </div> \n                                \n                                <div class="row">\n                                    <div class="col-md-5" id="divSerie">\n                                        <div class="form-group">\n \n                                            <select class="form-control input-sm" id="Serie">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-7" id="divNumero">\n                                        <div class="form-group">\n                                            <input type="text" class="form-control input-sm required" value="00000000', '" id="Numero" onkeypress=', '>\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                            <div class="panel-footer">\n                                <div class="row">\n                                    <div class="col-md-12">  \n                                        <div class="col-md-6" id="divRechazar">  \n                                            <button class="btn btn-danger btn-sm">Rechazar Envio</button>\n                                        </div>\n                                        <div class="col-md-6">\n                                            <div class="form-group">\n                                                <b>Fecha: </b>\n                                                <input type="date" class="form-control input-sm" id="Fecha" value="', '">\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="panel panel-default">\n                        <div class="panel-heading">\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="col-md-3">\n                                        <h4><strong>Detalle Producto</strong></h4>\n                                    </div>\n                                    <div class="col-md-9">\n                                        <div class="col-md-4">\n                                            <button class="btn btn-sm btn-info btn-block" onclick=', '>Recuperar Productos</button>\n                                        </div>\n                                        <div class="col-md-4">\n                                            <button class="btn btn-sm btn-danger btn-block">Agregar por serie</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="panel-body">\n                            <form id="formTablaMovAlmacen">\n                                <div class="row">\n                                    <div class="col-md-12"> \n                                        <button type="button" class="btn btn-success btn-sm" onclick="', '"><i class="fa fa-plus"></i> Agregar Item</button>\n                                    </div>\n                                </div>\n                                <div class="table-responsive" id="divTablaProductos">\n                                    <table class="table table-hover">\n                                        <thead>\n                                            <tr>\n                                                <th>Codigo</th>\n                                                <th>Producto</th>\n                                                <th>Cantidad</th>\n                                                <th>PU</th>\n                                                <th>UM</th>\n                                                <th>Observaciones</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody id="tablaBody">\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    \n                </div>\n            </div>\n    \n            <div class="modal-footer">\n                <button class="btn btn-primary" id="btnAceptar" onclick="', '">Aceptar</button>\n                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar</button>\n            </div>\n        </div>\n    </div>']),
    _templateObject2 = _taggedTemplateLiteral(['<option value="', '">', '</option>'], ['<option value="', '">', '</option>']),
    _templateObject3 = _taggedTemplateLiteral(['\n    <tr id="', '">\n        <td class="Id_Producto hidden"><input class="form-control" type="text" value="" name="Id_Producto"></td>\n        <td class="Item hidden"><input class="form-control" type="text" value="', '" name="Item"></td>\n        <td class="Cod_Producto"><input data-id=null class="form-control" type="text" value="" name="Cod_Producto"></td>\n        <td class="Nom_Producto"><input class="form-control" type="text" value=""  onblur=', ' name="Nom_Producto"></td>\n        <td class="Cantidad"><input class="form-control" type="number" value="" name="Cantidad"></td>\n        <td class="Cod_UnidadMedida hidden"><input class="form-control" value=null name="Cod_UnidadMedida"></td>\n        <td class="Precio_Venta"><input class="form-control" type="number" value="" name="Precio_Venta"></td>\n        <td class="Unidad_Medida" data-id=null ></td>\n        <td class="Observaciones"><input class="form-control" type="text" value="" name="Observaciones"></td>\n        <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n        <td>\n            <div style="display:flex;">\n                <button type="button" onclick="', '" class="btn btn-primary btn-sm"><i class="fa fa-tasks"></i></a>  \n                <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n            </div>\n        </td>\n    </tr>'], ['\n    <tr id="', '">\n        <td class="Id_Producto hidden"><input class="form-control" type="text" value="" name="Id_Producto"></td>\n        <td class="Item hidden"><input class="form-control" type="text" value="', '" name="Item"></td>\n        <td class="Cod_Producto"><input data-id=null class="form-control" type="text" value="" name="Cod_Producto"></td>\n        <td class="Nom_Producto"><input class="form-control" type="text" value=""  onblur=', ' name="Nom_Producto"></td>\n        <td class="Cantidad"><input class="form-control" type="number" value="" name="Cantidad"></td>\n        <td class="Cod_UnidadMedida hidden"><input class="form-control" value=null name="Cod_UnidadMedida"></td>\n        <td class="Precio_Venta"><input class="form-control" type="number" value="" name="Precio_Venta"></td>\n        <td class="Unidad_Medida" data-id=null ></td>\n        <td class="Observaciones"><input class="form-control" type="text" value="" name="Observaciones"></td>\n        <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n        <td>\n            <div style="display:flex;">\n                <button type="button" onclick="', '" class="btn btn-primary btn-sm"><i class="fa fa-tasks"></i></a>  \n                <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n            </div>\n        </td>\n    </tr>']),
    _templateObject4 = _taggedTemplateLiteral(['\n        <table class="table table-bordered table-striped">\n            <thead>\n                <tr>\n                    <th>Codigo</th>\n                    <th>Producto</th>\n                    <th>Cantidad</th>\n                    <th>PU</th> \n                    <th>UM</th>\n                    <th>Observaciones</th>\n                </tr>\n            </thead>\n            <tbody id="tablaBody">  \n            ', '\n                </tbody>\n        </table>'], ['\n        <table class="table table-bordered table-striped">\n            <thead>\n                <tr>\n                    <th>Codigo</th>\n                    <th>Producto</th>\n                    <th>Cantidad</th>\n                    <th>PU</th> \n                    <th>UM</th>\n                    <th>Observaciones</th>\n                </tr>\n            </thead>\n            <tbody id="tablaBody">  \n            ', '\n                </tbody>\n        </table>']),
    _templateObject5 = _taggedTemplateLiteral(['\n                    <tr id="', '">\n                        <td class="Id_Producto hidden"><input class="form-control" type="text" value="', '" name="Id_Producto"></td>\n                        <td class="Item hidden"><input class="form-control" type="text" value="', '" name="Item"></td>\n                        <td class="Cod_Producto"><input data-id="', '" class="form-control" name="Cod_Producto" type="text" value="', '"></td>\n                        <td class="Nom_Producto"><input class="form-control" type="text" value="', '" name="Nom_Producto" onblur=', '></td>\n                        <td class="Cantidad"><input class="form-control" type="number" value="1" name="Cantidad"></td>\n                        <td class="Cod_UnidadMedida hidden"><input class="form-control" value="', '" name="Cod_UnidadMedida"></td>\n                        <td class="Precio_Venta"><input class="form-control" type="number" name="Precio_Venta" value="', '"></td>\n                        <td class="Unidad_Medida" name="Unidad_Medida" data-id="', '">', '</td>\n                        <td class="Observaciones"><input class="form-control" type="text" value="" name="Observaciones"></td>\n                        <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n                        <td>\n                            <div style="display:flex;">\n                                <button type="button" onclick="', '" class="btn btn-primary btn-sm"><i class="fa fa-tasks"></i></a>  \n                                <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n                            </div>\n                        </td>\n                    </tr>'], ['\n                    <tr id="', '">\n                        <td class="Id_Producto hidden"><input class="form-control" type="text" value="', '" name="Id_Producto"></td>\n                        <td class="Item hidden"><input class="form-control" type="text" value="', '" name="Item"></td>\n                        <td class="Cod_Producto"><input data-id="', '" class="form-control" name="Cod_Producto" type="text" value="', '"></td>\n                        <td class="Nom_Producto"><input class="form-control" type="text" value="', '" name="Nom_Producto" onblur=', '></td>\n                        <td class="Cantidad"><input class="form-control" type="number" value="1" name="Cantidad"></td>\n                        <td class="Cod_UnidadMedida hidden"><input class="form-control" value="', '" name="Cod_UnidadMedida"></td>\n                        <td class="Precio_Venta"><input class="form-control" type="number" name="Precio_Venta" value="', '"></td>\n                        <td class="Unidad_Medida" name="Unidad_Medida" data-id="', '">', '</td>\n                        <td class="Observaciones"><input class="form-control" type="text" value="" name="Observaciones"></td>\n                        <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n                        <td>\n                            <div style="display:flex;">\n                                <button type="button" onclick="', '" class="btn btn-primary btn-sm"><i class="fa fa-tasks"></i></a>  \n                                <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n                            </div>\n                        </td>\n                    </tr>']),
    _templateObject6 = _taggedTemplateLiteral(['<table class="table table-bordered table-striped">\n        <thead>\n            <tr>\n                <th>Codigo</th>\n                <th>Producto</th>\n                <th>Cantidad</th>\n                <th>PU</th> \n                <th>UM</th>\n                <th>Observaciones</th>\n            </tr>\n        </thead>\n        <tbody id="tablaBody">\n            ', '\n        </tbody>\n    </table>'], ['<table class="table table-bordered table-striped">\n        <thead>\n            <tr>\n                <th>Codigo</th>\n                <th>Producto</th>\n                <th>Cantidad</th>\n                <th>PU</th> \n                <th>UM</th>\n                <th>Observaciones</th>\n            </tr>\n        </thead>\n        <tbody id="tablaBody">\n            ', '\n        </tbody>\n    </table>']),
    _templateObject7 = _taggedTemplateLiteral(['\n                    <tr id="', '">\n                        <td class="Id_Producto hidden"><input class="form-control" type="text" value="', '" name="Id_Producto"></td>\n                        <td class="Item hidden"><input class="form-control" type="text" value="', '" name="Item"></td>\n                        <td class="Cod_Producto"><input data-id="', '" class="form-control" type="text" value="', '" name="Cod_Producto"></td>\n                        <td class="Nom_Producto"><input class="form-control" type="text" value="', '"  onblur=', '></td>\n                        <td class="Cantidad"><input class="form-control" type="number" value="', '" name="Cantidad"></td>\n                        <td class="Cod_UnidadMedida hidden"><input class="form-control" value="', '" name="Cod_UnidadMedida"></td>\n                        <td class="Precio_Venta"><input class="form-control" type="number" value="', '" name="Precio_Venta"></td> \n                        <td class="Unidad_Medida" data-id="', '" name="Unidad_Medida">', '</td>\n                        <td class="Observaciones"><input class="form-control" type="text" value="', '" name="Observaciones"></td>\n                        <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n\n                        <td>\n                            <div class="btn-group">\n                                <button type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="btn btn-info dropdown-toggle">\n                                Elegir una accion <span class="caret"></span>\n                                </button>\n                                <ul class="dropdown-menu">\n                                <li><a href="javascript:void(0)" onclick="', '">Asignar Serie</a></li>\n                                <li><a href="javascript:void(0)" onclick="', '"><i class="fa fa-close"></i> Eliminar</a></li>\n                                </ul>\n                            </div> \n                        </td>\n                    </tr>'], ['\n                    <tr id="', '">\n                        <td class="Id_Producto hidden"><input class="form-control" type="text" value="', '" name="Id_Producto"></td>\n                        <td class="Item hidden"><input class="form-control" type="text" value="', '" name="Item"></td>\n                        <td class="Cod_Producto"><input data-id="', '" class="form-control" type="text" value="', '" name="Cod_Producto"></td>\n                        <td class="Nom_Producto"><input class="form-control" type="text" value="', '"  onblur=', '></td>\n                        <td class="Cantidad"><input class="form-control" type="number" value="', '" name="Cantidad"></td>\n                        <td class="Cod_UnidadMedida hidden"><input class="form-control" value="', '" name="Cod_UnidadMedida"></td>\n                        <td class="Precio_Venta"><input class="form-control" type="number" value="', '" name="Precio_Venta"></td> \n                        <td class="Unidad_Medida" data-id="', '" name="Unidad_Medida">', '</td>\n                        <td class="Observaciones"><input class="form-control" type="text" value="', '" name="Observaciones"></td>\n                        <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n\n                        <td>\n                            <div class="btn-group">\n                                <button type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="btn btn-info dropdown-toggle">\n                                Elegir una accion <span class="caret"></span>\n                                </button>\n                                <ul class="dropdown-menu">\n                                <li><a href="javascript:void(0)" onclick="', '">Asignar Serie</a></li>\n                                <li><a href="javascript:void(0)" onclick="', '"><i class="fa fa-close"></i> Eliminar</a></li>\n                                </ul>\n                            </div> \n                        </td>\n                    </tr>']),
    _templateObject8 = _taggedTemplateLiteral(['\n        ', ''], ['\n        ', '']),
    _templateObject9 = _taggedTemplateLiteral(['\n             <option value="', '">', '</option>\n        '], ['\n             <option value="', '">', '</option>\n        ']),
    _templateObject10 = _taggedTemplateLiteral(['<div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Confirmacion</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <p>', '</p>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="', '">Aceptar</button>\n                </div>\n            </div>\n        </div>'], ['<div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Confirmacion</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <p>', '</p>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="', '">Aceptar</button>\n                </div>\n            </div>\n        </div>']);

var _constantes = require('../../../constantes_entorno/constantes');

var _tools = require('../../../../utility/tools');

var _modales = require('../../modales');

var _comprobante_pago = require('../../modales/comprobante_pago');

var _series = require('../../modales/series');

var _movimientos_caja = require('../../movimientos_caja');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');


var contador = 0;
var idFilaSeleccionada = 0;
var idFilaSeleccionadaSerie = 0;

function VerEntradasSalidas(variables, CodTipoComprobante, fecha_actual) {
    global.arraySeries = '';
    global.objProducto = '';
    global.objComprobantePago = '';
    global.objComprobantePagoDetalle = '';
    var el = yo(_templateObject, CodTipoComprobante == "NE" ? "NOTA DE ENTRADA" : "NOTA DE SALIDA - GUIA DE REMISION", variables.dataAlmacen.map(function (e) {
        return yo(_templateObject2, e.Cod_Almacen, e.Des_Almacen);
    }), function () {
        return CambioOperacion(CodTipoComprobante);
    }, variables.dataTiposOperaciones.map(function (e) {
        return yo(_templateObject2, e.Cod_TipoOperacion, e.Nom_TipoOperacion);
    }), function () {
        return CambioDestino(CodTipoComprobante, fecha_actual);
    }, function () {
        return CambioDocRef();
    }, function () {
        return (0, _comprobante_pago.BuscarComprobantePago)(CodTipoComprobante);
    }, variables.empresa.RUC, CodTipoComprobante == "NE" ? "NOTA DE ENTRADA" : "NOTA DE SALIDA", variables.dataComprobante.map(function (e) {
        return yo(_templateObject2, e.Serie, e.Serie);
    }), variables.dataMov[0][''], function () {
        return (0, _tools.BloquearControles)(event);
    }, fecha_actual, function () {
        return RecuperarProductos(CodTipoComprobante, fecha_actual);
    }, function () {
        return AgregarFilaTabla(CodTipoComprobante, fecha_actual);
    }, function () {
        return AceptarRegistroEntradaSalida(CodTipoComprobante, fecha_actual);
    });
    var ingreso = document.getElementById('modal-proceso');
    empty(ingreso).appendChild(el);
    $('#modal-proceso').modal();

    $('#modal-superior').on('hidden.bs.modal', function () {
        if (global.objProducto != '' && global.objProducto) {
            $("tr#" + idFilaSeleccionada).find('td.Id_Producto').find('input').val(global.objProducto.Id_Producto);
            $("tr#" + idFilaSeleccionada).find('td.Cod_Producto').find('input').attr("data-id", global.objProducto.Id_Producto);
            $("tr#" + idFilaSeleccionada).find('td.Cod_Producto').find('input').val(global.objProducto.Cod_Producto);
            $("tr#" + idFilaSeleccionada).find('td.Nom_Producto').find('input').val(global.objProducto.Nom_Producto);
            $("tr#" + idFilaSeleccionada).find('td.Unidad_Medida').attr("data-id", global.objProducto.Cod_UnidadMedida);
            $("tr#" + idFilaSeleccionada).find('td.Cod_UnidadMedida').find('input').val(global.objProducto.Cod_UnidadMedida);
            $("tr#" + idFilaSeleccionada).find('td.Unidad_Medida').text(global.objProducto.Nom_UnidadMedida);
            if (global.objProducto.Precio_Venta != null) $("tr#" + idFilaSeleccionada).find('td.Precio_Venta').find('input').val(global.objProducto.Precio_Venta);else $("tr#" + idFilaSeleccionada).find('td.Precio_Venta').find('input').val(0);
            $("tr#" + idFilaSeleccionada).find('td.Cantidad').find('input').val(1);
        }

        if (global.objComprobantePago != '' && global.objComprobantePago && global.objComprobantePagoDetalle != '' && global.objComprobantePagoDetalle) {
            $("#Id_ComprobantePago").attr("data-id", global.objComprobantePago.id_ComprobantePago);
            $("#Id_ComprobantePago").val(global.objComprobantePagoDetalle.DocCliente + " " + global.objComprobantePagoDetalle.Cod_TipoComprobante + " " + global.objComprobantePagoDetalle.Serie + " " + global.objComprobantePagoDetalle.Numero);
        }
    });

    $('#modal-otros-procesos').on('hidden.bs.modal', function () {
        if (global.arraySeries != '' && global.arraySeries) {
            $("tr#" + idFilaSeleccionadaSerie).find('td.Series').find('input').val(JSON.stringify(global.arraySeries));
        }
    });

    CambioOperacion(CodTipoComprobante);
    CambioDestino(CodTipoComprobante, fecha_actual);
}

function AgregarFilaTabla(CodTipoComprobante, fecha_actual) {
    var idFila = contador;
    //var rows = $("#tablaBody > tr").length
    var fila = yo(_templateObject3, idFila, $("#tablaBody > tr").length, function () {
        return BuscarProductoES(CodTipoComprobante, idFila);
    }, JSON.stringify([]), function () {
        return AsignarSeries(idFila, fecha_actual, CodTipoComprobante);
    }, function () {
        return EliminarFila(idFila);
    });
    contador++;
    $("#tablaBody").append(fila);
}

function LlenarProductos(productos, CodTipoComprobante, fecha_actual) {
    var i = 0;
    var el = yo(_templateObject4, productos.map(function (u) {
        return yo(_templateObject5, u.Id_Producto, u.Id_Producto, i++, u.Id_Producto, u.Cod_Producto, u.Nom_Producto, function () {
            return BuscarProductoES(CodTipoComprobante, u.Id_Producto);
        }, u.Cod_UnidadMedida, u.Precio_Venta, u.Cod_UnidadMedida, u.Nom_UnidadMedida, JSON.stringify([]), function () {
            return AsignarSeries(u.Id_Producto, fecha_actual, CodTipoComprobante);
        }, function () {
            return EliminarFila(u.Id_Producto);
        });
    }));
    //$("#tablaBody").html()
    //$("#tablaBody").append(el)
    var tabla = document.getElementById('divTablaProductos');
    empty(tabla).appendChild(el);
}

function LlenarDetallesMovAlmacen(CodTipoComprobante, productos, fecha_actual) {
    var el = yo(_templateObject6, productos.map(function (u) {
        return yo(_templateObject7, u.Id_Producto, u.Id_Producto, u.Item, u.Id_Producto, u.Cod_Producto, u.Des_Producto, function () {
            return BuscarProductoES(CodTipoComprobante, u.Id_Producto);
        }, u.Cantidad, u.Cod_UnidadMedida, u.Precio_Unitario, u.Cod_UnidadMedida, u.Nom_UnidadMedida, u.Obs_AlmacenMovD, JSON.stringify([]), function () {
            return AsignarSeries(u.Id_Producto, fecha_actual, CodTipoComprobante);
        }, function () {
            return EliminarFila(u.Id_Producto);
        });
    }));
    var tabla = document.getElementById('divTablaProductos');
    empty(tabla).appendChild(el);
}

function LlenarAlmacenesDestinos(almacenes) {
    var el = yo(_templateObject8, almacenes.map(function (e) {
        return yo(_templateObject9, e.Cod_Almacen, e.Des_Almacen);
    }));
    $("#Cod_Destino").html('');
    $("#Cod_Destino").html(el);
    $("#divDocRef").show();
}

function LlenarPendientesRecepcionar(pendientes) {
    var el = yo(_templateObject8, pendientes.map(function (e) {
        return yo(_templateObject9, e.Id_AlmacenMov, e.Motivo);
    }));
    $("#Cod_Destino").html('');
    $("#Cod_Destino").html(el);
    $("#divDocRef").show();
}

function CambioDestino(CodTipoComprobante, fecha_actual) {
    if ($("#Cod_TipoOperacion").val() == "21") {
        if ($("#Cod_Destino").val() != null) {
            CargarDatosAControles(CodTipoComprobante, fecha_actual);
            $("#btnAceptar").text("Recepcionar");
            $("#divRechazar").show();
            // falta  buConsultarSeries.Visible = true;
        } else {
            $("#btnAceptar").text("Aceptar");
            $("#divRechazar").hide();
            // falta buConsultarSeries.Visible = true;
        }
    }
}

function CambioOperacion(CodTipoComprobante) {
    $("#divDestino").hide();
    $("#divRechazar").hide();
    $("#divDocRef").show();
    var Cod_Almacen = $("#Cod_Almacen").val();
    if ($("#Cod_Operacion").val() == "11") {
        $("#laCod_Destino").text("Destino:");
        $("#divDestino").show();
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Cod_Almacen: Cod_Almacen
            })
        };
        fetch(_constantes.URL + '/almacenes_api/get_almacenes_distinto', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            LlenarAlmacenesDestinos(res.data.almacenes);
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    } else {
        if ($("#Cod_Operacion").val() == "21") {
            $("#laCod_Destino").text("Pendientes:");
            $("#divDestino").show();
            var _parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Cod_Almacen: Cod_Almacen
                })
            };
            fetch(_constantes.URL + '/almacenes_api/get_mov_pendiente_almacenes', _parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                LlenarPendientesRecepcionar(res.data.pendientes);
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        }
    }
}

function CambioDocRef() {
    if ($("#optDocRef").is(":checked")) {
        $("#divId_ComprobantePago").show();
    } else {
        $("#divId_ComprobantePago").hide();
    }
}

function EliminarFila(idFila) {
    $("#" + idFila).remove();
}

function BuscarProductoES(CodTipoComprobante, idFila) {
    if ($("tr#" + idFila).find('td.Cod_Producto').find('input').val().trim() == "") if ($("tr#" + idFila).find('td.Nom_Producto').find('input').val().trim() != "") {
        idFilaSeleccionada = idFila;
        (0, _modales.BuscarProducto)(CodTipoComprobante == "NS", $("tr#" + idFila).find('td.Nom_Producto').find('input').val());
    }
}

function CargarDatosAControles(CodTipoComprobante, fecha_actual) {
    var Id_AlmacenMov = $("#Cod_Destino").val();
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_AlmacenMov: Id_AlmacenMov
        })
    };
    fetch(_constantes.URL + '/almacenes_api/get_almacen_mov_by_id', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.data.movimientos_almacen.length > 0) {
            CargarElementos(CodTipoComprobante, res.data.movimientos_almacen[0], fecha_actual);
        } else {
            IniciarElementos(fecha_actual);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CargarElementos(CodTipoComprobante, movimientos_almacen, fecha_actual) {
    $("#Cod_Operacion").val(movimientos_almacen.Cod_TipoOperacion);
    $("#Serie").val(movimientos_almacen.Serie);
    $("#Numero").val(movimientos_almacen.Numero);
    $("#Fecha").val(movimientos_almacen.Fecha);
    $("#Motivo").val(movimientos_almacen.Motivo);
    $("#Id_ComprobantePago").attr("data-id", movimientos_almacen.Id_ComprobantePago);
    if (movimientos_almacen.Id_ComprobantePago != 0 && movimientos_almacen.Cod_TipoOperacion != "21") {
        $("#optDocRef").attr("checked", true);
        CambioDocRef();
    } else {
        $("#optDocRef").attr("checked", false);
        CambioDocRef();
    }

    if (movimientos_almacen.Flag_Anulado) {
        $("#divAnulado").show();
    } else {
        $("#divAnulado").hide();
    }

    var Id_AlmacenMov = movimientos_almacen.Id_AlmacenMov;
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_AlmacenMov: Id_AlmacenMov
        })
    };
    fetch(_constantes.URL + '/almacenes_api/get_almacen_mov_detalle_by_id', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        LlenarDetallesMovAlmacen(CodTipoComprobante, res.data.movimientos_detalle_almacen, fecha_actual);
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function IniciarElementos(fecha_actual) {
    $("#Numero").val("");
    $("#Fecha").val(fecha_actual);
    $("#Motivo").val("");
    $("#divAnulado").hide();
    $("#Id_ComprobantePago").attr("data-id", 0);
    // falta nudIdComprobantePago.Tag = 0;
}

function RecuperarProductos(CodTipoComprobante, fecha_actual) {
    run_waitMe($('#divTablaProductos'), 1, "ios");
    var Cod_Almacen = $("#Cod_Almacen").val();
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_Almacen: Cod_Almacen
        })
    };
    fetch(_constantes.URL + '/productos_serv_api/get_producto_by_almacen', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        LlenarProductos(res.data.productos, CodTipoComprobante, fecha_actual);
        $('#divTablaProductos').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#divTablaProductos').waitMe('hide');
    });
}

function AceptarRegistroEntradaSalida(CodTipoComprobante, fecha_actual) {
    var flagMensaje = false;
    if ($("#divDestino").css("display") == "block" && $("#Cod_Destino").val() != null && $("#Cod_Destino").val().trim() != "21") {
        flagMensaje = true;
    } else {
        flagMensaje = false;
    }

    var el = yo(_templateObject10, flagMensaje ? "Esta seguro que desea recepcionar este movimiento?" : "Esta Seguro que desea guardar este movimiento?", function () {
        return AceptarRegistro(CodTipoComprobante, fecha_actual);
    });
    var modal_alerta = document.getElementById('modal-superior');
    empty(modal_alerta).appendChild(el);
    $('#modal-superior').modal();
}

function AceptarRegistro(CodTipoComprobante, fecha_actual) {
    if ($("#divDestino").css("display") == "block" && $("#Cod_Destino").val() != null && $("#Cod_Destino").val().trim() != "21") {
        run_waitMe($('#modal-superior'), 1, "ios", "Realizando operacion...");
    } else {
        if (EsValido()) {
            run_waitMe($('#modal-superior'), 1, "ios", "Realizando operacion...");
            var Cod_Almacen = $("#Cod_Almacen").val();
            var Cod_TipoOperacion = $("#Cod_Operacion").val();
            var Cod_TipoComprobante = CodTipoComprobante; //$("#Id_ComprobantePago").attr("data-id")
            var Fecha = fecha_actual;
            var Serie = $("#Serie").val();
            var Numero = $("#Numero").val();
            var Motivo = $("#Motivo").val();
            var Id_ComprobantePago = $("#Id_ComprobantePago").attr("data-id");
            var Flag_Anulado = 0;
            if ($("#divAnulado").css("display") == "display") {
                Flag_Anulado = 1;
            }
            var Obs_AlmacenMov = null;
            var dataForm = $("#formTablaMovAlmacen").serializeArray();

            // destino
            var Cod_Destino = $("#Cod_Destino").val();

            var parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                credentials: 'same-origin',
                body: JSON.stringify({
                    Cod_Almacen: Cod_Almacen,
                    Cod_TipoOperacion: Cod_TipoOperacion,
                    Cod_TipoComprobante: Cod_TipoComprobante,
                    Serie: Serie,
                    Numero: Numero,
                    Motivo: Motivo,
                    Id_ComprobantePago: Id_ComprobantePago,
                    Flag_Anulado: Flag_Anulado,
                    Obs_AlmacenMov: Obs_AlmacenMov,
                    dataForm: dataForm,
                    Fecha: Fecha,
                    Cod_Destino: Cod_Destino
                })

                //console.log(parametros)
            };fetch(_constantes.URL + '/almacenes_api/guardar_mov_almacen', parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                console.log(res);
                if (res.respuesta == "ok") {

                    var _parametros2 = {
                        method: 'POST',
                        headers: {
                            Accept: 'application/json',
                            'Content-Type': 'application/json'
                        },
                        credentials: 'same-origin',
                        body: JSON.stringify({})
                    };

                    fetch(_constantes.URL + '/productos_serv_api/update_producto_stock', _parametros2).then(function (req) {
                        return req.json();
                    }).then(function (res) {
                        toastr.success('Se guardo correctamente el registro', 'Confirmacion', { timeOut: 5000 });
                        (0, _movimientos_caja.refrescar_movimientos)();
                    }).catch(function (e) {
                        console.log(e);
                        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                    });
                } else {
                    toastr.error('Ocurrio un error. Intentelo mas tarde', 'Error', { timeOut: 5000 });
                }
                $('#modal-proceso').modal('hide');
                $('#modal-superior').modal('hide');
                $('#modal-superior').waitMe('hide');
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                $('#modal-superior').waitMe('hide');
            });
        }
    }
}

function EsValido() {
    if ($("#Cod_Almacen").val().trim() != "") {
        if ($("#Cod_Operacion").val().trim() != "") {
            if ($("#Motivo").val().trim() != "") {
                return true;
            } else {
                toastr.error('Debe de ingresar un Motivo para el Movimiento de Almacen.', 'Error', { timeOut: 5000 });
            }
        } else {
            toastr.error('Debe de Selecionar un Tipo de Operacion.', 'Error', { timeOut: 5000 });
            $("#Cod_Operacion").focus();
        }
    } else {
        toastr.error('Debe de Selecionar un Almacen.', 'Error', { timeOut: 5000 });
        $("#Cod_Almacen").focus();
    }

    return false;
}

function AsignarSeries(idFila, fecha_actual, CodTipoComprobante) {
    idFilaSeleccionadaSerie = idFila;
    var Cod_Almacen = $("#Cod_Almacen").val();
    var Id_Producto = $("#" + idFila).find("td.Id_Producto").find("input").val();
    var Cantidad = parseFloat($("#" + idFila).find("td.Cantidad").find("input").val());
    var Series = JSON.parse($("#" + idFila).find("td.Series").find("input").val());
    var NroDias = CodTipoComprobante == "NE" ? 30 : 0;
    var Stock = CodTipoComprobante == "NE" ? 0 : 1;
    if (Id_Producto != null && Id_Producto != "") (0, _series.AsignarSeriesModal)(Cod_Almacen, Id_Producto, Cantidad, NroDias, Series, fecha_actual, Stock);
}

function EntradasSalidas(Cod_TipoComprobante) {
    run_waitMe($('#main-contenido'), 1, "ios");
    var fecha = new Date();
    var mes = fecha.getMonth() + 1;
    var dia = fecha.getDate();
    var fecha_format = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);
    //VerEntradasSalidas(CodTipoComprobante,fecha_format)
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_TipoComprobante: Cod_TipoComprobante
        })
    };
    fetch(_constantes.URL + '/almacenes_api/get_variables_entradas_salidas', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        var variables = res.data;
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        };
        fetch(_constantes.URL + '/cajas_api/get_empresa', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            //console.log(variables)
            var data_empresa = res.empresa;
            variables['empresa'] = data_empresa;
            VerEntradasSalidas(variables, Cod_TipoComprobante, fecha_format);
            $('#main-contenido').waitMe('hide');
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            $('#main-contenido').waitMe('hide');
        });
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#main-contenido').waitMe('hide');
    });
}

exports.EntradasSalidas = EntradasSalidas;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../../../../utility/tools":401,"../../../constantes_entorno/constantes":377,"../../modales":395,"../../modales/comprobante_pago":393,"../../modales/series":397,"../../movimientos_caja":398,"empty-element":338,"yo-yo":375}],383:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ComprobantePago = undefined;

var _templateObject = _taggedTemplateLiteral(['\n    <div class="modal-dialog modal-lg">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"><b>', '</b></h4>\n            </div>\n            <div class="modal-body" id="modal_form_ingreso">\n                <div class="modal fade" id="modal_observaciones">\n                    <div class="modal-dialog modal-sm" > \n                        <div class="modal-content" id="modal_obs_body"></div>\n                    </div> \n                </div>\n                <div class="row">\n                    <div class="callout callout-danger hidden" id="modal_error_ingreso">\n                        <p>Es necesario llenar todos los campos requeridos y el Importe mayor a cero</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-8" id="div-cliente-comprobante-pago">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <h4> Cliente/Proveedor </h4>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-md-3" id="divCodTipoDoc">\n                                        <div class="form-group">\n                                            <select id="Cod_TipoDoc" class="form-control input-sm" onchange=', '>\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-6" id="divNroDocumento">\n                                        <div class="input-group">\n                                            <input type="text" id="Nro_Documento" onblur="', '" onkeypress=', ' class="form-control input-sm required" value=', '>\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-success btn-sm" id="BuscarRENIEC">\n                                                    <i class="fa fa-globe"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-3" id="divDetalles">\n                                        <div class="form-group">\n                                            <button class="btn btn-info btn-sm"  onclick="', '">Mas Detalles</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12" id="divCliente">\n                                        <div class="form-group">\n                                            <label> Se\xF1or(es) : </label>\n                                            <div class="input-group input-group-sm">\n                                                <div class="input-group-btn">\n                                                    <button type="button" class="btn btn-success" id="AgregarCliente"  onclick=', '>\n                                                        <i class="fa fa-plus"></i>\n                                                    </button>\n                                                </div>\n                                                <input type="text" id="Cliente" class="form-control required" data-id=', ' value=', '>\n                                                <div class="input-group-btn">\n                                                    <button type="button" class="btn btn-info" id="BuscarCliente"  onclick=', '>\n                                                        <i class="fa fa-search"></i>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12" id="divDireccion">\n                                        <div class="form-group">\n                                            <label> Direccion : </label>\n                                            <input type="text" id="Direccion" class="form-control input-sm required" value=', '>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div class="box-footer">\n                                \n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-md-4">\n                        <div class="panel panel-default">\n                            <div class="panel-heading text-center">\n                                <div class="row">\n                                    <h4 class="box-title" id="Ruc_Empresa"><strong> R.U.C. ', '</strong></h4>\n                                </div>\n                                <div class="row">\n                                    <div class="col-sm-12">\n                                        <div class="form-group">\n                                            <select id="Cod_TipoComprobante" class="form-control selectPalerp" onchange=', '>\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div> \n                                \n                                <div class="row">\n                                    <div class="col-md-6" id="divSerie">\n                                        <div class="form-group" style="display:flex">\n\n                                            <select class="form-control input-sm" id="Serie" onchange=', '>\n                                               \n                                            </select>\n                                            \n                                        </div>\n                                    </div>\n                                    <div class="col-md-6" id="divNumero">\n                                        <div class="form-group">\n                                            <input type=', ' class="form-control input-sm required" id="Numero" onblur=', '>\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-12">\n                        <div class="panel panel-default">\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-sm-6">\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <div class="col-sm-3" id="divContado">\n                                                    <label></label>\n                                                    <div class="radio">\n                                                        <label>\n                                                            <input type="radio" value="contado" id="optCredito" name="optCredito" onchange=', ' checked> Contado\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                                <div class="col-sm-4" id="divCredito" style="display:none">\n                                                    <label></label>\n                                                    <div class="radio">\n                                                        <label>\n                                                            <input type="radio" value="credito" id="optCredito" name="optCredito"  onchange=', '> Credito\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                                <div class="col-sm-1" id="divMultiplesPagos">\n                                                    <label></label>\n                                                    <div class="radio">\n                                                        <button type="button" class="btn btn-success btn-xs" onclick="', '" id="btnMultiplesPagos"><i class="fa fa-money"></i></button>\n                                                    </div>\n                                                </div>\n                                                <div class="col-sm-4" id="divOperacion">\n                                                    <label id="lbCuentaCajaBanco">#Operacion</label>\n                                                    <div class="form-group">\n                                                        <select class="form-control input-sm" id="Cod_CuentaBancaria" onchange=', '> \n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-4" id="divNroDias" style="display:none">\n                                                <div class="form-group">\n                                                    <label>Dias:</label>\n                                                    <input class="form-control input-sm" type="number" id="Nro_Dias" value="0">\n                                                </div>\n                                            </div>\n                                            <div class="col-md-4" id="divFormasPago">\n                                                <div class="form-group">\n                                                    <select class="form-control input-sm" onchange="', '" id="Cod_FormaPago"> \n                                                        ', ' \n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-8" id="divCuentaCajaBancos">\n                                                <div class="form-group" style="display: flex;">\n                                                    <select class="form-control input-sm select-preserve" id="Cuenta_CajaBancos"> \n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-4" id="divLicitacion" style="display:block">\n                                                <div class="checkbox">\n                                                    <label>\n                                                        <input type="checkbox" id="optLicitacion" name="optLicitacion" onchange=', '> Licitacion\n                                                    </label>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-8" id="divCodigoLicitacion" style="display:none">\n                                                <div class="form-group">\n                                                    <select class="form-control input-sm" id="Cod_Licitacion" onchange=', '> \n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-sm-6">\n                                        <div class="row">\n                                            <div class="col-sm-2" id="divEsGastos" style="display: ', '">\n                                                <div class="checkbox"> \n                                                    <input type="checkbox" id="optEsGasto" name="optEsGasto" onchange="', '"> Es Gastos?\n                                                </div>\n                                            </div>\n                                            <div class="col-sm-3" id="divMoneda">\n                                                <div class="form-group">\n                                                    <b>Moneda: </b>\n                                                    <select id="Cod_Moneda" class="form-control input-sm" onchange=', '>\n                                                        ', '\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class="col-sm-3" id="divTC">\n                                                <div class="form-group">\n                                                    <b>T/C: </b>\n                                                    <input class="form-control input-sm" type="number" id="Tipo_Cambio" value="1.00">\n                                                </div>\n                                            </div>\n                                            <div class="col-sm-4" id="divFecha">\n                                                <div class="form-group">\n                                                    <b>Fecha: </b>\n                                                    <input type="date" class="form-control input-sm" id="Fecha" value="', '" onchange=', '>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-sm-12" id="divVendedor">\n                                                <div class="form-group">\n                                                    <b>Vendedor: </b>\n                                                    <select id="Cod_Usuarios" id="" class="form-control input-sm">\n                                                        ', '\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class="row">\n                                            <div class="col-sm-6" id="divGuiaRemision">\n                                                <div class="form-group">\n                                                    <b>Guia de Remision: </b>\n                                                    <div class="input-group input-group-sm">\n                                                        <div class="input-group-btn">\n                                                            <button type="button" class="btn btn-success" id="AgregarGuia"  >\n                                                                <i class="fa fa-plus"></i>\n                                                            </button>\n                                                        </div>\n                                                        <input type="text" id="Guia" class="form-control required input-sm">\n                                                        <div class="input-group-btn">\n                                                            <button type="button" class="btn btn-info" id="BuscarGuia"  >\n                                                                <i class="fa fa-search"></i>\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-6">\n                                                <div class="row" id="divDescargarProducto">\n                                                    <div class="checkbox">\n                                                        <label>\n                                                            <input type="checkbox" id="optDescargar" name="optDescargar" checked="checked" onchange=', '> ', '\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                                <div class="row" id="divExportacion">\n                                                    <div class="checkbox">\n                                                        <label>\n                                                            <input type="checkbox" id="optExportacion" name="optExportacion" onchange=', '> Exportacion ? \n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-12">\n                        <div class="panel panel-default">\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-md-12"> \n                                        <button type="button" class="btn btn-success btn-sm" onclick="', '"><i class="fa fa-plus"></i> Agregar Item</button>\n                                    </div>\n                                </div>\n\n                                <div class="table-responsive">\n                                    <table id="tablaProductos" class="table table-bordered table-hover">\n                                        <thead>\n                                            <tr> \n                                                <th>\n                                                    <div class="input-group">\n                                                        <label>Codigo/Producto/Servicio</label>\n                                                        <span class="input-group-btn">\n                                                            <button type="button" class="btn btn-default btn-xs" onclick=', '><i class="fa fa-search"></i></button>\n                                                        </span>\n                                                    </div>\n                                                </th>\n                                                <th>Almacen</th>\n                                                <th>\n                                                    <div class="input-group">\n                                                        <label>UM</label>\n                                                        <span class="input-group-btn">\n                                                            <button type="button" class="btn btn-default btn-xs"><i class="fa fa-refresh"></i></button>\n                                                        </span>\n                                                    </div>\n                                                </th>\n                                                <th>Cantidad</th>\n                                                <th>Precio</th>\n                                                <th>Desc. %</th>\n                                                <th>Importe</th>\n                                            </tr>\n                                            <tr style="background:bisque"> \n                                                <input class="hidden" id="Cod_Producto" value=null>\n                                                <input class="hidden" id="Cod_TipoOperatividad" value=null>\n                                                <th><input type="text" id="Nom_Producto" data-id=null class="form-control input-sm" onblur=', '></th>\n                                                <th><select class="form-control input-sm" id="Cod_Almacen" onchange="', '"> </select></th>\n                                                <th>\n                                                   <select class="form-control input-sm" id="Cod_UnidadMedida" onchange="', '"> </select>\n                                                </th>\n                                                <th>\n                                                    <div style="display: inline-flex;">\n                                                        <input type="number" class="form-control input-sm" id="Cantidad" value="0.00" onkeypress=', ' onchange=', '>\n                                                        <select class="form-control input-sm" style="display:', ';width: 10%;" id="Cod_TipoPrecio" > </select>\n                                                    </div>\n                                                </th>\n                                                \n                                                <th><input type="number" class="form-control input-sm" id="Precio_Unitario"  value="0.00" onkeypress=', ' onchange=', '></th>\n                                                <th><input type="number" class="form-control input-sm" id="Descuento" value="0.00" ></th>\n                                                <th><input type="number" class="form-control input-sm" id="Importe" value="0.00" onkeypress=', '></th>\n                                            </tr>\n                                        </thead>\n                                    </table>\n                                    <table class="table table-bordered table-hover" id="tablaDetallesComprobante">\n                                        <tbody id="tablaBody">\n                                        </tbody>\n                                    </table>\n\n                                </div>\n\n                            </div>\n                            <div class="panel-footer">\n                                <div class="row">\n                                    <div class="col-md-8">\n                                        <label id="laSON">SON : </label>\n                                    </div>\n                                    <div class="col-md-4">\n                                        <div class="form-group">\n                                            <label for="subtotal" class="col-sm-5 control-label" value="0.00">SUB TOTAL</label>\n                        \n                                            <div class="col-sm-7">\n                                                <input type="text" class="form-control input-sm" id="subtotal" onkeypress=', '>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-5">\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <div class="checkbox">\n                                                    <label>\n                                                        <input type="checkbox" id="ckbIncluyeIGV" checked="checked" onchange="', '">Precio Unitario Incluye IGV?\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>  \n                                        <div class="row">\n                                            <div class="col-md-4">\n                                                <label>Glosa Contable:</label>\n                                            </div>\n                                            <div class="col-md-8">\n                                                <input type="text" id="Glosa" class="form-control input-sm" value="', '">\n                                            </div>\n                                        </div>  \n                                        <div class="row">\n                                            <div class="col-md-3">\n                                                <label>Placa Vehiculo:</label>\n                                            </div>\n                                            <div class="col-md-3">\n                                                <input type="text" class="form-control input-sm" id="placaVehiculo">\n                                            </div>\n                                            <div class="col-md-3">\n                                                <label>Stock actual:</label>\n                                            </div>\n                                            <div class="col-md-3">\n                                                <input type="text" class="form-control input-sm" id="Stock" onkeypress=', '>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-6">\n                                                <button type="button" class="btn btn-success btn-sm btn-block" onclick="', '">Percepcion</button>\n                                            </div>\n                                            <div class="col-md-6">\n                                                <button type="button" class="btn btn-warning btn-sm btn-block" id="btnBuscarSeries" onclick="', '">Buscar Series</button>\n                                            </div>\n                                        </div>  \n                                    </div>\n                                    <div class="col-md-3">\n                                        <div class="form-group">\n                                            <b id="laDescuento" style="display:none">DESC. TOTAL : </b>\n                                            <input type="number"  style="display:none" class="form-control input-sm" value="0.00" id="DescuentoTotal">\n                                        </div>\n                                        <div class="form-group">\n                                            <b id="laExonerado"  style="display:none">EXONERADO </b>\n                                            <input type="number" class="form-control input-sm" style="display:none" value="0.00" id="Exonerado">\n                                        </div>\n                                        <div class="form-group">\n                                            <b id="laGratuitas"  style="display:none">GRATUITAS: </b>\n                                            <input type="number" class="form-control input-sm" style="display:none" value="0.00" id="Gratuitas">\n                                        </div>\n                                        <div class="form-group">\n                                            <b id="laPercepcion"  style="display:none">PERCEPCION: </b>\n                                            <input type="number"  style="display:none" class="form-control input-sm" value="0.00" id="Percepcion">\n                                        </div>\n                                    </div>\n                                    <div class="col-md-4">\n                                        <div class="form-group" id="divAplicaImpuesto">\n                                            <label>\n                                                <input type="checkbox" id="ckbAplicaImpuesto" ', '> I.G.V 18%\n                                            </label>\n                                            <input type="text" class="form-control input-sm" value="0.00" id="Impuesto" onkeypress=', '>\n                                        </div>\n                                        <div class="form-group">\n                                            <label>\n                                                <input type="checkbox" id="cbAplicaServicios"  checked="checked"> SERVICIOS\n                                            </label>\n                                            <input type="number" class="form-control input-sm" value="0.00" id="OtrosCargos" onkeypress=', ' onchange=', '>\n                                        </div>\n                                        <div class="form-group" style="display:none">\n                                            <label>\n                                                <input type="checkbox"  checked="checked"> I.S.C 3%\n                                            </label>\n                                            <input type="number" class="form-control input-sm" value="0.00" id="Servicios">\n                                        </div>\n                                        <div class="form-group">\n                                            <strong>DESCUENTO GLOBAL</strong>\n                                            <input type="number" class="form-control input-sm" value="0.00" id="Descuento_Global" onkeypress=', ' onchange=', '>\n                                        </div>\n                                        <div class="form-group">\n                                            <strong>GRAN TOTAL</strong>\n                                            <input type="text" class="form-control input-sm" id="Gran_Total" value="0.00" onkeypress=', '>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row text-center">\n                                    <div class="col-md-12">\n                                        <h4><strong id="DescripcionDespachado"></strong></h4>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    \n            <div class="modal-footer">\n                <button class="btn btn-primary" id="btnAceptarGenerarComprobante" onclick=', '>', '</button>\n                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar</button>\n            </div>\n        </div>\n    </div>'], ['\n    <div class="modal-dialog modal-lg">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"><b>', '</b></h4>\n            </div>\n            <div class="modal-body" id="modal_form_ingreso">\n                <div class="modal fade" id="modal_observaciones">\n                    <div class="modal-dialog modal-sm" > \n                        <div class="modal-content" id="modal_obs_body"></div>\n                    </div> \n                </div>\n                <div class="row">\n                    <div class="callout callout-danger hidden" id="modal_error_ingreso">\n                        <p>Es necesario llenar todos los campos requeridos y el Importe mayor a cero</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-8" id="div-cliente-comprobante-pago">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <h4> Cliente/Proveedor </h4>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-md-3" id="divCodTipoDoc">\n                                        <div class="form-group">\n                                            <select id="Cod_TipoDoc" class="form-control input-sm" onchange=', '>\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-6" id="divNroDocumento">\n                                        <div class="input-group">\n                                            <input type="text" id="Nro_Documento" onblur="', '" onkeypress=', ' class="form-control input-sm required" value=', '>\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-success btn-sm" id="BuscarRENIEC">\n                                                    <i class="fa fa-globe"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-3" id="divDetalles">\n                                        <div class="form-group">\n                                            <button class="btn btn-info btn-sm"  onclick="', '">Mas Detalles</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12" id="divCliente">\n                                        <div class="form-group">\n                                            <label> Se\xF1or(es) : </label>\n                                            <div class="input-group input-group-sm">\n                                                <div class="input-group-btn">\n                                                    <button type="button" class="btn btn-success" id="AgregarCliente"  onclick=', '>\n                                                        <i class="fa fa-plus"></i>\n                                                    </button>\n                                                </div>\n                                                <input type="text" id="Cliente" class="form-control required" data-id=', ' value=', '>\n                                                <div class="input-group-btn">\n                                                    <button type="button" class="btn btn-info" id="BuscarCliente"  onclick=', '>\n                                                        <i class="fa fa-search"></i>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12" id="divDireccion">\n                                        <div class="form-group">\n                                            <label> Direccion : </label>\n                                            <input type="text" id="Direccion" class="form-control input-sm required" value=', '>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div class="box-footer">\n                                \n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-md-4">\n                        <div class="panel panel-default">\n                            <div class="panel-heading text-center">\n                                <div class="row">\n                                    <h4 class="box-title" id="Ruc_Empresa"><strong> R.U.C. ', '</strong></h4>\n                                </div>\n                                <div class="row">\n                                    <div class="col-sm-12">\n                                        <div class="form-group">\n                                            <select id="Cod_TipoComprobante" class="form-control selectPalerp" onchange=', '>\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div> \n                                \n                                <div class="row">\n                                    <div class="col-md-6" id="divSerie">\n                                        <div class="form-group" style="display:flex">\n\n                                            <select class="form-control input-sm" id="Serie" onchange=', '>\n                                               \n                                            </select>\n                                            \n                                        </div>\n                                    </div>\n                                    <div class="col-md-6" id="divNumero">\n                                        <div class="form-group">\n                                            <input type=', ' class="form-control input-sm required" id="Numero" onblur=', '>\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-12">\n                        <div class="panel panel-default">\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-sm-6">\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <div class="col-sm-3" id="divContado">\n                                                    <label></label>\n                                                    <div class="radio">\n                                                        <label>\n                                                            <input type="radio" value="contado" id="optCredito" name="optCredito" onchange=', ' checked> Contado\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                                <div class="col-sm-4" id="divCredito" style="display:none">\n                                                    <label></label>\n                                                    <div class="radio">\n                                                        <label>\n                                                            <input type="radio" value="credito" id="optCredito" name="optCredito"  onchange=', '> Credito\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                                <div class="col-sm-1" id="divMultiplesPagos">\n                                                    <label></label>\n                                                    <div class="radio">\n                                                        <button type="button" class="btn btn-success btn-xs" onclick="', '" id="btnMultiplesPagos"><i class="fa fa-money"></i></button>\n                                                    </div>\n                                                </div>\n                                                <div class="col-sm-4" id="divOperacion">\n                                                    <label id="lbCuentaCajaBanco">#Operacion</label>\n                                                    <div class="form-group">\n                                                        <select class="form-control input-sm" id="Cod_CuentaBancaria" onchange=', '> \n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-4" id="divNroDias" style="display:none">\n                                                <div class="form-group">\n                                                    <label>Dias:</label>\n                                                    <input class="form-control input-sm" type="number" id="Nro_Dias" value="0">\n                                                </div>\n                                            </div>\n                                            <div class="col-md-4" id="divFormasPago">\n                                                <div class="form-group">\n                                                    <select class="form-control input-sm" onchange="', '" id="Cod_FormaPago"> \n                                                        ', ' \n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-8" id="divCuentaCajaBancos">\n                                                <div class="form-group" style="display: flex;">\n                                                    <select class="form-control input-sm select-preserve" id="Cuenta_CajaBancos"> \n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-4" id="divLicitacion" style="display:block">\n                                                <div class="checkbox">\n                                                    <label>\n                                                        <input type="checkbox" id="optLicitacion" name="optLicitacion" onchange=', '> Licitacion\n                                                    </label>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-8" id="divCodigoLicitacion" style="display:none">\n                                                <div class="form-group">\n                                                    <select class="form-control input-sm" id="Cod_Licitacion" onchange=', '> \n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-sm-6">\n                                        <div class="row">\n                                            <div class="col-sm-2" id="divEsGastos" style="display: ', '">\n                                                <div class="checkbox"> \n                                                    <input type="checkbox" id="optEsGasto" name="optEsGasto" onchange="', '"> Es Gastos?\n                                                </div>\n                                            </div>\n                                            <div class="col-sm-3" id="divMoneda">\n                                                <div class="form-group">\n                                                    <b>Moneda: </b>\n                                                    <select id="Cod_Moneda" class="form-control input-sm" onchange=', '>\n                                                        ', '\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class="col-sm-3" id="divTC">\n                                                <div class="form-group">\n                                                    <b>T/C: </b>\n                                                    <input class="form-control input-sm" type="number" id="Tipo_Cambio" value="1.00">\n                                                </div>\n                                            </div>\n                                            <div class="col-sm-4" id="divFecha">\n                                                <div class="form-group">\n                                                    <b>Fecha: </b>\n                                                    <input type="date" class="form-control input-sm" id="Fecha" value="', '" onchange=', '>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-sm-12" id="divVendedor">\n                                                <div class="form-group">\n                                                    <b>Vendedor: </b>\n                                                    <select id="Cod_Usuarios" id="" class="form-control input-sm">\n                                                        ', '\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class="row">\n                                            <div class="col-sm-6" id="divGuiaRemision">\n                                                <div class="form-group">\n                                                    <b>Guia de Remision: </b>\n                                                    <div class="input-group input-group-sm">\n                                                        <div class="input-group-btn">\n                                                            <button type="button" class="btn btn-success" id="AgregarGuia"  >\n                                                                <i class="fa fa-plus"></i>\n                                                            </button>\n                                                        </div>\n                                                        <input type="text" id="Guia" class="form-control required input-sm">\n                                                        <div class="input-group-btn">\n                                                            <button type="button" class="btn btn-info" id="BuscarGuia"  >\n                                                                <i class="fa fa-search"></i>\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-6">\n                                                <div class="row" id="divDescargarProducto">\n                                                    <div class="checkbox">\n                                                        <label>\n                                                            <input type="checkbox" id="optDescargar" name="optDescargar" checked="checked" onchange=', '> ', '\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                                <div class="row" id="divExportacion">\n                                                    <div class="checkbox">\n                                                        <label>\n                                                            <input type="checkbox" id="optExportacion" name="optExportacion" onchange=', '> Exportacion ? \n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-12">\n                        <div class="panel panel-default">\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-md-12"> \n                                        <button type="button" class="btn btn-success btn-sm" onclick="', '"><i class="fa fa-plus"></i> Agregar Item</button>\n                                    </div>\n                                </div>\n\n                                <div class="table-responsive">\n                                    <table id="tablaProductos" class="table table-bordered table-hover">\n                                        <thead>\n                                            <tr> \n                                                <th>\n                                                    <div class="input-group">\n                                                        <label>Codigo/Producto/Servicio</label>\n                                                        <span class="input-group-btn">\n                                                            <button type="button" class="btn btn-default btn-xs" onclick=', '><i class="fa fa-search"></i></button>\n                                                        </span>\n                                                    </div>\n                                                </th>\n                                                <th>Almacen</th>\n                                                <th>\n                                                    <div class="input-group">\n                                                        <label>UM</label>\n                                                        <span class="input-group-btn">\n                                                            <button type="button" class="btn btn-default btn-xs"><i class="fa fa-refresh"></i></button>\n                                                        </span>\n                                                    </div>\n                                                </th>\n                                                <th>Cantidad</th>\n                                                <th>Precio</th>\n                                                <th>Desc. %</th>\n                                                <th>Importe</th>\n                                            </tr>\n                                            <tr style="background:bisque"> \n                                                <input class="hidden" id="Cod_Producto" value=null>\n                                                <input class="hidden" id="Cod_TipoOperatividad" value=null>\n                                                <th><input type="text" id="Nom_Producto" data-id=null class="form-control input-sm" onblur=', '></th>\n                                                <th><select class="form-control input-sm" id="Cod_Almacen" onchange="', '"> </select></th>\n                                                <th>\n                                                   <select class="form-control input-sm" id="Cod_UnidadMedida" onchange="', '"> </select>\n                                                </th>\n                                                <th>\n                                                    <div style="display: inline-flex;">\n                                                        <input type="number" class="form-control input-sm" id="Cantidad" value="0.00" onkeypress=', ' onchange=', '>\n                                                        <select class="form-control input-sm" style="display:', ';width: 10%;" id="Cod_TipoPrecio" > </select>\n                                                    </div>\n                                                </th>\n                                                \n                                                <th><input type="number" class="form-control input-sm" id="Precio_Unitario"  value="0.00" onkeypress=', ' onchange=', '></th>\n                                                <th><input type="number" class="form-control input-sm" id="Descuento" value="0.00" ></th>\n                                                <th><input type="number" class="form-control input-sm" id="Importe" value="0.00" onkeypress=', '></th>\n                                            </tr>\n                                        </thead>\n                                    </table>\n                                    <table class="table table-bordered table-hover" id="tablaDetallesComprobante">\n                                        <tbody id="tablaBody">\n                                        </tbody>\n                                    </table>\n\n                                </div>\n\n                            </div>\n                            <div class="panel-footer">\n                                <div class="row">\n                                    <div class="col-md-8">\n                                        <label id="laSON">SON : </label>\n                                    </div>\n                                    <div class="col-md-4">\n                                        <div class="form-group">\n                                            <label for="subtotal" class="col-sm-5 control-label" value="0.00">SUB TOTAL</label>\n                        \n                                            <div class="col-sm-7">\n                                                <input type="text" class="form-control input-sm" id="subtotal" onkeypress=', '>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-5">\n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <div class="checkbox">\n                                                    <label>\n                                                        <input type="checkbox" id="ckbIncluyeIGV" checked="checked" onchange="', '">Precio Unitario Incluye IGV?\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>  \n                                        <div class="row">\n                                            <div class="col-md-4">\n                                                <label>Glosa Contable:</label>\n                                            </div>\n                                            <div class="col-md-8">\n                                                <input type="text" id="Glosa" class="form-control input-sm" value="', '">\n                                            </div>\n                                        </div>  \n                                        <div class="row">\n                                            <div class="col-md-3">\n                                                <label>Placa Vehiculo:</label>\n                                            </div>\n                                            <div class="col-md-3">\n                                                <input type="text" class="form-control input-sm" id="placaVehiculo">\n                                            </div>\n                                            <div class="col-md-3">\n                                                <label>Stock actual:</label>\n                                            </div>\n                                            <div class="col-md-3">\n                                                <input type="text" class="form-control input-sm" id="Stock" onkeypress=', '>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-md-6">\n                                                <button type="button" class="btn btn-success btn-sm btn-block" onclick="', '">Percepcion</button>\n                                            </div>\n                                            <div class="col-md-6">\n                                                <button type="button" class="btn btn-warning btn-sm btn-block" id="btnBuscarSeries" onclick="', '">Buscar Series</button>\n                                            </div>\n                                        </div>  \n                                    </div>\n                                    <div class="col-md-3">\n                                        <div class="form-group">\n                                            <b id="laDescuento" style="display:none">DESC. TOTAL : </b>\n                                            <input type="number"  style="display:none" class="form-control input-sm" value="0.00" id="DescuentoTotal">\n                                        </div>\n                                        <div class="form-group">\n                                            <b id="laExonerado"  style="display:none">EXONERADO </b>\n                                            <input type="number" class="form-control input-sm" style="display:none" value="0.00" id="Exonerado">\n                                        </div>\n                                        <div class="form-group">\n                                            <b id="laGratuitas"  style="display:none">GRATUITAS: </b>\n                                            <input type="number" class="form-control input-sm" style="display:none" value="0.00" id="Gratuitas">\n                                        </div>\n                                        <div class="form-group">\n                                            <b id="laPercepcion"  style="display:none">PERCEPCION: </b>\n                                            <input type="number"  style="display:none" class="form-control input-sm" value="0.00" id="Percepcion">\n                                        </div>\n                                    </div>\n                                    <div class="col-md-4">\n                                        <div class="form-group" id="divAplicaImpuesto">\n                                            <label>\n                                                <input type="checkbox" id="ckbAplicaImpuesto" ', '> I.G.V 18%\n                                            </label>\n                                            <input type="text" class="form-control input-sm" value="0.00" id="Impuesto" onkeypress=', '>\n                                        </div>\n                                        <div class="form-group">\n                                            <label>\n                                                <input type="checkbox" id="cbAplicaServicios"  checked="checked"> SERVICIOS\n                                            </label>\n                                            <input type="number" class="form-control input-sm" value="0.00" id="OtrosCargos" onkeypress=', ' onchange=', '>\n                                        </div>\n                                        <div class="form-group" style="display:none">\n                                            <label>\n                                                <input type="checkbox"  checked="checked"> I.S.C 3%\n                                            </label>\n                                            <input type="number" class="form-control input-sm" value="0.00" id="Servicios">\n                                        </div>\n                                        <div class="form-group">\n                                            <strong>DESCUENTO GLOBAL</strong>\n                                            <input type="number" class="form-control input-sm" value="0.00" id="Descuento_Global" onkeypress=', ' onchange=', '>\n                                        </div>\n                                        <div class="form-group">\n                                            <strong>GRAN TOTAL</strong>\n                                            <input type="text" class="form-control input-sm" id="Gran_Total" value="0.00" onkeypress=', '>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row text-center">\n                                    <div class="col-md-12">\n                                        <h4><strong id="DescripcionDespachado"></strong></h4>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    \n            <div class="modal-footer">\n                <button class="btn btn-primary" id="btnAceptarGenerarComprobante" onclick=', '>', '</button>\n                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar</button>\n            </div>\n        </div>\n    </div>']),
    _templateObject2 = _taggedTemplateLiteral(['<option style="text-transform:uppercase" value="', '" ', '>', '</option>'], ['<option style="text-transform:uppercase" value="', '" ', '>', '</option>']),
    _templateObject3 = _taggedTemplateLiteral([''], ['']),
    _templateObject4 = _taggedTemplateLiteral(['<option style="text-transform:uppercase" value="', '">', '</option>'], ['<option style="text-transform:uppercase" value="', '">', '</option>']),
    _templateObject5 = _taggedTemplateLiteral(['<option style="text-transform:uppercase" value="', '"  >', '</option>'], ['<option style="text-transform:uppercase" value="', '"  >', '</option>']),
    _templateObject6 = _taggedTemplateLiteral(['\n        <div class="modal-dialog modal-lg">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Formas de Pago</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row" id="divCreditoFormasPago">\n                     \n                    <div class="btn-group-toggle" data-toggle="buttons">\n                     <label class="btn btn-success">\n                       <input type="checkbox" checked autocomplete="off" id="btnCreditoFormaPagoHeader"  onchange=', '> Credito\n                     </label>\n                    </div>\n\n \n                    </div>\n                    <p></p>\n                    <div class="row">\n                        <div class="col-sm-3">\n \n                            ', ' \n                        </div>\n                        <div class="col-sm-9">\n                           \n                            <div class="row"> \n                                    <div class="cc-selector-2 text-center row" id="divTarjetas"> \n                                        <label> Tarjetas </label>\n                                        ', '\n                                    </div> \n                            </div>\n                            \n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-md-8">\n                            <div class="box box-default">\n                                <div class="box-header">\n                                    <h4>Agregar Formas de Pago</h4>\n                                </div>\n                                <div class="box-body">\n                                    <div class="col-md-4">\n                                        <div class="form-group">\n                                            <label>Monto</label>\n                                            <input type="number" class="form-control" value="0.00" id="MontoFormaPago">\n                                        </div>\n                                    </div>\n                                    <div class="col-md-8">\n                                        <div class="row">\n                                            <div class="col-md-6" id="divReferencia">\n                                                <div class="form-group">\n                                                    <label>Referencia</label>\n                                                    <input type="text" class="form-control" id="ReferenciaFormaPago">\n                                                </div>\n                                            </div>\n                                            <div class="col-md-6" id="divCompSaldo">\n                                                <div class="form-group">\n                                                    <button class="btn btn-default btn-sm" onclick=', ' id="btnCompletarSaldo">Comp. Saldo</button>\n                                                </div>\n                                            </div>\n                                        </div> \n                                        <div class="row">\n                                            <div class="col-md-6" id="divTipoCambio">\n                                                <div class="form-group">\n                                                    <label>T/C</label>\n                                                    <input type="number" class="form-control" data-value=null id="Tipo_Cambio_FormaPago">\n                                                </div>\n                                            </div>\n                                            <div class="col-md-6">\n                                                <div class="form-group">\n                                                    <button class="btn btn-default btn-sm" id="btnAgregarMontoFormaPago" onclick=', '>Agregar</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                     \n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-md-4">\n                            <div class="box box-default">\n                                <div class="box-header">\n                                    <h4>Datos del Comprobante</h4>\n                                </div>\n                                <div class="box-body"> \n                                    <div class="col-md-12"> \n                                        <div class="row" id="divCodMonedaGlobal">\n                                            <div class="col-md-12">\n                                                <div class="form-group">\n                                                    <label>Moneda</label>\n                                                    <label type="text" class="form-control" id="Cod_MonedaGlobal"></label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="row" id="divTipoCambioGlobal">\n                                            <div class="col-md-12">\n                                                <div class="form-group">\n                                                    <label>T/C</label>\n                                                    <input type="number" class="form-control" id="Tipo_Cambio_Global" onkeypress=', '>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div> \n                                </div>\n                            </div>\n                        </div> \n                    </div>\n                    <div class="row">\n                        <div class="box box-default">\n                            <div class="box-body"> \n                                <div class="table-responsive" id="contenedorPagosMultiples">\n                                <table id="tablaPagosMultiples" class="table table-bordered table-striped">\n                                    <thead>\n                                        <tr>\n                                            <th>Tipo</th>\n                                            <th>Moneda</th> \n                                            <th>Monto</th>\n                                            <th>T/C en S</th>\n                                            <th>T/C Equi</th>\n                                            <th>Total</th>\n                                            <th>Fecha</th>\n                                            <th># Ref.</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody id="tablaBodyPagosMultiples">\n                                            ', '\n                                    </tbody>\n                                </table>\n                                </div>\n                            </div>\n                            <div class="box-footer">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <div class="col-md-4 col-md-offset-8">\n                                            <div class="col-md-6">\n                                                <div class="form-group">\n                                                    <button class="btn btn-success" id="btnSaldo" data-value="', '">', '</button>\n                                                </div>   \n                                            </div>\n                                            <div class="col-md-6">\n                                                <button class="btn btn-danger" id="btnTotal">TOTAL </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer">\n                    <button class="btn btn-info" onclick="', '" id="btnAceptarFormaPago">Aceptar</button>\n                    <button type="button" data-dismiss="modal" class="btn btn-danger pull-right">Cancelar</button>\n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog modal-lg">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Formas de Pago</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row" id="divCreditoFormasPago">\n                     \n                    <div class="btn-group-toggle" data-toggle="buttons">\n                     <label class="btn btn-success">\n                       <input type="checkbox" checked autocomplete="off" id="btnCreditoFormaPagoHeader"  onchange=', '> Credito\n                     </label>\n                    </div>\n\n \n                    </div>\n                    <p></p>\n                    <div class="row">\n                        <div class="col-sm-3">\n \n                            ', ' \n                        </div>\n                        <div class="col-sm-9">\n                           \n                            <div class="row"> \n                                    <div class="cc-selector-2 text-center row" id="divTarjetas"> \n                                        <label> Tarjetas </label>\n                                        ', '\n                                    </div> \n                            </div>\n                            \n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-md-8">\n                            <div class="box box-default">\n                                <div class="box-header">\n                                    <h4>Agregar Formas de Pago</h4>\n                                </div>\n                                <div class="box-body">\n                                    <div class="col-md-4">\n                                        <div class="form-group">\n                                            <label>Monto</label>\n                                            <input type="number" class="form-control" value="0.00" id="MontoFormaPago">\n                                        </div>\n                                    </div>\n                                    <div class="col-md-8">\n                                        <div class="row">\n                                            <div class="col-md-6" id="divReferencia">\n                                                <div class="form-group">\n                                                    <label>Referencia</label>\n                                                    <input type="text" class="form-control" id="ReferenciaFormaPago">\n                                                </div>\n                                            </div>\n                                            <div class="col-md-6" id="divCompSaldo">\n                                                <div class="form-group">\n                                                    <button class="btn btn-default btn-sm" onclick=', ' id="btnCompletarSaldo">Comp. Saldo</button>\n                                                </div>\n                                            </div>\n                                        </div> \n                                        <div class="row">\n                                            <div class="col-md-6" id="divTipoCambio">\n                                                <div class="form-group">\n                                                    <label>T/C</label>\n                                                    <input type="number" class="form-control" data-value=null id="Tipo_Cambio_FormaPago">\n                                                </div>\n                                            </div>\n                                            <div class="col-md-6">\n                                                <div class="form-group">\n                                                    <button class="btn btn-default btn-sm" id="btnAgregarMontoFormaPago" onclick=', '>Agregar</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                     \n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-md-4">\n                            <div class="box box-default">\n                                <div class="box-header">\n                                    <h4>Datos del Comprobante</h4>\n                                </div>\n                                <div class="box-body"> \n                                    <div class="col-md-12"> \n                                        <div class="row" id="divCodMonedaGlobal">\n                                            <div class="col-md-12">\n                                                <div class="form-group">\n                                                    <label>Moneda</label>\n                                                    <label type="text" class="form-control" id="Cod_MonedaGlobal"></label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="row" id="divTipoCambioGlobal">\n                                            <div class="col-md-12">\n                                                <div class="form-group">\n                                                    <label>T/C</label>\n                                                    <input type="number" class="form-control" id="Tipo_Cambio_Global" onkeypress=', '>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div> \n                                </div>\n                            </div>\n                        </div> \n                    </div>\n                    <div class="row">\n                        <div class="box box-default">\n                            <div class="box-body"> \n                                <div class="table-responsive" id="contenedorPagosMultiples">\n                                <table id="tablaPagosMultiples" class="table table-bordered table-striped">\n                                    <thead>\n                                        <tr>\n                                            <th>Tipo</th>\n                                            <th>Moneda</th> \n                                            <th>Monto</th>\n                                            <th>T/C en S</th>\n                                            <th>T/C Equi</th>\n                                            <th>Total</th>\n                                            <th>Fecha</th>\n                                            <th># Ref.</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody id="tablaBodyPagosMultiples">\n                                            ', '\n                                    </tbody>\n                                </table>\n                                </div>\n                            </div>\n                            <div class="box-footer">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <div class="col-md-4 col-md-offset-8">\n                                            <div class="col-md-6">\n                                                <div class="form-group">\n                                                    <button class="btn btn-success" id="btnSaldo" data-value="', '">', '</button>\n                                                </div>   \n                                            </div>\n                                            <div class="col-md-6">\n                                                <button class="btn btn-danger" id="btnTotal">TOTAL </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer">\n                    <button class="btn btn-info" onclick="', '" id="btnAceptarFormaPago">Aceptar</button>\n                    <button type="button" data-dismiss="modal" class="btn btn-danger pull-right">Cancelar</button>\n                </div>\n            </div>\n        </div>']),
    _templateObject7 = _taggedTemplateLiteral(['\n                                ', '\n                            '], ['\n                                ', '\n                            ']),
    _templateObject8 = _taggedTemplateLiteral(['<div class="form-group">\n                                            <label>Moneda</label> \n                                            <select id=\'Cod_Moneda_Forma_Pago\' class="form-control" onchange=', '>\n                                                ', '\n                                            </select>\n                                        </div>'], ['<div class="form-group">\n                                            <label>Moneda</label> \n                                            <select id=\'Cod_Moneda_Forma_Pago\' class="form-control" onchange=', '>\n                                                ', '\n                                            </select>\n                                        </div>']),
    _templateObject9 = _taggedTemplateLiteral(['<option value=', '>', '</option>'], ['<option value=', '>', '</option>']),
    _templateObject10 = _taggedTemplateLiteral(['\n                                            ', '\n                                        '], ['\n                                            ', '\n                                        ']),
    _templateObject11 = _taggedTemplateLiteral(['\n                                                    <div class="col-md-3 col-md-offset-3">\n                                                        <input  checked="checked" id="Cod_FormaPago_MasterCard" type="radio" name="Cod_FormaPago_Modal" value="mastercard"  onchange=', '/>\n                                                        <label class="drinkcard-cc mastercard" for="Cod_FormaPago_Modal"></label>\n                                                    </div>'], ['\n                                                    <div class="col-md-3 col-md-offset-3">\n                                                        <input  checked="checked" id="Cod_FormaPago_MasterCard" type="radio" name="Cod_FormaPago_Modal" value="mastercard"  onchange=', '/>\n                                                        <label class="drinkcard-cc mastercard" for="Cod_FormaPago_Modal"></label>\n                                                    </div>']),
    _templateObject12 = _taggedTemplateLiteral(['\n                                                    <div class="col-md-3">\n                                                        <input  checked="checked" id="Cod_FormaPago_Visa" type="radio" name="Cod_FormaPago_Modal" value="visa" onchange=', '/>\n                                                        <label class="drinkcard-cc visa"for="Cod_FormaPago_Modal"></label>\n                                                    </div>'], ['\n                                                    <div class="col-md-3">\n                                                        <input  checked="checked" id="Cod_FormaPago_Visa" type="radio" name="Cod_FormaPago_Modal" value="visa" onchange=', '/>\n                                                        <label class="drinkcard-cc visa"for="Cod_FormaPago_Modal"></label>\n                                                    </div>']),
    _templateObject13 = _taggedTemplateLiteral(['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Percepcion</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="form-group">\n                                <b>Ingrese el porcentaje a aplicar: </b>\n                                <input type="number" class="form-control input-sm" id="PorcentajePercepcion">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnAceptar" onclick="', '">Aceptar</button>\n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Percepcion</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="form-group">\n                                <b>Ingrese el porcentaje a aplicar: </b>\n                                <input type="number" class="form-control input-sm" id="PorcentajePercepcion">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnAceptar" onclick="', '">Aceptar</button>\n                </div>\n            </div>\n        </div>']),
    _templateObject14 = _taggedTemplateLiteral([' \n                <tbody id="tablaBody">\n                    ', '\n                </tbody>'], [' \n                <tbody id="tablaBody">\n                    ', '\n                </tbody>']),
    _templateObject15 = _taggedTemplateLiteral(['\n                            <tr id="', '">\n                                <td class="id_ComprobantePago hidden"><input value=', '></td>\n                                <td class="id_Detalle hidden"><input value=', '></td> \n                                <td class="Id_Producto hidden"><input value=', '></td> \n                                <td class="Codigo hidden">', '</td>\n                                <td class="Descripcion" style="width: 24%;"><input type="text" class="form-control input-sm" value=', '></td>\n                                <td class="Almacen"><input type="text" class="form-control input-sm" data-id=', ' value=', '></td> \n                                <td class="UM"><input type="text" class="form-control input-sm" data-id=', ' value=', '></td>\n                                <td class="Stock hidden"><input type="number" class="form-control input-sm" value=', '></td> \n                                <td class="Cantidad"><input type="number" class="form-control input-sm" value=', ' onkeyup=', ' onchange=', '></td> \n                                <td class="Despachado hidden">', '</td> \n                                <td class="PU"><input type="number" class="form-control input-sm" data-value=', ' value=', ' onkeyup=', ' onchange=', '></td> \n                                <td class="Descuento"><input type="number" style=', ' data-value=', ' class="form-control input-sm" value=', ' onkeyup=', ' onchange=', ' ></td> \n                                <td class="Importe"><input type="number" class="form-control input-sm" value=', '></td>\n                                <td class="Cod_Manguera hidden">', '</td>  \n                                <td class="Tipo hidden">', '</td> \n                                <td class="Obs_ComprobanteD hidden">', '</td> \n                                <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n                                <td>\n                                <div style="display:flex;">\n                                    <button type="button" onclick="', '" class="btn btn-primary btn-sm"><i class="fa fa-tasks"></i></a>  \n                                    <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n                                </div>\n                                </td>\n                            </tr>'], ['\n                            <tr id="', '">\n                                <td class="id_ComprobantePago hidden"><input value=', '></td>\n                                <td class="id_Detalle hidden"><input value=', '></td> \n                                <td class="Id_Producto hidden"><input value=', '></td> \n                                <td class="Codigo hidden">', '</td>\n                                <td class="Descripcion" style="width: 24%;"><input type="text" class="form-control input-sm" value=', '></td>\n                                <td class="Almacen"><input type="text" class="form-control input-sm" data-id=', ' value=', '></td> \n                                <td class="UM"><input type="text" class="form-control input-sm" data-id=', ' value=', '></td>\n                                <td class="Stock hidden"><input type="number" class="form-control input-sm" value=', '></td> \n                                <td class="Cantidad"><input type="number" class="form-control input-sm" value=', ' onkeyup=', ' onchange=', '></td> \n                                <td class="Despachado hidden">', '</td> \n                                <td class="PU"><input type="number" class="form-control input-sm" data-value=', ' value=', ' onkeyup=', ' onchange=', '></td> \n                                <td class="Descuento"><input type="number" style=', ' data-value=', ' class="form-control input-sm" value=', ' onkeyup=', ' onchange=', ' ></td> \n                                <td class="Importe"><input type="number" class="form-control input-sm" value=', '></td>\n                                <td class="Cod_Manguera hidden">', '</td>  \n                                <td class="Tipo hidden">', '</td> \n                                <td class="Obs_ComprobanteD hidden">', '</td> \n                                <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n                                <td>\n                                <div style="display:flex;">\n                                    <button type="button" onclick="', '" class="btn btn-primary btn-sm"><i class="fa fa-tasks"></i></a>  \n                                    <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n                                </div>\n                                </td>\n                            </tr>']),
    _templateObject16 = _taggedTemplateLiteral(['\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"> Confirmacion </h4>\n            </div>\n            <div class="modal-body">\n                <p>Esta seguro que desea guardar este comprobante?</p>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                <button type="button" class="btn btn-primary" onclick=', '>Aceptar</button>\n            </div>\n        </div>\n        <!-- /.modal-content -->\n    </div>'], ['\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"> Confirmacion </h4>\n            </div>\n            <div class="modal-body">\n                <p>Esta seguro que desea guardar este comprobante?</p>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                <button type="button" class="btn btn-primary" onclick=', '>Aceptar</button>\n            </div>\n        </div>\n        <!-- /.modal-content -->\n    </div>']),
    _templateObject17 = _taggedTemplateLiteral(['\n        <tr id="', '">\n            <td class="id_ComprobantePago hidden"><input value="0"></td>\n            <td class="id_Detalle hidden"><input value="', '"></td> \n            <td class="Id_Producto hidden"><input value="0"></td> \n            <td class="Codigo hidden"></td>\n            <td class="Descripcion" style="width: 24%;"><input type="text" class="form-control input-sm" value="', '"></td>\n            <td class="Almacen"><input type="text" class="form-control input-sm" data-id=null value=\'\'></td> \n            <td class="UM"><input type="text" class="form-control input-sm" data-id=null value=\'\'></td>\n            <td class="Stock hidden"><input type="number" class="form-control input-sm" value=0></td> \n            <td class="Cantidad"><input type="number" class="form-control input-sm" value=1 onkeyup=', ' onchange=', '></td> \n            <td class="Despachado hidden">1</td> \n            <td class="PU"><input type="number" data-value=0 class="form-control input-sm" value=', ' onkeyup=', ' onchange=', '></td> \n            <td class="Descuento"><input type="number" data-value=0 class="form-control input-sm" value=0.00 onkeyup=', ' onchange=', ' ></td> \n            <td class="Importe"><input type="number" class="form-control input-sm" value=', '></td>\n            <td class="Cod_Manguera hidden"></td>  \n            <td class="Tipo hidden">NGR</td> \n            <td class="Obs_ComprobanteD hidden"></td> \n            <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n            <td>\n            <div style="display:flex;">\n                <button type="button" onclick="', '" class="btn btn-primary btn-sm"><i class="fa fa-tasks"></i></a>  \n                <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n            </div>\n            </td>\n        </tr>'], ['\n        <tr id="', '">\n            <td class="id_ComprobantePago hidden"><input value="0"></td>\n            <td class="id_Detalle hidden"><input value="', '"></td> \n            <td class="Id_Producto hidden"><input value="0"></td> \n            <td class="Codigo hidden"></td>\n            <td class="Descripcion" style="width: 24%;"><input type="text" class="form-control input-sm" value="', '"></td>\n            <td class="Almacen"><input type="text" class="form-control input-sm" data-id=null value=\'\'></td> \n            <td class="UM"><input type="text" class="form-control input-sm" data-id=null value=\'\'></td>\n            <td class="Stock hidden"><input type="number" class="form-control input-sm" value=0></td> \n            <td class="Cantidad"><input type="number" class="form-control input-sm" value=1 onkeyup=', ' onchange=', '></td> \n            <td class="Despachado hidden">1</td> \n            <td class="PU"><input type="number" data-value=0 class="form-control input-sm" value=', ' onkeyup=', ' onchange=', '></td> \n            <td class="Descuento"><input type="number" data-value=0 class="form-control input-sm" value=0.00 onkeyup=', ' onchange=', ' ></td> \n            <td class="Importe"><input type="number" class="form-control input-sm" value=', '></td>\n            <td class="Cod_Manguera hidden"></td>  \n            <td class="Tipo hidden">NGR</td> \n            <td class="Obs_ComprobanteD hidden"></td> \n            <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n            <td>\n            <div style="display:flex;">\n                <button type="button" onclick="', '" class="btn btn-primary btn-sm"><i class="fa fa-tasks"></i></a>  \n                <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n            </div>\n            </td>\n        </tr>']),
    _templateObject18 = _taggedTemplateLiteral(['\n                <tr id="', '">\n                    <td class="id_ComprobantePago hidden"><input value="0"></td>\n                    <td class="id_Detalle hidden"><input value="', '"></td> \n                    <td class="Id_Producto hidden"><input value="', '"></td> \n                    <td class="Codigo hidden">', '</td>\n                    <td class="Descripcion" style="width: 24%;"><input type="text" class="form-control input-sm" value="', '"></td>\n                    <td class="Almacen"><input type="text" class="form-control input-sm" data-id=', ' value=', '></td> \n                    <td class="UM"><input type="text" class="form-control input-sm" data-id=', ' value=', '></td>\n                    <td class="Stock hidden"><input type="number" class="form-control input-sm" value=', '></td> \n                    <td class="Cantidad"><input type="number" class="form-control input-sm" value=', ' onkeyup=', ' onchange=', '></td> \n                    <td class="Despachado hidden">', '</td> \n                    <td class="PU"><input type="number" data-value=', ' class="form-control input-sm" value=', ' onkeyup=', ' onchange=', '></td> \n                    <td class="Descuento"><input type="number" data-value=0 class="form-control input-sm" value=', ' onkeyup=', ' onchange=', ' ></td> \n                    <td class="Importe"><input type="number" class="form-control input-sm" value=', '></td>\n                    <td class="Cod_Manguera hidden">', '</td>  \n                    <td class="Tipo hidden">', '</td> \n                    <td class="Obs_ComprobanteD hidden"></td> \n                    <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n                    <td>\n                    <div style="display:flex;">\n                        <button type="button" onclick="', '" class="btn btn-primary btn-sm"><i class="fa fa-tasks"></i></a>  \n                        <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n                    </div>\n                    </td>\n                </tr>'], ['\n                <tr id="', '">\n                    <td class="id_ComprobantePago hidden"><input value="0"></td>\n                    <td class="id_Detalle hidden"><input value="', '"></td> \n                    <td class="Id_Producto hidden"><input value="', '"></td> \n                    <td class="Codigo hidden">', '</td>\n                    <td class="Descripcion" style="width: 24%;"><input type="text" class="form-control input-sm" value="', '"></td>\n                    <td class="Almacen"><input type="text" class="form-control input-sm" data-id=', ' value=', '></td> \n                    <td class="UM"><input type="text" class="form-control input-sm" data-id=', ' value=', '></td>\n                    <td class="Stock hidden"><input type="number" class="form-control input-sm" value=', '></td> \n                    <td class="Cantidad"><input type="number" class="form-control input-sm" value=', ' onkeyup=', ' onchange=', '></td> \n                    <td class="Despachado hidden">', '</td> \n                    <td class="PU"><input type="number" data-value=', ' class="form-control input-sm" value=', ' onkeyup=', ' onchange=', '></td> \n                    <td class="Descuento"><input type="number" data-value=0 class="form-control input-sm" value=', ' onkeyup=', ' onchange=', ' ></td> \n                    <td class="Importe"><input type="number" class="form-control input-sm" value=', '></td>\n                    <td class="Cod_Manguera hidden">', '</td>  \n                    <td class="Tipo hidden">', '</td> \n                    <td class="Obs_ComprobanteD hidden"></td> \n                    <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n                    <td>\n                    <div style="display:flex;">\n                        <button type="button" onclick="', '" class="btn btn-primary btn-sm"><i class="fa fa-tasks"></i></a>  \n                        <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n                    </div>\n                    </td>\n                </tr>']),
    _templateObject19 = _taggedTemplateLiteral(['\n                <tr id="', '">\n                    <td class="id_ComprobantePago hidden"><input value="0"></td>\n                    <td class="id_Detalle hidden"><input value="0"></td> \n                    <td class="Id_Producto hidden"><input value="0"></td> \n                    <td class="Codigo hidden"></td>\n                    <td class="Descripcion" style="width: 24%;"><input type="text" class="form-control input-sm" value="PERCEPCION ', ' : ', ' - ', '"></td>\n                    <td class="Almacen"><input type="text" class="form-control input-sm" data-id=null></td> \n                    <td class="UM"><input type="text" class="form-control input-sm" data-id=null></td>\n                    <td class="Stock hidden"><input type="number" class="form-control input-sm" value="1"></td> \n                    <td class="Cantidad"><input type="number" class="form-control input-sm" value="1"></td> \n                    <td class="Despachado hidden">1</td> \n                    <td class="PU"><input type="number" class="form-control input-sm" value="', '" data-value=0></td> \n                    <td class="Descuento"><input type="number" class="form-control input-sm" value="0.00" data-value=0></td> \n                    <td class="Importe"><input type="number" class="form-control input-sm" value="', '"></td>\n                    <td class="Cod_Manguera hidden"></td>  \n                    <td class="Tipo hidden">PER</td> \n                    <td class="Obs_ComprobanteD hidden"></td> \n                    <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n                    <ul class="dropdown-menu"> \n                        <li><a href="javascript:void(0)" onclick="', '">Asignar Serie</a></li>\n                        <li><a href="javascript:void(0)" onclick="', '"><i class="fa fa-close"></i> Eliminar</a></li>\n                    </ul>\n                </tr>'], ['\n                <tr id="', '">\n                    <td class="id_ComprobantePago hidden"><input value="0"></td>\n                    <td class="id_Detalle hidden"><input value="0"></td> \n                    <td class="Id_Producto hidden"><input value="0"></td> \n                    <td class="Codigo hidden"></td>\n                    <td class="Descripcion" style="width: 24%;"><input type="text" class="form-control input-sm" value="PERCEPCION ', ' : ', ' - ', '"></td>\n                    <td class="Almacen"><input type="text" class="form-control input-sm" data-id=null></td> \n                    <td class="UM"><input type="text" class="form-control input-sm" data-id=null></td>\n                    <td class="Stock hidden"><input type="number" class="form-control input-sm" value="1"></td> \n                    <td class="Cantidad"><input type="number" class="form-control input-sm" value="1"></td> \n                    <td class="Despachado hidden">1</td> \n                    <td class="PU"><input type="number" class="form-control input-sm" value="', '" data-value=0></td> \n                    <td class="Descuento"><input type="number" class="form-control input-sm" value="0.00" data-value=0></td> \n                    <td class="Importe"><input type="number" class="form-control input-sm" value="', '"></td>\n                    <td class="Cod_Manguera hidden"></td>  \n                    <td class="Tipo hidden">PER</td> \n                    <td class="Obs_ComprobanteD hidden"></td> \n                    <td class="Series hidden"><input class="form-control" type="text" value=', ' name="Series"></td>\n                    <ul class="dropdown-menu"> \n                        <li><a href="javascript:void(0)" onclick="', '">Asignar Serie</a></li>\n                        <li><a href="javascript:void(0)" onclick="', '"><i class="fa fa-close"></i> Eliminar</a></li>\n                    </ul>\n                </tr>']),
    _templateObject20 = _taggedTemplateLiteral(['\n    <tr id="FP', '">\n        <td name="Tipo" data-id="', '" class="Tipo">', '</td>\n        <td name="Cod_Moneda" class="Cod_Moneda"> ', ' </td>\n        <td class="Monto">', '</td>\n        <td name="TipoCambio" class="TipoCambio">', '</td>\n        <td name="TipoCambioEquivalente" class="TipoCambioEquivalente">', '</td>\n        <td name="Total" class="Total" data-value="', '">', '</td>\n        <td name="Fecha" class="Fecha"><input type="date" class="form-control input-sm" value="', '"></td>\n        <td name="Referencia" class="Referencia"><input class="form-control input-sm" value="', '"></td>\n        <td><button type="button" class="btn btn-danger btn-sm" onclick=', '><i class="fa fa-trash"></i></button></td>\n    </tr>'], ['\n    <tr id="FP', '">\n        <td name="Tipo" data-id="', '" class="Tipo">', '</td>\n        <td name="Cod_Moneda" class="Cod_Moneda"> ', ' </td>\n        <td class="Monto">', '</td>\n        <td name="TipoCambio" class="TipoCambio">', '</td>\n        <td name="TipoCambioEquivalente" class="TipoCambioEquivalente">', '</td>\n        <td name="Total" class="Total" data-value="', '">', '</td>\n        <td name="Fecha" class="Fecha"><input type="date" class="form-control input-sm" value="', '"></td>\n        <td name="Referencia" class="Referencia"><input class="form-control input-sm" value="', '"></td>\n        <td><button type="button" class="btn btn-danger btn-sm" onclick=', '><i class="fa fa-trash"></i></button></td>\n    </tr>']),
    _templateObject21 = _taggedTemplateLiteral(['\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"> Confirmacion </h4>\n            </div>\n            <div class="modal-body">\n                <p>Esta Seguro que desea asignar el credito</p>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                <button type="button" class="btn btn-primary" id="btnConfirmacion" onclick=', '>Aceptar</button>\n            </div>\n        </div>\n        <!-- /.modal-content -->\n    </div>'], ['\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"> Confirmacion </h4>\n            </div>\n            <div class="modal-body">\n                <p>Esta Seguro que desea asignar el credito</p>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                <button type="button" class="btn btn-primary" id="btnConfirmacion" onclick=', '>Aceptar</button>\n            </div>\n        </div>\n        <!-- /.modal-content -->\n    </div>']),
    _templateObject22 = _taggedTemplateLiteral(['<table id="tablaPagosMultiples" class="table table-bordered table-striped">\n                    <thead>\n                        <tr>\n                            <th>Tipo</th>\n                            <th>Moneda</th> \n                            <th>Monto</th>\n                            <th>T/C en S</th>\n                            <th>T/C Equi</th>\n                            <th>Total</th>\n                            <th>Fecha</th>\n                            <th># Ref.</th>\n                        </tr>\n                    </thead>\n                    <tbody id="tablaBodyPagosMultiples">\n                        ', '\n                    </tbody>\n                </table>'], ['<table id="tablaPagosMultiples" class="table table-bordered table-striped">\n                    <thead>\n                        <tr>\n                            <th>Tipo</th>\n                            <th>Moneda</th> \n                            <th>Monto</th>\n                            <th>T/C en S</th>\n                            <th>T/C Equi</th>\n                            <th>Total</th>\n                            <th>Fecha</th>\n                            <th># Ref.</th>\n                        </tr>\n                    </thead>\n                    <tbody id="tablaBodyPagosMultiples">\n                        ', '\n                    </tbody>\n                </table>']),
    _templateObject23 = _taggedTemplateLiteral(['\n                                <tr id="FP', '">\n                                    <td name="Tipo" data-id="', '" class="Tipo">', '</td>\n                                    <td name="Cod_Moneda" class="Cod_Moneda"> ', ' </td>\n                                    <td class="Monto">', '</td>\n                                    <td name="TipoCambio" class="TipoCambio">', '</td>\n                                    <td name="TipoCambioEquivalente" class="TipoCambioEquivalente">', '</td>\n                                    <td name="Total" class="Total" data-value="', '">', '</td>\n                                    <td name="Fecha" class="Fecha"><input type="date" class="form-control input-sm" value="', '"></td>\n                                    <td name="Referencia" class="Referencia"><input  class="form-control input-sm" value="', '"></td>\n                                    <td><button type="button" class="btn btn-danger btn-sm" onclick=', '><i class="fa fa-trash"></i></button></td>\n                                </tr>'], ['\n                                <tr id="FP', '">\n                                    <td name="Tipo" data-id="', '" class="Tipo">', '</td>\n                                    <td name="Cod_Moneda" class="Cod_Moneda"> ', ' </td>\n                                    <td class="Monto">', '</td>\n                                    <td name="TipoCambio" class="TipoCambio">', '</td>\n                                    <td name="TipoCambioEquivalente" class="TipoCambioEquivalente">', '</td>\n                                    <td name="Total" class="Total" data-value="', '">', '</td>\n                                    <td name="Fecha" class="Fecha"><input type="date" class="form-control input-sm" value="', '"></td>\n                                    <td name="Referencia" class="Referencia"><input  class="form-control input-sm" value="', '"></td>\n                                    <td><button type="button" class="btn btn-danger btn-sm" onclick=', '><i class="fa fa-trash"></i></button></td>\n                                </tr>']);

var _constantes = require('../../../constantes_entorno/constantes');

var _modales = require('../../modales');

var _series = require('../../modales/series');

var _pdf = require('../../modales/pdf');

var _tools = require('../../../../utility/tools');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');


var listaFormaPago = [];
var arrayValidacion = [null, 'null', ''];
var obs_xml = null;
var aSaldo = 0;
var aMonto = 0;
var contador = 0;
var contadorPercepcion = 0;
var idFilaSeleccionadaSerie = 0;
var CodTipoOperacion = '01';
var pCodTipoComprobanteUltimo = '';

function VerRegistroComprobante(variables, fecha_actual, CodLibro, CodTipoOperacion, Cliente, Detalles) {

    CodTipoOperacion = CodTipoOperacion;
    listaFormaPago = [];
    obs_xml = null;
    aMonto = 0;
    idFilaSeleccionadaSerie = 0;
    global.objCliente = Cliente ? Cliente : '';
    global.objProducto = '';
    global.arraySeries = '';
    contador = 0;
    contadorPercepcion = 0;
    pCodTipoComprobanteUltimo = '';
    var el = yo(_templateObject, CodLibro == '08' ? 'REGISTRO DE COMPRAS' : 'REGISTRO DE VENTAS', function () {
        return CambioTipoDocumento();
    }, variables.documentos.map(function (e) {
        return yo(_templateObject2, e.Cod_TipoDoc, Cliente ? Cliente.Cod_TipoDocumento == e.Cod_TipoDoc ? 'selected' : '' : '', e.Nom_TipoDoc);
    }), function () {
        return BuscarClienteDoc(CodLibro);
    }, function () {
        return KeyPressClienteDoc();
    }, Cliente ? Cliente.Nro_Documento : '', function () {
        return AbrirModalObsComprobantePago();
    }, function () {
        return (0, _modales.NuevoCliente)(variables.documentos);
    }, Cliente ? Cliente.Id_ClienteProveedor : null, Cliente ? Cliente.Cliente : '', function () {
        return (0, _modales.BuscarCliente)("Cliente", "Nro_Documento", CodLibro == "08" ? "001" : "002");
    }, Cliente ? Cliente.Direccion : '', variables.empresa.RUC, function () {
        return CargarSeries(CodLibro);
    }, variables.tipocomprobantes.map(function (e) {
        return CodLibro == '08' && e.Flag_Compras == true ? AgregarTipoComprobante(e) : CodLibro == '14' && e.Flag_Ventas == true ? AgregarTipoComprobante(e) : yo(_templateObject3);
    }), function () {
        return TraerSiguienteNumero(CodLibro);
    }, CodLibro == '08' ? "number" : "text", function () {
        return CambioNumero();
    }, function () {
        return CambioCreditoContado();
    }, function () {
        return CambioCreditoContado();
    }, function () {
        return AbrirModalFormasPago(variables, fecha_actual);
    }, function () {
        return CambioCodCuentaBancaria(CodLibro);
    }, function () {
        return CambioFormasPago(CodLibro);
    }, variables.formaspago.map(function (e) {
        return yo(_templateObject4, e.Cod_FormaPago, e.Nom_FormaPago);
    }), function () {
        return CambioLicitacion();
    }, function () {
        return CambioSelectLicitacion(CodLibro, variables);
    }, CodLibro == '08' ? 'block' : 'none', function () {
        return CambioGastos();
    }, function () {
        return CambioMoneda(CodLibro);
    }, variables.monedas.map(function (e) {
        return yo(_templateObject4, e.Cod_Moneda, e.Nom_Moneda);
    }), fecha_actual, function () {
        return TraerTipoCambio(CodLibro);
    }, variables.usuarios.map(function (e) {
        return yo(_templateObject5, e.Cod_Usuarios, e.Nick);
    }), function () {
        return CambioDespachado();
    }, CodLibro == '08' ? 'Descargar Producto' : 'Descargar de Almacen(es)', function () {
        return CambioExportacion(CodLibro, variables);
    }, function () {
        return AgregarFilaTabla(CodLibro, variables);
    }, function () {
        return BuscarProductoCP(CodLibro, 'click');
    }, function () {
        return BuscarProductoCP(CodLibro, 'blur');
    }, function () {
        return CargarUnidadMedida();
    }, function () {
        return CambioUnidadMedida();
    }, function () {
        return KeyPressCantidad(CodLibro);
    }, function () {
        return KeyPressCantidad(CodLibro);
    }, CodLibro == '14' ? 'block' : 'none', function () {
        return KeyPressPrecioUnitario();
    }, function () {
        return KeyPressPrecioUnitario();
    }, function () {
        return KeyEnterImporte(event, CodLibro, variables);
    }, function () {
        return (0, _tools.BloquearControles)(event);
    }, function () {
        return CalcularTotal(CodLibro, variables);
    }, CodLibro == '08' ? 'POR LA COMPRA DE MERCADERIA' : 'POR LA VENTA DE MERCADERIA', function () {
        return (0, _tools.BloquearControles)(event);
    }, function () {
        return AbrirModalPercepcion(CodLibro, variables);
    }, function () {
        return (0, _series.BuscarPorSerie)();
    }, variables.empresa.Flag_ExoneradoImpuesto ? 'checked' : 'checked', function () {
        return (0, _tools.BloquearControles)(event);
    }, function () {
        return CalcularTotal(CodLibro, variables);
    }, function () {
        return CalcularTotal(CodLibro, variables);
    }, function () {
        return CalcularTotal(CodLibro, variables);
    }, function () {
        return CalcularTotal(CodLibro, variables);
    }, function () {
        return (0, _tools.BloquearControles)(event);
    }, function () {
        return GenerarComprobante(CodLibro, variables);
    }, CodLibro == '08' ? 'Comprar' : 'Vender');
    var ingreso = document.getElementById('modal-proceso');
    empty(ingreso).appendChild(el);
    $('#modal-proceso').modal('show');
    if (CodLibro == '08') {

        $("#Serie").combobox();
        $("#Serie").change(function () {
            TraerSiguienteNumero(CodLibro);
        });

        $("#Serie").parent().find('input.ui-widget').blur(function () {
            FocusOutSerie();
        });
    }

    $("#Cuenta_CajaBancos").combobox();

    $("#modal-proceso").off('shown.bs.modal').on("shown.bs.modal", function () {
        //console.log("cargando")
        CargarConfiguracionDefault(CodLibro, variables);
    });

    /*CambioMoneda()
    CambioTipoDocumento()
    CambioFormasPago(CodLibro)
    CambioCreditoContado()
    if(global.objCliente =='')
        BuscarCliente("Cliente","Nro_Documento",CodLibro == "08" ? "001" : "002")
    CargarConfiguracionDefault(CodLibro,variables)
    $("input[name=optCredito][value='contado']").prop("checked",true)
    $('#modal-superior').on('hidden.bs.modal', function () {
          if(global.objCliente !='' && global.objCliente){
            //console.log(global.objCliente)
            $("#Cod_TipoDoc").val(global.objCliente.Cod_TipoDocumento)
            $("#Cliente").val(global.objCliente.Cliente)
            $("#Nro_Documento").val(global.objCliente.Nro_Documento)
            $("#Cliente").attr("data-id",global.objCliente.Id_ClienteProveedor)
            if(parseFloat(global.objCliente.Limite_Credito) > 0 ){ 
                $("input[name=optCredito][value='credito']").prop("checked",true);
                $("#divCredito").css("display","block")
            }
            else{
                $("input[name=optCredito][value='contado']").prop("checked",true);
                $("#divCredito").css("display","none")
            }
            
            if($("#divCredito").css("display")=="block"){
                $("input[name=optCredito][value='credito']").prop("checked",true);
                $("#Nro_Dias").val(30)
            }else{
                $("input[name=optCredito][value='credito']").prop("checked",false);
                $("#Nro_Dias").val(0)
            }
              if(CodLibro=="14"){
                $("#Cod_TipoComprobante").val(global.objCliente.Cod_TipoComprobante)
                CargarSeries(CodLibro)
                CargarLicitacionesCliente(global.objCliente.Id_ClienteProveedor)
            }
        }
        CambioLicitacion()
        CambioCreditoContado()
          if(global.objProducto!='' && global.objProducto){
            $("#Nom_Producto").attr("data-id",global.objProducto.Id_Producto)
            $("#Nom_Producto").val(global.objProducto.Nom_Producto)
            $("#Cod_TipoOperatividad").val(global.objProducto.Cod_TipoOperatividad)
            $("#Cod_Producto").val(global.objProducto.Cod_Producto)
            CargarAlmacenes(global.objProducto.Id_Producto,global.objProducto.Cod_Almacen)
            CargarUnidadMedida(global.objProducto.Id_Producto,global.objProducto.Cod_Almacen)
            $("#Cod_UnidadMedida").val(global.objProducto.Cod_UnidadMedida)
            $("#Cod_TipoPrecio").val('001')
            $("#Stock").val(parseFloat(global.objProducto.Stock_Act)+".00")
            $("#Precio_Unitario").val(parseFloat(global.objProducto.Precio_Venta))
            $("#Cantidad").val(1)
            $("#Cantidad").focus()
            $("#Descuento").val(global.objProducto.Descuento)
        }
    })
        $('#modal-otros-procesos').on('hidden.bs.modal', function () { 
        if(global.arraySeries!='' && global.arraySeries){ 
            $("tr#"+idFilaSeleccionadaSerie).find('td.Series').find('input').val(JSON.stringify(global.arraySeries))
        }
    })
      CambioLicitacion()*/

    $('#modal-superior').on('hidden.bs.modal', function () {

        if (global.objCliente != '' && global.objCliente) {
            //console.log(global.objCliente)
            $("#Cod_TipoDoc").val(global.objCliente.Cod_TipoDocumento);
            $("#Cliente").val(global.objCliente.Cliente);
            $("#Nro_Documento").val(global.objCliente.Nro_Documento);
            $("#Direccion").val(global.objCliente.Direccion);
            $("#Cliente").attr("data-id", global.objCliente.Id_ClienteProveedor);
            if (parseFloat(global.objCliente.Limite_Credito) > 0) {
                $("input[name=optCredito][value='credito']").prop("checked", true);
                $("#divCredito").css("display", "block");
            } else {
                $("input[name=optCredito][value='contado']").prop("checked", true);
                $("#divCredito").css("display", "none");
            }

            if ($("#divCredito").css("display") == "block") {
                $("input[name=optCredito][value='credito']").prop("checked", true);
                $("#Nro_Dias").val(30);
            } else {
                $("input[name=optCredito][value='credito']").prop("checked", false);
                $("#Nro_Dias").val(0);
            }

            if (CodLibro == "14") {
                $("#Cod_TipoComprobante").val(global.objCliente.Cod_TipoComprobante);
                CargarSeries(CodLibro);
                CargarLicitacionesCliente(global.objCliente.Id_ClienteProveedor);
            }
        }
        CambioLicitacion();
        CambioCreditoContado();

        if (global.objProducto != '' && global.objProducto) {
            $("#Nom_Producto").attr("data-id", global.objProducto.Id_Producto);
            $("#Nom_Producto").val(global.objProducto.Nom_Producto);
            $("#Cod_TipoOperatividad").val(global.objProducto.Cod_TipoOperatividad);
            $("#Cod_Producto").val(global.objProducto.Cod_Producto);
            CargarAlmacenes(global.objProducto.Id_Producto, global.objProducto.Cod_Almacen);
            CargarUnidadMedida(global.objProducto.Id_Producto, global.objProducto.Cod_Almacen);
            $("#Cod_UnidadMedida").val(global.objProducto.Cod_UnidadMedida);
            $("#Cod_TipoPrecio").val('001');
            $("#Stock").val(parseFloat(global.objProducto.Stock_Act) + ".00");
            $("#Precio_Unitario").val(parseFloat(global.objProducto.Precio_Venta));
            $("#Cantidad").val(1);
            $("#Cantidad").focus();
            $("#Descuento").val(global.objProducto.Descuento);
        }
    });

    $('#modal-otros-procesos').on('hidden.bs.modal', function () {
        if (global.arraySeries != '' && global.arraySeries) {
            $("tr#" + idFilaSeleccionadaSerie).find('td.Series').find('input').val(JSON.stringify(global.arraySeries));
        }
    });

    if (global.objCliente == '') (0, _modales.BuscarCliente)("Cliente", "Nro_Documento", CodLibro == "08" ? "001" : "002");

    $(document).on('keypress', 'input', function (event) {
        event.stopImmediatePropagation();
        if (event.which == 13) {
            event.preventDefault();
            var $input = $('input');
            $input.eq($input.index(this) + 1).focus();
        }
    });

    if (Detalles != undefined) {
        AgregarFilaTabla_(CodLibro, variables, Detalles);
    }
}

function VerModalFormasPago(variables, amodo, Tipo_Cambio, Monto, Cod_Moneda) {
    var el = yo(_templateObject6, function () {
        return AsignarCredito();
    }, variables.formaspago.map(function (e) {
        return yo(_templateObject7, e.Cod_FormaPago == "008" ? yo(_templateObject8, function () {
            return CambioMonedaComprobante(Cod_Moneda, variables, Tipo_Cambio);
        }, variables.monedas.map(function (m) {
            return yo(_templateObject9, m.Cod_Moneda, m.Nom_Moneda);
        })) : yo(_templateObject3));
    }), variables.formaspago.map(function (e) {
        return yo(_templateObject10, e.Cod_FormaPago != "005" ? e.Cod_FormaPago != "006" ? yo(_templateObject3) : yo(_templateObject11, function () {
            return CambioMonedaFormaPagoMasterCard();
        }) : yo(_templateObject12, function () {
            return CambioMonedaFormaPagoVisa();
        }));
    }), function () {
        return CompletarSaldo();
    }, function () {
        return AgregarMontoFormaPago(Cod_Moneda, Tipo_Cambio);
    }, function () {
        return CambioTipoCambioGlobal(Cod_Moneda, Tipo_Cambio);
    }, listaFormaPago.length == 0 ? '' : '', Monto, Cod_Moneda + " " + (Monto / Tipo_Cambio).toFixed(2), function () {
        return AceptarFormaPago(amodo);
    });

    aMonto = (parseFloat(Monto) * parseFloat(Tipo_Cambio)).toFixed(2);
    var modal_proceso = document.getElementById('modal-otros-procesos');
    empty(modal_proceso).appendChild(el);
    $('#modal-otros-procesos').modal();

    CargarConfiguracionDefaultFormaPago(variables, amodo, Cod_Moneda, Tipo_Cambio);

    //CambioMonedaFormaPagoSolesCambioMonedaFormaPagoSoles(Cod_Moneda)
    //CambioMonedaFormaPagoDolares(Cod_Moneda,variables,Tipo_Cambio)
    //CambioMonedaFormaPagoEuros(Cod_Moneda,variables,Tipo_Cambio)
    CambioMonedaComprobante(Cod_Moneda, variables, Tipo_Cambio);

    CambioMonedaFormaPagoMasterCard();
    CambioMonedaFormaPagoVisa();
}

function AbrirModalPercepcion(CodLibro, variables) {
    var el = yo(_templateObject13, function () {
        return AplicarPercepcion(CodLibro, variables);
    });

    var modal_proceso = document.getElementById('modal-otros-procesos');
    empty(modal_proceso).appendChild(el);
    $('#modal-otros-procesos').modal();
}

function AgregarFilaTabla_(CodLibro, variables, Detalles) {
    var tabla = yo(_templateObject14, Detalles.map(function (u, index) {
        return yo(_templateObject15, index + u.Id_Producto, u.id_ComprobantePago, u.id_Detalle, u.Id_Producto, u.Codigo, u.Descripcion, u.Almacen, u.Des_Almacen, u.UM, u.Nom_UnidadMedida, u.Stock, u.Cantidad, function () {
            return EditarCantidad(index + u.Id_Producto, CodLibro, variables);
        }, function () {
            return EditarCantidad(index + u.Id_Producto, CodLibro, variables);
        }, u.Despachado, parseFloat(u.PU) - parseFloat(u.Descuento) * parseFloat(u.PU) / 100, u.PU, function () {
            return EditarPrecioUnitario(index + u.Id_Producto, CodLibro, variables);
        }, function () {
            return EditarPrecioUnitario(index + u.Id_Producto, CodLibro, variables);
        }, parseFloat(u.Descuento) / 100 != 0 ? "background:#dd4b39;color:white;border-color:#dd4b39" : "background:white;color:#555;border-color:#98999c", parseFloat(u.Descuento) * parseFloat(u.PU) / 100, u.Descuento, function () {
            return EditarDescuento(index + u.Id_Producto, CodLibro, variables);
        }, function () {
            return EditarDescuento(index + u.Id_Producto, CodLibro, variables);
        }, u.Importe, u.Cod_Manguera, u.Tipo, u.Obs_Comprobante, JSON.stringify(u.Series), function () {
            return AsignarSeries(index + u.Id_Producto, CodLibro);
        }, function () {
            return EliminarFila(index + u.Id_Producto, CodLibro, variables);
        });
    }));

    empty(document.getElementById('tablaDetallesComprobante')).appendChild(tabla);
    contador = Detalles.length;
    CalcularTotal(CodLibro, variables);
    /*var fila = yo``
    for (var i in Detalles) { 
        var idFila = contador+ Detalles[i].Id_Producto
        fila = yo`
        <tr id="${idFila}">
            <td class="id_ComprobantePago hidden"><input value=${Detalles[i].id_ComprobantePago}></td>
            <td class="id_Detalle hidden"><input value=${Detalles[i].id_Detalle}></td> 
            <td class="Id_Producto hidden"><input value=${Detalles[i].Id_Producto}></td> 
            <td class="Codigo hidden">${Detalles[i].Codigo}</td>
            <td class="Descripcion" style="width: 24%;"><input type="text" class="form-control input-sm" value=${Detalles[i].Descripcion}></td>
            <td class="Almacen"><input type="text" class="form-control input-sm" value=${Detalles[i].Almacen}></td> 
            <td class="UM"><input type="text" class="form-control input-sm" value=${Detalles[i].UM}></td>
            <td class="Stock hidden"><input type="number" class="form-control input-sm" value=${Detalles[i].Stock}></td> 
            <td class="Cantidad"><input type="number" class="form-control input-sm" value=${Detalles[i].Cantidad} onkeyup=${()=>EditarCantidad(idFila,CodLibro,variables)} onchange=${()=>EditarCantidad(idFila,CodLibro,variables)}></td> 
            <td class="Despachado hidden">${Detalles[i].Despachado}</td> 
            <td class="PU"><input type="number" class="form-control input-sm" value=${Detalles[i].PU} onkeyup=${()=>EditarPrecioUnitario(idFila,CodLibro,variables)} onchange=${()=>EditarPrecioUnitario(idFila,CodLibro,variables)}></td> 
            <td class="Descuento"><input type="number" class="form-control input-sm" value=${Detalles[i].Descuento} onkeyup=${()=>EditarDescuento(idFila,CodLibro,variables)} onchange=${()=>EditarDescuento(idFila,CodLibro,variables)} ></td> 
            <td class="Importe"><input type="number" class="form-control input-sm" value=${Detalles[i].Importe}></td>
            <td class="Cod_Manguera hidden">${Detalles[i].Cod_Manguera}</td>  
            <td class="Tipo hidden">${Detalles[i].Tipo}</td> 
            <td class="Obs_ComprobanteD hidden">${Detalles[i].Obs_Comprobante}</td> 
            <td class="Series hidden"><input class="form-control" type="text" value=${JSON.stringify(Detalles[i].Series)} name="Series"></td>
            <td>
            <div style="display:flex;">
                <button type="button" onclick="${()=>AsignarSeries(idFila,CodLibro)}" class="btn btn-primary btn-sm"><i class="fa fa-tasks"></i></a>  
                <button type="button" onclick="${()=>EliminarFila(idFila,CodLibro,variables)}" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>
            </div>
            </td>
        </tr>`
        contador++
    } 
    $("#tablaBody").html(fila)
      CalcularTotal(CodLibro,variables)*/
}

function AbrirModalConfirmacion(CodLibro, variables) {
    var el = yo(_templateObject16, function () {
        return EmisionCompleta(CodLibro, variables);
    });

    var modal_alerta = document.getElementById('modal-alerta');
    empty(modal_alerta).appendChild(el);
    $('#modal-alerta').modal();
}

function AgregarFilaTabla(CodLibro, variables) {

    if ($("#optEsGasto").is(":checked")) {
        var Nom_Producto = $("#Nom_Producto").val();
        var Importe = $("#Importe").val();
        var rows = $("#tablaBody > tr").length;
        var idFila = contador + "G";
        var fila = yo(_templateObject17, idFila, rows, Nom_Producto, function () {
            return EditarCantidad(idFila, CodLibro, variables);
        }, function () {
            return EditarCantidad(idFila, CodLibro, variables);
        }, Importe, function () {
            return EditarPrecioUnitario(idFila, CodLibro, variables);
        }, function () {
            return EditarPrecioUnitario(idFila, CodLibro, variables);
        }, function () {
            return EditarDescuento(idFila, CodLibro, variables);
        }, function () {
            return EditarDescuento(idFila, CodLibro, variables);
        }, Importe, JSON.stringify([]), function () {
            return AsignarSeries(idFila, CodLibro);
        }, function () {
            return EliminarFila(idFila, CodLibro, variables);
        });
        $("#tablaBody").append(fila);
        contador++;
    } else {

        if ($("#Nom_Producto").val().trim() != "") {
            if (!arrayValidacion.includes($("#Nom_Producto").attr("data-id"))) {

                var Id_Producto = $("#Nom_Producto").attr("data-id");
                var Cod_Producto = arrayValidacion.includes($("#Cod_Producto").val()) ? "" : $("#Cod_Producto").val();
                var Cod_Almacen = $("#Cod_Almacen option:selected").text(); //$("#Cod_Almacen").val()
                var Cod_UnidadMedida = $("#Cod_UnidadMedida option:selected").text();
                var Stock = $("#Stock").val();
                var Cantidad = $("#Cantidad").val();
                var Nom_Producto = $("#Nom_Producto").val();
                var Importe = $("#Importe").val();
                var Precio_Unitario = $("#Precio_Unitario").val();
                var Descuento = $("#Descuento").val();
                var Cod_TipoPrecio = arrayValidacion.includes($("#Cod_TipoPrecio").val()) ? "" : $("#Cod_TipoPrecio").val();
                var Cod_TipoOperatividad = $("#Cod_TipoOperatividad").val();

                var flagGasto = $("#optEsGasto").is(":checked");
                var rows = $("#tablaBody > tr").length;
                var idFila = contador + $("#Nom_Producto").attr("data-id");
                var fila = yo(_templateObject18, idFila, rows, flagGasto ? '0' : Id_Producto, flagGasto ? '' : Cod_Producto, Nom_Producto, flagGasto ? null : $("#Cod_Almacen").val(), flagGasto ? '' : Cod_Almacen, flagGasto ? null : $("#Cod_UnidadMedida").val(), flagGasto ? '' : Cod_UnidadMedida, flagGasto ? "0" : Stock, flagGasto ? "1" : Cantidad, function () {
                    return EditarCantidad(idFila, CodLibro, variables);
                }, function () {
                    return EditarCantidad(idFila, CodLibro, variables);
                }, flagGasto ? "1" : Cantidad, flagGasto ? 0 : Precio_Unitario, flagGasto ? Importe : Precio_Unitario, function () {
                    return EditarPrecioUnitario(idFila, CodLibro, variables);
                }, function () {
                    return EditarPrecioUnitario(idFila, CodLibro, variables);
                }, flagGasto ? "0" : Descuento, function () {
                    return EditarDescuento(idFila, CodLibro, variables);
                }, function () {
                    return EditarDescuento(idFila, CodLibro, variables);
                }, flagGasto ? Importe : Importe, flagGasto ? '' : Cod_TipoPrecio, flagGasto ? 'NGR' : Cod_TipoOperatividad, JSON.stringify([]), function () {
                    return AsignarSeries(idFila, CodLibro);
                }, function () {
                    return EliminarFila(idFila, CodLibro, variables);
                });
                $("#tablaBody").append(fila);
                contador++;

                CalcularTotal(CodLibro, variables);
                $("#Nom_Producto").attr("data-id", null);
                $("#Stock").val("");
                $("#Precio_Unitario").val("0.00");
                $("#Cantidad").val("0.00");
                $("#Importe").val("0.00");
                $("#Descuento").val("0.00");

                //$("#Nom_Producto").attr("data-id",null)
                $("#Cod_Producto").val(null);
                $("#Cod_Almacen").val("");
                $("#Cod_UnidadMedida").text("");
                $("#Stock").val("");
                $("#Nom_Producto").val("");
                $("#Cod_TipoPrecio").val(null);
                $("#Cod_TipoOperatividad").val("");
            } else {
                BuscarProductoCP(CodLibro);
            }
        } else {
            $("#Nom_Producto").focus();
        }
    }
}

function AplicarPercepcion(CodLibro, variables) {
    if ($("#PorcentajePercepcion").val().trim() != "") {
        var Cod_TipoComprobante = $("#Cod_TipoComprobante").val();
        var Serie = $("#Serie").val();
        var Numero = $("#Numero").val();
        var Calculo = (parseFloat($("#Gran_Total").val()) * parseFloat($("#PorcentajePercepcion").val()) / 100).toFixed(2);
        var idFila = "P" + contadorPercepcion;
        var fila = yo(_templateObject19, idFila, Cod_TipoComprobante, Serie, Numero, Calculo, Calculo, JSON.stringify([]), function () {
            return AsignarSeries(idFila, CodLibro);
        }, function () {
            return EliminarFila(idFila, CodLibro, variables);
        });
        $("#tablaBody").append(fila);
        contadorPercepcion++;
        CalcularTotal(CodLibro, variables);
        $("#modal-otros-procesos").modal('hide');
    } else {
        toastr.error('Error al ingresar el procentaje de Percepcion, intentelo de nuevo.', 'Error', { timeOut: 5000 });
    }
}

function AgregarFilaFormaPago(pDescFormaPago, pCodFormaPago, pCodMoneda, pMonto, pTipoCambio, pReferencia, Tipo_Cambio, Cod_Moneda) {

    var fecha = new Date();
    var mes = fecha.getMonth() + 1;
    var dia = fecha.getDate();
    var fecha_actual = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);
    var index = $("#tablaBodyPagosMultiples > tr").length;

    var fila = yo(_templateObject20, index, pCodFormaPago, pDescFormaPago, pCodMoneda, pMonto, pTipoCambio, parseFloat(pTipoCambio) / parseFloat(Tipo_Cambio), (parseFloat(pMonto) * parseFloat(pTipoCambio)).toFixed(2), (parseFloat((parseFloat(pMonto) * parseFloat(pTipoCambio)).toFixed(2)) * (parseFloat(pTipoCambio) / parseFloat(Tipo_Cambio))).toFixed(2), fecha_actual, pReferencia == null ? "" : pReferencia, function () {
        return EliminarFilaPagosMultiples(index, Cod_Moneda, Tipo_Cambio);
    });
    $("#tablaBodyPagosMultiples").append(fila);
    $("#MontoFormaPago").val("0.00");
    $("#MontoFormaPago").focus();
}

function CargarModalConfirmacionAsignarCredito() {
    var el = yo(_templateObject21, function () {
        return AceptarConfirmacionAsignarCredito();
    });

    var modal_alerta = document.getElementById('modal-alerta');
    empty(modal_alerta).appendChild(el);
    $('#modal-alerta').modal();
}

function LlenarFormasPago(Cod_Moneda, Tipo_Cambio) {

    var fecha = new Date();
    var mes = fecha.getMonth() + 1;
    var dia = fecha.getDate();
    var fecha_actual = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);

    var tabla = yo(_templateObject22, listaFormaPago.map(function (u, index) {
        return yo(_templateObject23, index, u.CodTipoFormaPago, u.DesFormaPago, u.CodMoneda, u.Monto, u.TipoCambio, parseFloat(u.TipoCambio) / parseFloat(Tipo_Cambio), (parseFloat(u.Monto) * parseFloat(u.TipoCambio)).toFixed(2), (parseFloat((parseFloat(u.Monto) * parseFloat(u.TipoCambio)).toFixed(2)) * (parseFloat(u.TipoCambio) / parseFloat(Tipo_Cambio))).toFixed(2), u.Fecha == null ? fecha_actual : u.Fecha, u.CuentaCajaBanco == null ? "" : u.CuentaCajaBanco, function () {
            return EliminarFilaPagosMultiples(index, Cod_Moneda, Tipo_Cambio);
        });
    }));

    empty(document.getElementById('contenedorPagosMultiples')).appendChild(tabla);
}

function LlenarCuentaBancaria(cuentas, CodLibro) {
    var html = '';
    for (var i = 0; i < cuentas.length; i++) {
        html = html + '<option value="' + cuentas[i].Cod_CuentaBancaria + '">' + cuentas[i].Des_CuentaBancaria + '</option>';
    }

    $("#Cod_CuentaBancaria").html('');
    $("#Cod_CuentaBancaria").html(html);
    CambioCodCuentaBancaria(CodLibro);
}

function LlenarCuentaBancaria_(cuentas, CodLibro) {
    var html = '';
    for (var i = 0; i < cuentas.length; i++) {
        html = html + '<option value="' + cuentas[i].NroCuenta_Bancaria + '">' + cuentas[i].CuentaBancaria + '</option>';
    }

    $("#Cod_CuentaBancaria").html('');
    $("#Cod_CuentaBancaria").html(html);
    CambioCodCuentaBancaria(CodLibro);
}

function LlenarPagosAdelantados(cuentas) {
    var html = '';
    for (var i = 0; i < cuentas.length; i++) {
        html = html + '<option value="' + cuentas[i].id_Movimiento + '">' + cuentas[i].Des_Movimiento + '</option>';
    }

    $("#Cuenta_CajaBancos").html('');
    $("#Cuenta_CajaBancos").html(html);
}

function LlenarSeries(series) {
    var html = '';
    for (var i = 0; i < series.length; i++) {
        html = html + '<option value="' + series[i].Serie + '">' + series[i].Serie + '</option>';
    }

    $("#Serie").html('');
    $("#Serie").html(html);
}

function LlenarAlmacenes(almacenes, Cod_Almacen) {
    var html = '';
    for (var i = 0; i < almacenes.length; i++) {
        if (Cod_Almacen == almacenes[i].Cod_Almacen) html = html + '<option value="' + almacenes[i].Cod_Almacen + '" selected>' + almacenes[i].Des_Almacen + '</option>';else html = html + '<option value="' + almacenes[i].Cod_Almacen + '">' + almacenes[i].Des_Almacen + '</option>';
    }

    $("#Cod_Almacen").html('');
    $("#Cod_Almacen").html(html);
}

function LlenarCheques(cheques) {
    var html = '';
    for (var i = 0; i < cheques.length; i++) {
        html = html + '<option value="' + cheques[i].Id_MovimientoCuenta + '">' + cheques[i].Des_Movimiento + '</option>';
    }

    $("#Cuenta_CajaBancos").html('');
    $("#Cuenta_CajaBancos").html(html);
}

function LlenarLicitaciones(licitaciones) {
    var html = '';
    for (var i = 0; i < licitaciones.length; i++) {
        html = html + '<option value="' + licitaciones[i].Cod_Licitacion + '">' + licitaciones[i].Des_Licitacion + '</option>';
    }

    $("#Cod_Licitacion").html('');
    $("#Cod_Licitacion").html(html);
}

function LlenarUnidadMedida(unidades_medidas) {
    var html = '';
    for (var i = 0; i < unidades_medidas.length; i++) {
        html = html + '<option value="' + unidades_medidas[i].Cod_UnidadMedida + '">' + unidades_medidas[i].Nom_UnidadMedida + '</option>';
    }

    $("#Cod_UnidadMedida").html('');
    $("#Cod_UnidadMedida").html(html);
}

function LlenarTipoPrecio(tipos_precio) {
    var html = '';
    for (var i = 0; i < tipos_precio.length; i++) {
        html = html + '<option value="' + tipos_precio[i].Cod_TipoPrecio + '">' + tipos_precio[i].Nom_Precio + '</option>';
    }

    $("#Cod_TipoPrecio").html('');
    $("#Cod_TipoPrecio").html(html);
}

function KeyPressPrecioUnitario() {
    try {
        $("#Importe").val((parseFloat($("#Cantidad").val()) * parseFloat($("#Precio_Unitario").val())).toFixed(2));
    } catch (e) {
        $("#Importe").val("0.00");
    }
    $("#Importe").focus();
}

function KeyPressCantidad(CodLibro) {
    if ($("#Stock").val() != "") {
        if (CodLibro == "14" && parseFloat($("#Cantidad").val()) > parseFloat($("#Stock").val())) {} else {
            try {
                $("#Importe").val((parseFloat($("#Cantidad").val()) * parseFloat($("#Precio_Unitario").val())).toFixed(2));
            } catch (e) {
                $("#Importe").val("0.00");
            }
        }
    }
}

function KeyEnterImporte(event, CodLibro, variables) {

    try {
        $("#Cantidad").val(parseFloat($("#Importe").val()) / parseFloat($("#Precio_Unitario").val()));
        //CalcularTotal(CodLibro,variables)
    } catch (e) {
        $("#Cantidad").val("0");
        //CalcularTotal(CodLibro,variables)
    }

    event.stopImmediatePropagation();
    if (event.which == 13) {
        AgregarFilaTabla(CodLibro, variables);
    }
}

function AgregarTipoComprobante(e) {

    if (e.Cod_TipoComprobante != pCodTipoComprobanteUltimo) {
        pCodTipoComprobanteUltimo = e.Cod_TipoComprobante;
        return yo(_templateObject4, e.Cod_TipoComprobante, e.Nom_TipoComprobante);
    } else {
        return yo(_templateObject3);
    }
}

function AbrirModalFormasPago(variables, fecha_actual) {
    run_waitMe($('#main-proceso'), 1, "ios");
    var FechaHora = $("#Fecha").val();
    var Cod_Moneda = $("#Cod_Moneda").val();
    var Tipo_Cambio = $("#Tipo_Cambio").val();
    var Gran_Total = $("#Gran_Total").val();
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_Moneda: Cod_Moneda,
            FechaHora: FechaHora
        })
    };
    fetch(_constantes.URL + '/comprobantes_pago_api/get_variables_formas_pago', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        //console.log(res.data)
        variables['tipos_cambios'] = res.data.tipos_cambios;
        if (res.respuesta == 'ok') {
            VerModalFormasPago(variables, 0, Tipo_Cambio, parseFloat(Gran_Total) / parseFloat(Tipo_Cambio), Cod_Moneda);
        }
        $('#modal-proceso').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#modal-proceso').waitMe('hide');
    });
}

function EditarCantidad(idFila, CodLibro, variables) {
    $("#" + idFila).find("td.Despachado").text($("#" + idFila).find("td.Cantidad").find('input').val());
    $("#" + idFila).find("td.Importe").find('input').val(parseFloat($("#" + idFila).find("td.PU").find('input').val()) * parseFloat($("#" + idFila).find("td.Cantidad").find('input').val()));
    CalcularTotal(CodLibro, variables);
}

function EditarPrecioUnitario(idFila, CodLibro, variables) {
    $("#" + idFila).find("td.Descuento").find('input').attr("data-value", parseFloat($("#" + idFila).find("td.PU").find('input').val()) * parseFloat($("#" + idFila).find("td.Descuento").find('input').val()) / 100);
    $("#" + idFila).find("td.PU").find('input').attr("data-value", parseFloat($("#" + idFila).find("td.PU").find('input').val()) * parseFloat($("#" + idFila).find("td.Descuento").find('input').val()));
    $("#" + idFila).find("td.Importe").find('input').val(parseFloat($("#" + idFila).find("td.PU").find('input').val()) * parseFloat($("#" + idFila).find("td.Cantidad").find('input').val()));
    CalcularTotal(CodLibro, variables);
}

function EditarDescuento(idFila, CodLibro, variables) {
    $("#" + idFila).find("td.Descuento").find('input').attr("data-value", parseFloat($("#" + idFila).find("td.PU").find('input').val()) * parseFloat($("#" + idFila).find("td.Descuento").find('input').val()) / 100);
    $("#" + idFila).find("td.PU").find('input').attr("data-value", parseFloat($("#" + idFila).find("td.PU").find('input').val()) * parseFloat($("#" + idFila).find("td.Descuento").find('input').val()));
    $("#" + idFila).find("td.Importe").find('input').val((parseFloat($("#" + idFila).find("td.PU").find('input').val()) - parseFloat($("#" + idFila).find("td.Descuento").find('input').val())) * parseFloat($("#" + idFila).find("td.Cantidad").find('input').val()));
    CalcularTotal(CodLibro, variables);
}

function EliminarFila(idFila, CodLibro, variables) {
    $("#" + idFila).remove();
    CalcularTotal(CodLibro, variables);
}

function EliminarFilaPagosMultiples(idFila, Cod_Moneda, Tipo_Cambio) {
    $("#FP" + idFila).remove();
    CalcularSaldo(Cod_Moneda, Tipo_Cambio);
    if (aSaldo == 0) {
        $("#btnAceptarFormaPago").css("display", "inline-block");
    } else {
        $("#btnAceptarFormaPago").css("display", "none");
    }

    if (aSaldo == 0) {
        $("#btnAgregarMontoFormaPago").css("display", "none");
        $("#divCompSaldo").css("display", "none");
    } else {
        $("#btnAgregarMontoFormaPago").css("display", "block");
        $("#divCompSaldo").css("display", "block");
    }

    $("#MontoFormaPago").val("0.00");
    $("#MontoFormaPago").focus();
}

function CalcularTotal(CodLibro, variables) {

    var Suma = 0;
    var SumaExoneracion = 0;
    var SumaPercepcion = 0;
    var SumaDescuento = 0;
    var SumaGratuitas = 0;
    var DescuentosGlobales = $("#Descuento_Global").val();

    $('#tablaBody tr').each(function () {

        var tipo = $(this).find("td").eq(14).text();
        var sub_total = $(this).find("td").eq(12).find("input").val();
        var descuento = $(this).find("td").eq(11).find("input").attr("data-value");
        var cantidad = $(this).find("td").eq(8).find("input").val();
        var DescuentosGlobales = parseFloat($("#Descuento_Global").val());

        switch (tipo) {
            case "GRT":
                // GRATUITAS
                SumaGratuitas += parseFloat(sub_total);
                break;
            case "GRA":
                // GRAVADAS
                Suma += parseFloat(sub_total);
                break;
            case "INA":
                // INAFECTAS
                SumaExoneracion += parseFloat(sub_total);
                break;
            case "EXO":
                // EXONERADAS
                SumaExoneracion += parseFloat(sub_total);
                break;
            case "PER":
                // PERCEPCION
                SumaPercepcion += parseFloat(sub_total);
                break;
            case "OTR":
                // OTROS
                SumaExoneracion += parseFloat(sub_total);
                break;
            case "NGR":
                // NO GRAVADAS
                Suma += parseFloat(sub_total);
                break;
            default:
                Suma += parseFloat(sub_total);
                break;
        }

        if (CodLibro == "14" && parseFloat(descuento) != 0) SumaDescuento += parseFloat(cantidad) * parseFloat(descuento);
    });

    if (SumaExoneracion > 0) {
        $("#laExonerado").css("display", "block");
        $("#Exonerado").css("display", "block");
        $("#Exonerado").val(SumaExoneracion);
    } else {
        $("#laExonerado").css("display", "none");
        $("#Exonerado").css("display", "none");
        $("#Exonerado").val(0);
    }

    if (SumaPercepcion > 0) {
        $("#laPercepcion").css("display", "block");
        $("#Percepcion").css("display", "block");
        $("#Percepcion").val(SumaPercepcion);
    } else {
        $("#laPercepcion").css("display", "none");
        $("#Percepcion").css("display", "none");
        $("#Percepcion").val(0);
    }

    if (SumaGratuitas > 0) {
        $("#laGratuitas").css("display", "block");
        $("#Gratuitas").css("display", "block");
        $("#Gratuitas").val(SumaGratuitas);
    } else {
        $("#laGratuitas").css("display", "none");
        $("#Gratuitas").css("display", "none");
        $("#Gratuitas").val(0);
    }

    if (SumaDescuento > 0) {
        $("#laDescuento").css("display", "block");
        $("#DescuentoTotal").css("display", "block");
        $("#DescuentoTotal").val(SumaDescuento.toFixed(2));
    } else {
        $("#laDescuento").css("display", "none");
        $("#DescuentoTotal").css("display", "none");
        $("#DescuentoTotal").val(0);
    }

    if ($("#ckbAplicaImpuesto").is(":checked")) {
        if ($("#ckbIncluyeIGV").is(":checked")) {
            $("#Gran_Total").val(Suma + SumaExoneracion + SumaGratuitas + SumaPercepcion - DescuentosGlobales);
            var porcDescuentoglobal = parseFloat($("#Descuento_Global").val()) * 100 / (parseFloat($("#Gran_Total").val()) + parseFloat($("#Descuento_Global").val())) / 100;
            Suma = Suma - Suma * porcDescuentoglobal;
            $("#subtotal").val((Suma / (1 + parseFloat(variables.empresa.Por_Impuesto) / 100)).toFixed(2));
            $("#Impuesto").val((parseFloat($("#subtotal").val()) * parseFloat(variables.empresa.Por_Impuesto) / 100).toFixed(2));
        } else {
            $("#subtotal").val(Suma);
            $("#Impuesto").val((parseFloat($("#subtotal").val()) * parseFloat(variables.empresa.Por_Impuesto) / 100).toFixed(2));
            $("#Gran_Total").val(Suma + SumaExoneracion + SumaGratuitas + SumaPercepcion + parseFloat($("#Impuesto").val()) - parseFloat(DescuentosGlobales));
            if (parseFloat($("#Descuento_Global").val()) > 0) {
                $("#Impuesto").val((parseFloat($("#Gran_Total").val()) * parseFloat(variables.empresa.Por_Impuesto) / 100).toFixed(2));
                $("#subtotal").val(parseFloat($("#Gran_Total").val()) - parseFloat($("#Impuesto").val()));
            }
        }
    } else {
        $("#Gran_Total").val(Suma + SumaExoneracion + SumaGratuitas + SumaPercepcion - DescuentosGlobales);
        $("#subtotal").val(Suma);
        $("#Impuesto").val(0);
    }

    $("#laSON").text("SON: " + (0, _tools.ConvertirCadena)(parseFloat($("#Gran_Total").val()), $("#Cod_Moneda option:selected").text()));
    return true;
}

function AgregarMontoFormaPago(Cod_Moneda, Tipo_Cambio) {
    if (parseFloat($("#MontoFormaPago").val()) > 0) {
        var _TipoCambio = 0;
        var _CodMoneda = "";
        var _DesFormaPago = "";
        var _CodFormaPago = "";
        if ($('input[name=Cod_FormaPago_Modal]:checked').val() == 'mastercard' || $('input[name=Cod_FormaPago_Modal]:checked').val() == 'visa') {
            if ($('input[name=Cod_FormaPago_Modal]:checked').val() == "visa") {
                _DesFormaPago = "VISA NET";
                _CodFormaPago = "005";
            } else {
                _DesFormaPago = "MASTERCARD";
                _CodFormaPago = "006";
            }
        } else {
            _DesFormaPago = "EFECTIVO";
            _CodFormaPago = "008";
        }

        //if($('input[name=Cod_Moneda_Forma_Pago]:checked').val() == 'soles'){
        if ($("#Cod_Moneda_Forma_Pago").val() == 'PEN') {
            _CodMoneda = "PEN";
            _TipoCambio = 1;
        }

        if ($("#Cod_Moneda_Forma_Pago").val() == 'USD') {
            //if($('input[name=Cod_Moneda_Forma_Pago]:checked').val() == 'dolares'){
            _CodMoneda = "USD";
            _TipoCambio = $("#Tipo_Cambio_FormaPago").val();
        }

        if ($("#Cod_Moneda_Forma_Pago").val() == 'EUR') {
            //if($('input[name=Cod_Moneda_Forma_Pago]:checked').val() == 'euros'){
            _CodMoneda = "EUR";
            _TipoCambio = $("#Tipo_Cambio_FormaPago").val();
        }

        if (_CodFormaPago == "005" || _CodFormaPago == "006") {

            if ($("#ReferenciaFormaPago").val() != "") {
                AgregarFilaFormaPago(_DesFormaPago, _CodFormaPago, _CodMoneda, parseFloat($("#MontoFormaPago").val()).toFixed(2), parseFloat(_TipoCambio).toFixed(3), $("#ReferenciaFormaPago").val(), Tipo_Cambio, Cod_Moneda);
            } else {
                toastr.error('Para pagos con tarjeta debe especificar un numero de tarjeta', 'Error', { timeOut: 5000 });
                $("#RecuperarTipoCambio").focus();
            }
        } else {
            AgregarFilaFormaPago(_DesFormaPago, _CodFormaPago, _CodMoneda, parseFloat($("#MontoFormaPago").val()).toFixed(2), parseFloat(_TipoCambio).toFixed(3), '', Tipo_Cambio, Cod_Moneda);
        }
    } else {
        toastr.error('El monto introduciudo debe ser mayor a 0', 'Error', { timeOut: 5000 });
        $("#MontoFormaPago").val("0.00");
        $("#MontoFormaPago").focus();
    }
    CalcularSaldo(Cod_Moneda, Tipo_Cambio);

    $("#MontoFormaPago").focus();

    if (aSaldo == 0) $("#btnAceptarFormaPago").css("display", "inline-block");else $("#btnAceptarFormaPago").css("display", "none");

    if (aSaldo == 0) {
        $("#btnAgregarMontoFormaPago").css("display", "none");
        $("#divCompSaldo").css("display", "none");
    } else {
        $("#btnAgregarMontoFormaPago").css("display", "block");
        $("#divCompSaldo").css("display", "block");
    }
}

function CompletarSaldo() {
    try {
        //if($('input[name=Cod_Moneda_Forma_Pago]:checked').val() == 'soles'){
        if ($("#Cod_Moneda_Forma_Pago").val() == 'PEN') {
            $("#MontoFormaPago").val(parseFloat(aSaldo).toFixed(2));
        }

        //if($('input[name=Cod_Moneda_Forma_Pago]:checked').val() == 'dolares' || $('input[name=Cod_Moneda_Forma_Pago]:checked').val() == 'euros'){
        if ($("#Cod_Moneda_Forma_Pago").val() == 'USD' || $("#Cod_Moneda_Forma_Pago").val() == 'EUR') {
            $("#MontoFormaPago").val((parseFloat(aSaldo) / parseFloat($("#Tipo_Cambio_FormaPago").val())).toFixed(2));
        }
    } catch (e) {
        toastr.error('Error, valor no valido: -' + $("#MontoFormaPago").val() + ' es menor que 0', 'Error', { timeOut: 5000 });
    }
}

function CalcularSumaTotales(callback) {
    var SumaTotales = 0;
    $('#tablaBodyPagosMultiples tr').each(function () {
        SumaTotales += parseFloat(parseFloat($(this).find("td").eq(5).text()).toFixed(2));
    });
    callback(SumaTotales);
}

function CalcularSaldo(Cod_Moneda, Tipo_Cambio) {
    if ($('#btnCreditoFormaPagoHeader').attr("disabled") != true) {
        CalcularSumaTotales(function (SumaTotales) {
            aSaldo = aMonto - SumaTotales;
            $("#btnSaldo").text("Saldo: " + Cod_Moneda + " " + (parseFloat(aSaldo) / parseFloat(Tipo_Cambio)).toFixed(2));
            $("#btnSaldo").attr("data-value", parseFloat(aSaldo).toFixed(2));
        });
    } else {
        aSaldo = 0;
        $("#btnSaldo").text("Saldo: " + Cod_Moneda + " " + (parseFloat(aSaldo) / parseFloat(Tipo_Cambio)).toFixed(2));
        $("#btnSaldo").attr("data-value", parseFloat(aSaldo).toFixed(2));
    }
}

function InicializarCredito() {
    /*
    kryptonGroupBox1.Enabled = false;
            kryptonGroupBox2.Visible = false;
            gbMonedas.Enabled = false;
            gbTarjetas.Enabled = false;
            btsCredito.Enabled = ButtonEnabled.True;
            dgvFormasPago.Enabled = false;
            btEliminarFila.Enabled = ButtonEnabled.False;
            btsCredito.Checked = ButtonCheckState.Checked;
    */
    $("#btnCreditoFormaPagoHeader").attr("disabled", false);
    $("#btnCreditoFormaPagoHeader").attr("checked", true);
}

function HabilitarBotones() {

    /*kryptonGroupBox1.Enabled = true;
    kryptonGroupBox2.Visible = true;
    gbMonedas.Enabled = true;
    gbTarjetas.Enabled = true;
    dgvFormasPago.Enabled = true;
    btCompletarMonto.Visible = true;
    btCompletarMonto.Enabled = true;
    btEliminarFila.Enabled = ButtonEnabled.True;
    btsCredito.Checked = ButtonCheckState.Unchecked;*/

    $("#divCompSaldo").css("display", "block");
    $("#btnCompletarSaldo").attr("disabled", false);
    $("#btnCreditoFormaPagoHeader").attr("checked", false);
}

function AceptarConfirmacionAsignarCredito() {
    /*
     InicializarCredito();
                 aComprobante.CodFormaPago = "999";
                 aComprobante.Guardar();
                 (new CForma_pago()).EliminarFormasPagoXIdComprobante(aIdComprobante);
                 this.Aceptar();
    */

    InicializarCredito();
    var Cod_FormaPago = "999";
    $('#modal-alerta').modal('hide');
}

function AsignarCredito() {
    if ($("#btnCreditoFormaPagoHeader").is(":checked")) {
        CargarModalConfirmacionAsignarCredito();
    } else {
        HabilitarBotones();
    }
}

function AsignarSeries(idFila, CodTipoComprobante) {
    idFilaSeleccionadaSerie = idFila;
    var Cod_Almacen = $("tr#" + idFila).find("td.Almacen").find('input').val();
    var Id_Producto = $("tr#" + idFila).find("td.Id_Producto").find("input").val();
    var Cantidad = parseFloat($("tr#" + idFila).find("td.Cantidad").find("input").val());
    var Series = JSON.parse($("tr#" + idFila).find("td.Series").find("input").val());
    var NroDias = CodTipoComprobante == "14" ? 60 : 0;
    var Stock = CodTipoComprobante == "14" ? 0 : 1;
    if (!arrayValidacion.includes(Id_Producto)) (0, _series.AsignarSeriesModal)(Cod_Almacen, Id_Producto, Cantidad, NroDias, Series, null, Stock);
}

function RecuperarTipoCambio(Cod_Moneda, variables, Tipo_Cambio) {
    if (arrayValidacion.includes($("#Tipo_Cambio_FormaPago").attr("data-value"))) {
        var _Tipo_Cambio = 1;
        _Tipo_Cambio = variables.tipos_cambios.length == 0 ? "1" : variables.tipos_cambios[0].Venta;
        _Tipo_Cambio = parseFloat(_Tipo_Cambio).toFixed(3);
        $("#Tipo_Cambio_FormaPago").val(Tipo_Cambio);
        var _cadena = Cod_Moneda + "|" + Tipo_Cambio;
        $("#Tipo_Cambio_FormaPago").attr("data-value", _cadena);
    } else {
        var valor = $("#Tipo_Cambio_FormaPago").attr("data-value").split("|");
        if (valor[0] == Cod_Moneda) {
            $("#Tipo_Cambio_FormaPago").val(parseFloat(valor[1]));
        } else {
            var _Tipo_Cambio = 1;
            _Tipo_Cambio = variables.tipos_cambios.length == 0 ? "1" : variables.tipos_cambios[0].Venta;
            _Tipo_Cambio = parseFloat(_Tipo_Cambio).toFixed(3);
            $("#Tipo_Cambio_FormaPago").val(Tipo_Cambio);
        }
    }
}

function AceptarFormaPago(amodo) {

    switch (amodo) {
        case 0:
            $('#tablaBodyPagosMultiples tr').each(function (index) {

                listaFormaPago.push({
                    idComprobantePago: 0,
                    Item: index + 1,
                    IdMovimiento: 0,
                    CodTipoFormaPago: $(this).find("td").eq(0).attr("data-id"),
                    DesFormaPago: $(this).find("td").eq(0).text(),
                    CodMoneda: $(this).find("td").eq(1).text(),
                    Monto: $(this).find("td").eq(2).text(),
                    TipoCambio: $(this).find("td").eq(3).text(),
                    CuentaCajaBanco: $(this).find("td").eq(7).find("input").val(),
                    Fecha: $(this).find("td").eq(6).find("input").val()
                });
            });

            $("input[name=optCredito][value='credito']").prop("checked", true);
            $("#divContado").css("display", "none");
            $("#divCredito").css("display", "none");
            $("#divNroDias").css("display", "none");
            $("#divMoneda").css("display", "none");
            $("#divFormasPago").css("display", "none");
            $("#divTC").css("display", "none");
            $("#divMultiplesPagos").removeClass();
            $("#divMultiplesPagos").addClass("col-sm-12");
            $("#btnMultiplesPagos").addClass("btn-block");
            $("#btnMultiplesPagos").html('<i class="fa fa-money"></i>' + " PAGOS MULTIPLES");
            /*
              rbCredito.Checked = true;
                rbEfectivo.Visible = false;
                rbCredito.Visible = false;
                laCuentaCajaBanco.Visible = false;
                cbCuenta_CajaBancos.Visible = false;
                cbCodFormaPago.Visible = false;
                laDias.Visible = false;
                nudNroDias.Visible = false;
                laCodMoneda.Visible = false;
                cbCodMoneda.Visible = false;
                laTipoCambio.Visible = false;
                nudTipoCambio.Visible = false;
                  buMultiplesPagos.Size = new Size(200, 25);
                buMultiplesPagos.Text = "PAGOS MULTIPLES";
                aListaFormasPago = _FormaPago.aFormasPago;
            
              */

            $('#modal-otros-procesos').modal('hide');
            break;
        case 1:
            $('#modal-otros-procesos').modal('hide');
            break;
    }
}

function OcultarCompletarSaldo(Cod_Moneda) {
    //var  _Cod_Moneda = ""
    /*if($('input[name=Cod_Moneda_Forma_Pago]:checked').val() == 'soles')
        _Cod_Moneda = "PEN"
    if($('input[name=Cod_Moneda_Forma_Pago]:checked').val() == 'dolares')
        _Cod_Moneda = "USD"
    if($('input[name=Cod_Moneda_Forma_Pago]:checked').val() == 'euros')
        _Cod_Moneda = "EUR"*/
    var _Cod_Moneda = $("#Cod_Moneda_Forma_Pago").val();

    if ((_Cod_Moneda == Cod_Moneda || _Cod_Moneda == "PEN") && aSaldo != 0) $("#divCompSaldo").css("display", "true");else $("#divCompSaldo").css("display", "none");
}

function CargarConfiguracionDefaultFormaPago(variables, amodo, Cod_Moneda, Tipo_Cambio) {
    switch (amodo) {
        case 0:
            $("#divCreditoFormasPago").css("display", "none");

            $("#btnTotal").text("Total: " + Cod_Moneda + " " + (parseFloat(aMonto) / parseFloat(Tipo_Cambio)).toFixed(2));
            $("#btnTotal").attr("data-value", aMonto);

            if (Cod_Moneda != "PEN") {
                $("#divTipoCambioGlobal").css("display", "block");
            } else {
                $("#divTipoCambioGlobal").css("display", "none");
                $("#Tipo_Cambio_Global").val(1);
            }
            LlenarFormasPago(Cod_Moneda, Tipo_Cambio);
            CalcularSaldo(Cod_Moneda, Tipo_Cambio);
            $("#btnAceptarFormaPago").css("display", "none");
            OcultarCompletarSaldo(Cod_Moneda);
            $("#Cod_MonedaGlobal").text(Cod_Moneda);
            $("#divReferencia").css("display", "none");
            $("#divTipoCambio").css("display", "none");
            RecuperarTipoCambio(Cod_Moneda, variables, Tipo_Cambio);
            if (aSaldo == 0) $("#btnAgregarMontoFormaPago").css("display", "none");else $("#btnAgregarMontoFormaPago").css("display", "block");
            break;
        case 1:
            break;
    }
}

function CargarConfiguracionDefault(CodLibro, variables) {

    CambioMoneda(CodLibro);
    CambioTipoDocumento();
    CambioFormasPago(CodLibro);
    CambioCreditoContado();

    CargarSeries(CodLibro);

    $("#divExportacion").css("display", "none");
    CalcularTotal(CodLibro, variables);
    $("input[name=optCredito][value='contado']").prop("checked", true);
    CambioLicitacion();
}

function EsValidaLicitacion() {
    if ($("#divLicitacion").css("display") == 'block') {
        if ($("#optLicitacion").is(":checked")) {
            if ($("#Cod_Licitacion").val() != '') {
                return true;
            } else {
                return false;
            }
        } else {
            return true;
        }
    } else {
        return true;
    }
}

function EsValidoCredito(CodLibro, callback) {
    if ($('input[name=optCredito]:checked').val() == "credito" && $("#divCredito").css("display") == 'block') {
        TraerCredito(CodLibro, function (flag) {
            callback(flag);
        });
    } else {
        callback(true);
    }
}

function EsValidoSeries(CodLibro, callback) {
    var flag_ = false;
    if (!$("#optEsGasto").is(":checked")) {
        RecorrerTablaDetalles_Series(0, function (flag) {
            callback(flag);
        });
    } else {
        callback(true);
    }
}

function EsValido(CodLibro, callback) {
    var MontoMaximo = 0;
    if (!arrayValidacion.includes($("#Cod_FormaPago").val()) && $("#Cod_FormaPago").val() == '998' && !arrayValidacion.includes($("#Cuenta_CajaBancos").val())) {
        try {
            MontoMaximo = parseFloat($("#Cuenta_CajaBancos option:selected").text().split('[', ']')[1]);
        } catch (e) {
            MontoMaximo = 0;
        }
    }

    if ($("#divLicitacion").css("display") == 'block' && $("#optLicitacion").is(":checked")) {
        callback(EsValidaLicitacion());
    }

    if (!arrayValidacion.includes($("#Cliente").attr("data-id"))) {
        if ($("#Serie option:selected").text() != '') {
            if ($("#Numero").val() != '') {
                if ($("#Cod_TipoComprobante").val() != '') {
                    if ($("#tablaBody > tr").length > 0) {
                        if (MontoMaximo == 0 || parseFloat($("#Gran_Total").val()) <= MontoMaximo) {
                            if (EsValidaLicitacion()) {
                                EsValidoCredito(CodLibro, function (flag) {
                                    if (flag) {
                                        EsValidoSeries(CodLibro, function (flag) {
                                            if (flag) {
                                                callback(true);
                                            } else {
                                                toastr.error('Debe de Ingresar una Serie para Cada Producto', 'Error', { timeOut: 5000 });
                                                callback(false);
                                            }
                                        });
                                    } else {
                                        $("#Cliente").focus();
                                        callback(false);
                                    }
                                });
                            } else {
                                $("#Cod_Licitacion").focus();
                                callback(false);
                            }
                        } else {
                            toastr.error('Debe de seleccionar un Pago Adelantado que sea superior o igual al Monto Total de Comprobante', 'Error', { timeOut: 5000 });
                            callback(false);
                        }
                    } else {
                        toastr.error('Debe ingresar como minimo un Detalle en el Comprobante', 'Error', { timeOut: 5000 });
                        callback(false);
                    }
                } else {
                    toastr.error('Debe Selecionar un Comprobante', 'Error', { timeOut: 5000 });
                    callback(false);
                }
            } else {
                toastr.error('Debe ingresar un Numero para este Comprobante', 'Error', { timeOut: 5000 });
                callback(false);
            }
        } else {
            toastr.error('Debe ingresar o seleccionar una serie para este Comprobante', 'Error', { timeOut: 5000 });
            callback(false);
        }
    } else {
        toastr.error('Debe seleccionar un cliente si por defecto dejarlo en CLIENTES VARIOS', 'Error', { timeOut: 5000 });
        callback(false);
    }
}

function GenerarComprobante(CodLibro, variables) {
    try {

        EsValido(CodLibro, function (flag) {
            if (flag) AbrirModalConfirmacion(CodLibro, variables);
        });
    } catch (e) {
        console.log(e);
    }
}

function RecuperarNroTicketera(CodLibro, indiceVariables, variables, Serie, Cod_TipoComprobante, callback) {
    if (CodLibro == "14") {
        if (indiceVariables < variables.length) {
            if (variables[indiceVariables].Serie.toString() == Serie && variables[indiceVariables].Cod_TipoComprobante.toString() == Cod_TipoComprobante) {
                if (Cod_TipoComprobante == 'TKB' || Cod_TipoComprobante == 'TKF') {
                    callback(variables[indiceVariables].Nro_SerieTicketera.toString());
                } else {
                    RecuperarNroTicketera(CodLibro, indiceVariables + 1, variables, Serie, Cod_TipoComprobante, callback);
                }
            } else {
                RecuperarNroTicketera(CodLibro, indiceVariables + 1, variables, Serie, Cod_TipoComprobante, callback);
            }
        } else {
            callback("");
        }
    } else {
        callback("");
    }
}

function DeterminarTipoIGV(flagImpuesto, flagExportacion, Por_Impuesto, Tipo, SubTotal, callback) {
    var IGV = 0;
    var Cod_TipoIGV = '';
    if (flagImpuesto == true) {
        if (Tipo == 'GRA') {
            Cod_TipoIGV = '10';
            IGV = (parseFloat(SubTotal) / (1 + parseFloat(Por_Impuesto)) * (parseFloat(Por_Impuesto) / 100)).toFixed(2);
        }

        if (Tipo == 'GRT') {
            Cod_TipoIGV = '13';
        }
    } else {
        if (Tipo == 'GRA') {
            Cod_TipoIGV = '20';
        }
        if (Tipo == 'GRT') {
            Cod_TipoIGV = '21';
        }
    }

    if (Tipo == 'INA') {
        Cod_TipoIGV = '30';
    }

    if (Tipo == 'EXO') {
        Cod_TipoIGV = '20';
    }

    if (flagExportacion) {
        Cod_TipoIGV = '40';
        IGV = 0;
    }
    callback(IGV, Cod_TipoIGV);
}

function GuardarLicitacion(Id_ClienteProveedor, Cod_Licitacion, Nro_Detalle, id_ComprobantePago, Flag_Cancelado, Obs_LicitacionesM, callback) {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Id_ClienteProveedor: Id_ClienteProveedor,
            Cod_Licitacion: Cod_Licitacion,
            Nro_Detalle: Nro_Detalle,
            id_ComprobantePago: id_ComprobantePago,
            Flag_Cancelado: Flag_Cancelado,
            Obs_LicitacionesM: Obs_LicitacionesM
        })
    };

    fetch(_constantes.URL + '/comprobantes_pago_api/guardar_licitacion_comprobante', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            callback(true);
        } else {
            callback(false);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function GuardarFormaPago(id_ComprobantePago, Item, Des_FormaPago, Cod_TipoFormaPago, Cuenta_CajaBanco, Id_Movimiento, TipoCambio, Cod_Moneda, Monto, Cod_Plantilla, Obs_FormaPago, Fecha, callback) {

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            id_ComprobantePago: id_ComprobantePago,
            Item: Item,
            Des_FormaPago: Des_FormaPago,
            Cod_TipoFormaPago: Cod_TipoFormaPago,
            Cuenta_CajaBanco: Cuenta_CajaBanco,
            Id_Movimiento: Id_Movimiento,
            TipoCambio: TipoCambio,
            Cod_Moneda: Cod_Moneda,
            Monto: Monto,
            Cod_Plantilla: Cod_Plantilla,
            Obs_FormaPago: Obs_FormaPago,
            Fecha: Fecha
        })
    };

    fetch(_constantes.URL + '/formas_pago_api/guardar_forma_pago', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            callback(true);
        } else {
            callback(false);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function GuardarFormaPagoRecursivo(indiceFormaPago, idComprobante, callback) {

    if (indiceFormaPago < listaFormaPago.length) {
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            credentials: 'same-origin',
            body: JSON.stringify({
                id_ComprobantePago: idComprobante,
                Item: listaFormaPago[indiceFormaPago].Item,
                Des_FormaPago: listaFormaPago[indiceFormaPago].DesFormaPago,
                Cod_TipoFormaPago: listaFormaPago[indiceFormaPago].CodTipoFormaPago,
                Cuenta_CajaBanco: listaFormaPago[indiceFormaPago].CuentaCajaBanco,
                Id_Movimiento: listaFormaPago[indiceFormaPago].IdMovimiento,
                TipoCambio: listaFormaPago[indiceFormaPago].TipoCambio,
                Cod_Moneda: listaFormaPago[indiceFormaPago].CodMoneda,
                Monto: listaFormaPago[indiceFormaPago].Monto,
                Cod_Plantilla: null,
                Obs_FormaPago: null,
                Fecha: listaFormaPago[indiceFormaPago].Fecha
            })
        };

        fetch(_constantes.URL + '/formas_pago_api/guardar_forma_pago', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == 'ok') {
                GuardarFormaPagoRecursivo(indiceFormaPago + 1, idComprobante, callback);
            } else {
                callback(false);
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    } else {
        callback(true);
    }
}

function GuardarOperacionBancaria(callback) {
    var Cod_CuentaBancaria = $("#Cod_CuentaBancaria").val();
    var Nro_Operacion = $("#Cuenta_CajaBancos option:selected").text();
    var Des_Movimiento = $("#Cod_FormaPago option:selected").text();
    var Cod_TipoOperacionBancaria = '';
    if ($("#Cod_FormaPago").val() == "007") {
        Cod_TipoOperacionBancaria = "006";
    } else {
        Cod_TipoOperacionBancaria = "001";
    }
    var Fecha = $("#Fecha").val();
    var Monto = (CodLibro == "08" ? -1 : 1) * parseFloat($("#Gran_Total").val());
    var TipoCambio = $("#Tipo_Cambio").val();
    var Beneficiario = $("#Cliente").val();
    var Nro_Cheque = '';
    var Cod_Plantilla = null;
    if ($("#Cod_FormaPago").val() == "007") {
        Nro_Cheque = "00000000" + parseInt($("#Cuenta_CajaBancos option:selected").text());
    }
    var Id_ComprobantePago = idComprobante;
    var Obs_Movimiento = '';

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Cod_CuentaBancaria: Cod_CuentaBancaria,
            Nro_Operacion: Nro_Operacion,
            Des_Movimiento: Des_Movimiento,
            Cod_TipoOperacionBancaria: Cod_TipoOperacionBancaria,
            Fecha: Fecha,
            Monto: Monto,
            TipoCambio: TipoCambio,
            Cod_Plantilla: Cod_Plantilla,
            Nro_Cheque: Nro_Cheque,
            Beneficiario: Beneficiario,
            Id_ComprobantePago: Id_ComprobantePago,
            Obs_Movimiento: Obs_Movimiento
        })
    };

    fetch(_constantes.URL + '/cuentas_bancarias_api/guardar_cuenta_movimiento', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            callback(true);
        } else {
            callback(false);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function GuardarSeries(indiceSerie, idComprobante, idDetalle, arraySeries, callback) {
    if (indiceSerie < arraySeries.length) {
        var Cod_Tabla = "CAJ_COMPROBANTE_PAGO";
        var Id_Tabla = idComprobante;
        var Item = idDetalle;
        var Serie = arraySeries[indiceSerie].Serie;
        var Fecha_Vencimiento = arraySeries[indiceSerie].Fecha;
        var Obs_Serie = arraySeries[indiceSerie].Observacion;

        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            credentials: 'same-origin',
            body: JSON.stringify({
                Cod_Tabla: Cod_Tabla,
                Id_Tabla: Id_Tabla,
                Item: Item,
                Serie: Serie,
                Fecha_Vencimiento: Fecha_Vencimiento,
                Obs_Serie: Obs_Serie
            })
        };

        fetch(_constantes.URL + '/series_api/guardar_serie', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == 'ok') {
                GuardarSeries(indiceSerie + 1, idComprobante, idDetalle, arraySeries, callback);
            } else {
                callback(false);
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    } else {
        callback(true);
    }
}

function RecuperarNroDetalleXLicitacionProducto(Id_ClienteProveedor, Cod_Licitacion, Id_Producto, callback) {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Id_ClienteProveedor: Id_ClienteProveedor,
            Cod_Licitacion: Cod_Licitacion,
            Id_Producto: Id_Producto
        })
    };

    fetch(_constantes.URL + '/comprobantes_pago_api/get_nro_detalle_by_licitacion_producto', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            if (res.data.nro_detalle.length > 0) {
                var Nro_Detalle = res.data.nro_detalle[0].Nro_Detalle;
                callback(Nro_Detalle);
            } else {
                callback(-1);
            }
        } else {
            callback(-1);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function EmisionCompletaDetalles(indiceDetalle, CodLibro, variables, idComprobante, callback) {

    if (indiceDetalle < $("#tablaBody > tr").length) {
        //if($("#optEsGasto").is(":checked") || parseInt($('#tablaBody > tr:eq('+indiceDetalle+')').find('td').eq(2).find('input').val())==0){ 
        var id_Detalle = indiceDetalle + 1;
        var Id_Producto = $("#optEsGasto").is(":checked") || parseInt($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(2).find('input').val()) == 0 ? 0 : parseInt($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(2).find('input').val());
        var Cantidad = parseFloat($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(8).find('input').val());
        var Despachado = 0;
        if ($("#optDescargar").is(":checked")) {
            Despachado = parseFloat($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(9).text());
        }
        var Descripcion = $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(4).find('input').val();
        var PrecioUnitario = 0;
        var Sub_Total = 0;
        if ($("#ckbIncluyeIGV").is(":checked")) {
            PrecioUnitario = parseFloat($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(10).find('input').val());
            Sub_Total = parseFloat($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(12).find('input').val()).toFixed(2);
        } else {
            PrecioUnitario = parseFloat($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(10).find('input').val()) * (1 + parseFloat(variables.empresa.Por_Impuesto) / 100);
            Sub_Total = (parseFloat($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(12).find('input').val()) * (1 + parseFloat(variables.empresa.Por_Impuesto) / 100)).toFixed(2);
        }
        var Descuento = parseFloat($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(11).find('input').attr("data-value"));
        var Obs_ComprobanteD = $("#optEsGasto").is(":checked") || parseInt($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(2).find('input').val()) == 0 ? null : $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(15).text();
        var Cod_Manguera = $("#optEsGasto").is(":checked") || parseInt($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(2).find('input').val()) == 0 ? null : $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(13).text();
        var Cod_Almacen = $("#optEsGasto").is(":checked") || parseInt($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(2).find('input').val()) == 0 ? null : $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(5).find('input').attr("data-id");
        var Cod_UnidadMedida = $("#optEsGasto").is(":checked") || parseInt($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(2).find('input').val()) == 0 ? null : $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(6).find('input').attr("data-id");
        var Flag_AplicaImpuesto = $("#ckbAplicaImpuesto").is(":checked");
        var Formalizado = 0;
        var Tipo = $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(14).text();
        var Valor_NoOneroso = 0;
        var Cod_TipoISC = '';
        var Porcentaje_ISC = 0;
        var ISC = 0;
        //DeterminarTipoIGV(flagImpuesto,flagExportacion,Por_Impuesto,Tipo,SubTotal,callback)
        var Flag_Exportacion = $("#divExportacion").css("display") == "block" && $("#optExportacion").is(":checked") ? true : false;
        DeterminarTipoIGV(variables.empresa.Flag_ExoneradoImpuesto, Flag_Exportacion, variables.empresa.Por_Impuesto, $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(14).text(), parseFloat(parseFloat($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(12).find('input').val()).toFixed(2)), function (IGV, Cod_TipoIGV) {
            var Porcentaje_IGV = parseFloat(variables.empresa.Por_Impuesto);

            var parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                credentials: 'same-origin',
                body: JSON.stringify({
                    id_ComprobantePago: idComprobante,
                    id_Detalle: id_Detalle,
                    Id_Producto: Id_Producto,
                    Cod_Almacen: Cod_Almacen,
                    Cantidad: Cantidad,
                    Cod_UnidadMedida: Cod_UnidadMedida,
                    Despachado: Despachado,
                    Descripcion: Descripcion,
                    PrecioUnitario: PrecioUnitario,
                    Descuento: Descuento,
                    Sub_Total: Sub_Total,
                    Tipo: Tipo,
                    Obs_ComprobanteD: Obs_ComprobanteD,
                    Cod_Manguera: Cod_Manguera,
                    Flag_AplicaImpuesto: Flag_AplicaImpuesto,
                    Formalizado: Formalizado,
                    Valor_NoOneroso: Valor_NoOneroso,
                    Cod_TipoISC: Cod_TipoISC,
                    Porcentaje_ISC: Porcentaje_ISC,
                    ISC: ISC,
                    Cod_TipoIGV: Cod_TipoIGV,
                    Porcentaje_IGV: Porcentaje_IGV,
                    IGV: IGV
                })
            };

            fetch(_constantes.URL + '/comprobantes_pago_api/guardar_comprobante_pago_detalle', parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                console.log(res);
                //callback(false)
                if (res.respuesta == 'ok') {
                    if ($("#divLicitacion").css("display") == "block" && $("#optLicitacion").is(":checked")) {
                        var Id_ClienteProveedor = $("#Cliente").attr("data-id");
                        var Cod_Licitacion = $("#Cod_Licitacion").val();
                        RecuperarNroDetalleXLicitacionProducto(Id_ClienteProveedor, Cod_Licitacion, Id_Producto, function (result) {
                            if (result != -1) {
                                var Nro_Detalle = result;
                                var id_ComprobantePago = idComprobante;
                                var Flag_Cancelado = false;
                                var Obs_LicitacionesM = "";
                                GuardarLicitacion(Id_ClienteProveedor, Cod_Licitacion, Nro_Detalle, id_ComprobantePago, Flag_Cancelado, Obs_LicitacionesM, function (flag) {
                                    if (flag) {
                                        var Series = JSON.parse($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(16).find("input").val());
                                        GuardarSeries(0, idComprobante, id_Detalle, Series, function (flag) {
                                            if (flag) {
                                                EmisionCompletaDetalles(indiceDetalle + 1, CodLibro, variables, idComprobante, callback);
                                            } else {
                                                callback(false);
                                            }
                                        });
                                        //EmisionCompletaDetalles(indiceDetalle+1,CodLibro,variables,idComprobante)
                                    } else {
                                        callback(false);
                                    }
                                });
                            } else {
                                callback(false);
                            }
                        });
                    } else {
                        var Series = JSON.parse($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(16).find("input").val());
                        GuardarSeries(0, idComprobante, id_Detalle, Series, function (flag) {
                            if (flag) {
                                EmisionCompletaDetalles(indiceDetalle + 1, CodLibro, variables, idComprobante, callback);
                            } else {
                                callback(false);
                            }
                        });
                    }
                } else {
                    callback(false);
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        });
        //} 
    } else {
        callback(true);
    }
}

function EmisionCompleta(CodLibro, variables) {
    GuardarCamposEntidadComprobante(CodLibro, variables);
}

function GuardarCamposEntidadComprobante(CodLibro, variables) {
    return regeneratorRuntime.async(function GuardarCamposEntidadComprobante$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    AsyncCalcularTotal(CodLibro, variables).then(function (data) {
                        return RecuperarParametrosEmisionCompleta(CodLibro, variables, data);
                    });

                case 1:
                case 'end':
                    return _context.stop();
            }
        }
    }, null, this);
}

/*
function CargarConfirmacionComprobante(){
    var el = yo`
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">Ã—</span>
                </button>
                <h4 class="modal-title"> Confirmacion </h4>
            </div>
            <div class="modal-body">
                <iframe class="embed-responsive-item" src="${URL+'/media/documento.pdf'}"
                webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>
            </div>
            <div class="modal-footer"> 
                <button type="button" class="btn btn-danger">Cancelar</button>
            </div>
        </div> 
    </div>`


    var modal_alerta = document.getElementById('modal-alerta');
    empty(modal_alerta).appendChild(el);
    $('#modal-alerta').modal()
}

function CargarIframe(){
    var el = yo`
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">Ã—</span>
                </button>
                <h4 class="modal-title"> Confirmacion </h4>
            </div>
            <div class="modal-body">
                <iframe class="embed-responsive-item" src="${URL+'/media/documento.pdf'}"
                webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>
            </div>
            <div class="modal-footer"> 
                <button type="button" class="btn btn-danger">Cancelar</button>
            </div>
        </div> 
    </div>`


    var modal_alerta = document.getElementById('modal-alerta');
    empty(modal_alerta).appendChild(el);
    $('#modal-alerta').modal()
}*/

function ConvertTabletoJson(callback) {
    var myRows = [];
    var $headers = $("th");
    var $rows = $("#tablaBody tr").each(function (index) {
        var $cells = $(this).find("td");
        myRows[index] = {};
        $cells.each(function (cellIndex) {
            switch (cellIndex) {
                case 4:
                    myRows[index]['DESCRIPCION'] = $(this).find('input').val();
                    break;
                case 6:
                    myRows[index]['UNIDAD'] = $(this).find('input').val();
                    break;
                case 8:
                    myRows[index]['CANTIDAD'] = $(this).find('input').val();
                    break;
                case 10:
                    myRows[index]['PRECIO_UNITARIO'] = $(this).find('input').val();
                    break;
                case 11:
                    myRows[index]['DESCUENTO'] = $(this).find('input').val();
                    break;
                case 12:
                    myRows[index]['SUBTOTAL'] = $(this).find('input').val();
                    break;
            }
        });
    });
    callback(myRows);
}

function PrepararImpresion(arrayData) {

    ConvertTabletoJson(function (arrayJSON) {

        arrayData.cuerpo.DETALLES = arrayJSON;
        (0, _pdf.CargarPDFModal)(arrayData.cuerpo.DOCUMENTO, arrayData.cuerpo.SERIE + "-" + arrayData.cuerpo.NUMERO, "TOTAL: " + arrayData.cuerpo.MONEDA_ABREV + " " + arrayData.cuerpo.TOTAL, function (flag) {
            if (flag) {
                jsreport.serverUrl = _constantes.URL_REPORT;
                var request = {
                    template: {
                        name: arrayData.nombreTemplate,
                        recipe: "chrome-pdf",
                        engine: 'handlebars',
                        chrome: {
                            width: arrayData.ancho,
                            height: arrayData.alto
                        }
                    },
                    data: arrayData.cuerpo
                };

                jsreport.renderAsync(request).then(function (res) {
                    jsreport.render(document.getElementById('divPDF'), request);
                    $('#divPDF').waitMe('hide');
                }).catch(function (e) {
                    console.log(e);
                    toastr.error('Hubo un error al generar el documento. Intentelo mas tarde', 'Error', { timeOut: 5000 });
                    $('#modal-alerta').modal('hide');
                    $('#divPDF').waitMe('hide');
                });
            }
        });
    });
}

function RecuperarParametrosEmisionCompleta(CodLibro, variables, data) {
    run_waitMe($('#modal-proceso'), 1, "ios", "Realizando operaciÃ³n...");
    var Cod_TipoComprobante = $("#Cod_TipoComprobante").val();
    var Cod_TipoOperacion = Cod_TipoDocReferencia;
    var Serie = $("#Serie option:selected").text();
    var Numero = $("#Numero").val().trim();
    if (CodLibro == "14" && (Cod_TipoComprobante == "TKB" || Cod_TipoComprobante == "TKF" || Cod_TipoComprobante == "BE" || Cod_TipoComprobante == "FE" || Cod_TipoComprobante == "NP")) {
        Numero = "";
    }
    var Id_Cliente = $("#Cliente").attr("data-id");
    var Cod_TipoDoc = $("#Cod_TipoDoc").val();
    var Doc_Cliente = $("#Nro_Documento").val();
    var Nom_Cliente = $("#Cliente").val();
    var Direccion_Cliente = $("#Direccion").val();
    var FechaEmision = $("#Fecha").val();
    Date.prototype.addDays = function (days) {
        var dat = new Date(this.valueOf());
        dat.setDate(dat.getDate() + days);
        return dat;
    };
    var FechaDiasMas = new Date($("#Fecha").val()).addDays(parseInt($("#Nro_Dias").val()));
    var mes = FechaDiasMas.getMonth() + 1;
    var dia = FechaDiasMas.getDate();
    var FechaDiasMas_ = FechaDiasMas.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);
    var FechaVencimiento = $('input[name=optCredito]:checked').val() == "credito" ? FechaDiasMas_ : $("#Fecha").val();
    var FechaCancelacion = $("#Fecha").val();
    var TipoCambio = $("#Tipo_Cambio").val();
    var Flag_Anulado = false;
    var Glosa = '';
    if ($("#optEsGasto").is(":checked")) {
        Glosa = $('#tablaBody > tr:eq(0)').find('td').eq(4).find('input').val();
    } else {
        Glosa = $("#Glosa").val();
    }
    var Flag_Despachado = $("#optDescargar").is(":checked");
    var Cod_FormaPago = '';
    if ($('input[name=optCredito]:checked').val() == "contado") {
        Cod_FormaPago = $("#Cod_FormaPago").val();
    } else {
        Cod_FormaPago = '999';
    }
    var Descuento_Total = $("#Descuento_Global").val();
    var Cod_Moneda = $("#Cod_Moneda").val();
    var Impuesto = 0;
    if ($("#ckbAplicaImpuesto").is(":checked")) {
        Impuesto = $("#Impuesto").val();
    } else {
        Impuesto = 0;
    }

    $("#Gran_Total").val(parseFloat($("#Gran_Total").val()).toFixed(2));
    var Total = parseFloat($("#Gran_Total").val()).toFixed(2);
    var Id_GuiaRemision = 0;
    var GuiaRemision = null;
    var Nro_Ticketera = '';
    if ($("#Guia").val().trim() != "") {
        try {
            Id_GuiaRemision = parseInt($("#Guia").attr("data-id"));
        } catch (e) {
            Id_GuiaRemision = 0;
        }
        GuiaRemision = $("#Guia").val();
    }
    var id_ComprobanteRef = 0;
    var Cod_RegimenPercepcion = '';
    var Tasa_Percepcion = 0;
    var Placa_Vehiculo = $("#placaVehiculo").val().trim();
    var Cod_TipoDocReferencia = '';
    var Nro_DocReferencia = '';
    var Valor_Resumen = '';
    var Valor_Firma = '';
    var Cod_EstadoComprobante = 'EMI';
    var Motivo_Anulacion = '';
    var Otros_Cargos = 0;
    var Otros_Tributos = 0;
    var Obs_Comprobante = obs_xml;
    var Cod_Plantilla = null;

    RecuperarNroTicketera(CodLibro, 0, variables, Serie, Cod_TipoComprobante, function (Nro_Ticketera) {

        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            credentials: 'same-origin',
            body: JSON.stringify({
                Cod_Libro: CodLibro,
                Cod_TipoOperacion: Cod_TipoOperacion,
                Cod_TipoComprobante: Cod_TipoComprobante,
                Serie: Serie,
                Numero: Numero,
                Id_Cliente: Id_Cliente,
                Cod_TipoDoc: Cod_TipoDoc,
                Doc_Cliente: Doc_Cliente,
                Nom_Cliente: Nom_Cliente,
                Direccion_Cliente: Direccion_Cliente,
                FechaEmision: FechaEmision,
                FechaVencimiento: FechaVencimiento,
                FechaCancelacion: FechaCancelacion,
                Glosa: Glosa,
                TipoCambio: TipoCambio,
                Flag_Anulado: Flag_Anulado,
                Flag_Despachado: Flag_Despachado,
                Cod_FormaPago: Cod_FormaPago,
                Descuento_Total: Descuento_Total,
                Cod_Moneda: Cod_Moneda,
                Impuesto: Impuesto,
                Total: Total,
                Obs_Comprobante: Obs_Comprobante,
                Id_GuiaRemision: Id_GuiaRemision,
                GuiaRemision: GuiaRemision,
                id_ComprobanteRef: id_ComprobanteRef,
                Cod_Plantilla: Cod_Plantilla,
                Nro_Ticketera: Nro_Ticketera,
                Cod_RegimenPercepcion: Cod_RegimenPercepcion,
                Tasa_Percepcion: Tasa_Percepcion,
                Placa_Vehiculo: Placa_Vehiculo,
                Cod_TipoDocReferencia: Cod_TipoDocReferencia,
                Nro_DocReferencia: Nro_DocReferencia,
                Valor_Resumen: Valor_Resumen,
                Valor_Firma: Valor_Firma,
                Cod_EstadoComprobante: Cod_EstadoComprobante,
                Motivo_Anulacion: Motivo_Anulacion,
                Otros_Cargos: Otros_Cargos,
                Otros_Tributos: Otros_Tributos
            })

            //---- json pdf
        };var dataArray = {
            nombreTemplate: Cod_TipoComprobante == 'TKF' || Cod_TipoComprobante == 'TKB' ? _constantes.NOMBRES_DOC[0].TKF : _constantes.NOMBRES_DOC[1].FE,
            ancho: Cod_TipoComprobante == 'TKF' || Cod_TipoComprobante == 'TKB' ? _constantes.NOMBRES_DOC[0].ancho : _constantes.NOMBRES_DOC[1].ancho,
            alto: Cod_TipoComprobante == 'TKF' || Cod_TipoComprobante == 'TKB' ? _constantes.NOMBRES_DOC[0].alto : _constantes.NOMBRES_DOC[1].alto,
            cuerpo: {

                COD_TIPOCOMPROBANTE: Cod_TipoComprobante,
                DOCUMENTO: $("#Cod_TipoComprobante option:selected").text(),
                SERIE: Serie,
                NUMERO: Numero,
                FLAG_ANULADO: false,
                MOTIVO_ANULACION: '',
                CLIENTE: Nom_Cliente,
                COD_DOCCLIENTE: Cod_TipoDoc,
                RUC_CLIENTE: Doc_Cliente,
                DIRECCION_CLIENTE: Direccion_Cliente,
                FECHA_EMISION: FechaEmision,
                FECHA_VENCIMIENTO: FechaVencimiento,
                FORMA_PAGO: '',
                GLOSA: Glosa,
                OBSERVACIONES: Obs_Comprobante,
                MONEDA_ABREV: Cod_Moneda == "PEN" ? "S/" : Cod_Moneda == "USD" ? "$" : "â‚¬",
                MONEDA: Cod_Moneda == "PEN" ? "SOLES" : Cod_Moneda == "USD" ? "DOLARES" : "EUROS",
                ESCRITURA_MONTO: $("#laSON").text(),
                GRAVADAS: $("#subtotal").val(),
                EXONERADAS: $("#Exoneradas").val(),
                GRATUITAS: $("#Gratuitas").val(),
                INAFECTAS: '0',
                DESCUENTO: Descuento_Total,
                DES_IMPUESTO: variables.empresa.Des_Impuesto,
                IMPUESTO: variables.empresa.Por_Impuesto,
                IGV: Impuesto,
                TOTAL: Total,
                DETALLES: {}
            }
            //-----------------


        };fetch(_constantes.URL + '/comprobantes_pago_api/guardar_comprobante_pago', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            console.log(res);
            if (res.respuesta == 'ok') {
                var idComprobante = res.data[0].valor;
                var Numero = res.data[1].valor;
                dataArray.cuerpo.NUMERO = Numero;

                EmisionCompletaDetalles(0, CodLibro, variables, res.data[0].valor, function (flag) {
                    if (flag) {

                        if (listaFormaPago.length == 0) {
                            if ($('input[name=optCredito]:checked').val() == 'contado') {
                                var id_ComprobantePago = idComprobante;
                                var Item = 1;
                                var Monto = $("#Gran_Total").val();
                                var Cod_Moneda = $("#Cod_Moneda").val();
                                var TipoCambio = $("#Tipo_Cambio").val();
                                var Des_FormaPago = $("#Cod_FormaPago option:selected").text();
                                var Cod_TipoFormaPago = $("#Cod_FormaPago").val();
                                var Cuenta_CajaBanco = '';
                                var Id_Movimiento = null;
                                var Fecha = $("#Fecha").val();

                                if ($("#Cod_FormaPago").val() == "998") {
                                    Id_Movimiento = parseInt($("#Cuenta_CajaBancos").val());
                                }

                                if ($("#Cod_FormaPago").val() == "008") {
                                    Cuenta_CajaBanco = '';
                                    GuardarFormaPago(id_ComprobantePago, Item, Des_FormaPago, Cod_TipoFormaPago, Cuenta_CajaBanco, Id_Movimiento, TipoCambio, Cod_Moneda, Monto, null, null, Fecha, function (flagFP) {
                                        if (flagFP) {
                                            toastr.success('Se registro correctamente el comprobante', 'Confirmacion', { timeOut: 5000 });
                                            $("#modal-proceso").modal("hide");
                                            $('#modal-proceso').waitMe('hide');

                                            if (CodLibro == '14') {
                                                dataArray.cuerpo.FORMA_PAGO = Des_FormaPago;
                                                PrepararImpresion(dataArray);
                                            } else {
                                                $("#modal-alerta").modal("hide");
                                            }
                                        } else {
                                            toastr.error('Ocurrio un error al momento de guardar la forma de pago.', 'Error', { timeOut: 5000 });
                                            $("#modal-alerta").modal("hide");
                                            $('#modal-proceso').waitMe('hide');
                                        }
                                    });
                                } else {
                                    if ($("#Cod_FormaPago").val() == "011" || $("#Cod_FormaPago").val() == "033") {
                                        Cuenta_CajaBanco = $("#Cuenta_CajaBancos option:selected").text();
                                        GuardarOperacionBancaria(function (flag) {
                                            if (flag) {

                                                GuardarFormaPago(id_ComprobantePago, Item, Des_FormaPago, Cod_TipoFormaPago, Cuenta_CajaBanco, Id_Movimiento, TipoCambio, Cod_Moneda, Monto, null, null, Fecha, function (flagFP) {
                                                    if (flagFP) {
                                                        toastr.success('Se registro correctamente el comprobante', 'Confirmacion', { timeOut: 5000 });
                                                        $("#modal-proceso").modal("hide");
                                                        $('#modal-proceso').waitMe('hide');

                                                        if (CodLibro == '14') {
                                                            dataArray.cuerpo.FORMA_PAGO = Des_FormaPago;
                                                            PrepararImpresion(dataArray);
                                                        } else {
                                                            $("#modal-alerta").modal("hide");
                                                        }
                                                    } else {
                                                        toastr.error('Ocurrio un error al momento de guardar la forma de pago.', 'Error', { timeOut: 5000 });
                                                        $("#modal-alerta").modal("hide");
                                                        $('#modal-proceso').waitMe('hide');
                                                    }
                                                });
                                            } else {
                                                toastr.error('Ocurrio un error al momento de la guardar operacion bancaria.', 'Error', { timeOut: 5000 });
                                                $("#modal-alerta").modal("hide");
                                                $('#modal-proceso').waitMe('hide');
                                            }
                                        });
                                    } else {
                                        Cuenta_CajaBanco = $("#Cuenta_CajaBancos option:selected").text();
                                        GuardarFormaPago(id_ComprobantePago, Item, Des_FormaPago, Cod_TipoFormaPago, Cuenta_CajaBanco, Id_Movimiento, TipoCambio, Cod_Moneda, Monto, null, null, Fecha, function (flagFP) {
                                            if (flagFP) {
                                                toastr.success('Se registro correctamente el comprobante', 'Confirmacion', { timeOut: 5000 });
                                                $("#modal-proceso").modal("hide");
                                                $('#modal-proceso').waitMe('hide');

                                                if (CodLibro == '14') {
                                                    dataArray.cuerpo.FORMA_PAGO = Des_FormaPago;
                                                    PrepararImpresion(dataArray);
                                                } else {
                                                    $("#modal-alerta").modal("hide");
                                                }
                                            } else {
                                                toastr.error('Ocurrio un error al momento de guardar la forma de pago.', 'Error', { timeOut: 5000 });
                                                $("#modal-alerta").modal("hide");
                                                $('#modal-proceso').waitMe('hide');
                                            }
                                        });
                                    }
                                }
                            }
                        } else {
                            if (listaFormaPago.length == 1) {

                                GuardarFormaPago(idComprobante, listaFormaPago[0].Item, listaFormaPago[0].DesFormaPago, listaFormaPago[0].CodTipoFormaPago, listaFormaPago[0].CuentaCajaBanco, listaFormaPago[0].IdMovimiento, listaFormaPago[0].TipoCambio, listaFormaPago[0].CodMoneda, listaFormaPago[0].Monto, null, null, listaFormaPago[0].Fecha, function (flagFP) {
                                    if (flagFP) {
                                        var parametros1 = {
                                            method: 'POST',
                                            headers: {
                                                Accept: 'application/json',
                                                'Content-Type': 'application/json'
                                            },
                                            credentials: 'same-origin',
                                            body: JSON.stringify({
                                                Cod_Libro: CodLibro,
                                                Cod_TipoOperacion: Cod_TipoOperacion,
                                                Cod_TipoComprobante: Cod_TipoComprobante,
                                                Serie: Serie,
                                                Numero: Numero,
                                                Id_Cliente: Id_Cliente,
                                                Cod_TipoDoc: Cod_TipoDoc,
                                                Doc_Cliente: Doc_Cliente,
                                                Nom_Cliente: Nom_Cliente,
                                                Direccion_Cliente: Direccion_Cliente,
                                                FechaEmision: FechaEmision,
                                                FechaVencimiento: FechaVencimiento,
                                                FechaCancelacion: FechaCancelacion,
                                                Glosa: Glosa,
                                                TipoCambio: TipoCambio,
                                                Flag_Anulado: Flag_Anulado,
                                                Flag_Despachado: Flag_Despachado,
                                                Cod_FormaPago: listaFormaPago[0].CodTipoFormaPago,
                                                Descuento_Total: Descuento_Total,
                                                Cod_Moneda: Cod_Moneda,
                                                Impuesto: Impuesto,
                                                Total: Total,
                                                Obs_Comprobante: Obs_Comprobante,
                                                Id_GuiaRemision: Id_GuiaRemision,
                                                GuiaRemision: GuiaRemision,
                                                id_ComprobanteRef: id_ComprobanteRef,
                                                Cod_Plantilla: Cod_Plantilla,
                                                Nro_Ticketera: Nro_Ticketera,
                                                Cod_RegimenPercepcion: Cod_RegimenPercepcion,
                                                Tasa_Percepcion: Tasa_Percepcion,
                                                Placa_Vehiculo: Placa_Vehiculo,
                                                Cod_TipoDocReferencia: Cod_TipoDocReferencia,
                                                Nro_DocReferencia: Nro_DocReferencia,
                                                Valor_Resumen: Valor_Resumen,
                                                Valor_Firma: Valor_Firma,
                                                Cod_EstadoComprobante: Cod_EstadoComprobante,
                                                Motivo_Anulacion: Motivo_Anulacion,
                                                Otros_Cargos: Otros_Cargos,
                                                Otros_Tributos: Otros_Tributos
                                            })
                                        };

                                        fetch(_constantes.URL + '/comprobantes_pago_api/guardar_comprobante_pago', parametros1).then(function (req) {
                                            return req.json();
                                        }).then(function (res) {
                                            if (res.respuesta == 'ok') {
                                                toastr.success('Se registro correctamente el comprobante', 'Confirmacion', { timeOut: 5000 });
                                                $("#modal-proceso").modal("hide");
                                                $('#modal-proceso').waitMe('hide');

                                                if (CodLibro == '14') {
                                                    dataArray.cuerpo.FORMA_PAGO = Des_FormaPago;
                                                    PrepararImpresion(dataArray);
                                                } else {
                                                    $("#modal-alerta").modal("hide");
                                                }
                                            } else {
                                                toastr.error('Ocurrio un error al momento de guardar la forma de pago.', 'Error', { timeOut: 5000 });
                                                $("#modal-alerta").modal("hide");
                                                $('#modal-proceso').waitMe('hide');
                                            }
                                        }).catch(function (e) {
                                            console.log(e);
                                            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                                        });
                                    } else {
                                        toastr.error('Ocurrio un error al momento de guardar la forma de pago.', 'Error', { timeOut: 5000 });
                                        $("#modal-alerta").modal("hide");
                                        $('#modal-proceso').waitMe('hide');
                                    }
                                });
                            } else {

                                var parametros2 = {
                                    method: 'POST',
                                    headers: {
                                        Accept: 'application/json',
                                        'Content-Type': 'application/json'
                                    },
                                    credentials: 'same-origin',
                                    body: JSON.stringify({
                                        Cod_Libro: CodLibro,
                                        Cod_TipoOperacion: Cod_TipoOperacion,
                                        Cod_TipoComprobante: Cod_TipoComprobante,
                                        Serie: Serie,
                                        Numero: Numero,
                                        Id_Cliente: Id_Cliente,
                                        Cod_TipoDoc: Cod_TipoDoc,
                                        Doc_Cliente: Doc_Cliente,
                                        Nom_Cliente: Nom_Cliente,
                                        Direccion_Cliente: Direccion_Cliente,
                                        FechaEmision: FechaEmision,
                                        FechaVencimiento: FechaVencimiento,
                                        FechaCancelacion: FechaCancelacion,
                                        Glosa: Glosa,
                                        TipoCambio: TipoCambio,
                                        Flag_Anulado: Flag_Anulado,
                                        Flag_Despachado: Flag_Despachado,
                                        Cod_FormaPago: '999',
                                        Descuento_Total: Descuento_Total,
                                        Cod_Moneda: Cod_Moneda,
                                        Impuesto: Impuesto,
                                        Total: Total,
                                        Obs_Comprobante: Obs_Comprobante,
                                        Id_GuiaRemision: Id_GuiaRemision,
                                        GuiaRemision: GuiaRemision,
                                        id_ComprobanteRef: id_ComprobanteRef,
                                        Cod_Plantilla: Cod_Plantilla,
                                        Nro_Ticketera: Nro_Ticketera,
                                        Cod_RegimenPercepcion: Cod_RegimenPercepcion,
                                        Tasa_Percepcion: Tasa_Percepcion,
                                        Placa_Vehiculo: Placa_Vehiculo,
                                        Cod_TipoDocReferencia: Cod_TipoDocReferencia,
                                        Nro_DocReferencia: Nro_DocReferencia,
                                        Valor_Resumen: Valor_Resumen,
                                        Valor_Firma: Valor_Firma,
                                        Cod_EstadoComprobante: Cod_EstadoComprobante,
                                        Motivo_Anulacion: Motivo_Anulacion,
                                        Otros_Cargos: Otros_Cargos,
                                        Otros_Tributos: Otros_Tributos
                                    })
                                };

                                fetch(_constantes.URL + '/comprobantes_pago_api/guardar_comprobante_pago', parametros2).then(function (req) {
                                    return req.json();
                                }).then(function (res) {
                                    if (res.respuesta == 'ok') {
                                        GuardarFormaPagoRecursivo(0, idComprobante, function (flag) {
                                            if (flag) {
                                                toastr.success('Se registro correctamente el comprobante', 'Confirmacion', { timeOut: 5000 });
                                                $("#modal-proceso").modal("hide");
                                                $('#modal-proceso').waitMe('hide');
                                                if (CodLibro == '14') {
                                                    dataArray.cuerpo.FORMA_PAGO = Des_FormaPago;
                                                    PrepararImpresion(dataArray);
                                                } else {
                                                    $("#modal-alerta").modal("hide");
                                                }
                                            } else {
                                                toastr.error('Ocurrio un error al momento de guardar la forma de pago.', 'Error', { timeOut: 5000 });
                                                $("#modal-alerta").modal("hide");
                                                $('#modal-proceso').waitMe('hide');
                                            }
                                        });
                                    } else {
                                        toastr.error('Ocurrio un error al momento de guardar la comprobante de pago.', 'Error', { timeOut: 5000 });
                                        $("#modal-alerta").modal("hide");
                                        $('#modal-proceso').waitMe('hide');
                                    }
                                }).catch(function (e) {
                                    console.log(e);
                                    toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                                });
                            }
                        }
                    } else {
                        toastr.error('Ocurrio un error al momento de guardar los detalles del comprobante.', 'Error', { timeOut: 5000 });
                        $("#modal-alerta").modal("hide");
                        $('#modal-proceso').waitMe('hide');
                    }
                });
            } else {
                toastr.error('Ocurrio un error al momento de guardar el comprobante.', 'Error', { timeOut: 5000 });
                $("#modal-alerta").modal("hide");
                $('#modal-proceso').waitMe('hide');
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    });
}

function CargarTipoPrecio() {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_Producto: $("#Nom_Producto").attr("data-id"),
            Cod_Almacen: $("#Cod_Almacen").val(),
            Cod_UnidadMedida: $("#Cod_UnidadMedida").val()
        })
    };
    fetch(_constantes.URL + '/productos_serv_api/get_producto_precio', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var tipos_precios = res.data.productos;
            LlenarTipoPrecio(tipos_precios);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CargarUnidadMedida(Id_Producto, Cod_Almacen) {
    if (Id_Producto != undefined && Cod_Almacen != undefined) {
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Id_Producto: Id_Producto,
                Cod_Almacen: Cod_Almacen
            })
        };
        fetch(_constantes.URL + '/productos_serv_api/get_unidad_medida_by_producto_almacen', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == 'ok') {
                var unidades_medidas = res.data.unidades_medidas;
                LlenarUnidadMedida(unidades_medidas);
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    } else {

        if (!arrayValidacion.includes($("#Nom_Producto").attr("data-id"))) {
            var _parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Id_Producto: $("#Nom_Producto").attr("data-id"),
                    Cod_Almacen: $("#Cod_Almacen").val()
                })
            };
            fetch(_constantes.URL + '/productos_serv_api/get_unidad_medida_by_producto_almacen', _parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                if (res.respuesta == 'ok') {
                    var unidades_medidas = res.data.unidades_medidas;
                    LlenarUnidadMedida(unidades_medidas);
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        }
    }
}

function CargarLicitacionesCliente(Id_ClienteProveedor) {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_ClienteProveedor: Id_ClienteProveedor
        })
    };
    fetch(_constantes.URL + '/clientes_api/get_licitaciones_by_cliente', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var licitaciones = res.data.licitaciones;
            if (licitaciones.length > 0) {
                $("#divCodigoLicitacion").css("display", "block");
                $("#divLicitacion").css("display", "block");
                $("#optLicitacion").attr("checked", true);
                LlenarLicitaciones(licitaciones);
            } else {
                $("#divCodigoLicitacion").css("display", "none");
                $("#divLicitacion").css("display", "none");
                $("#optLicitacion").attr("checked", false);
            }
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CargarSeries(CodLibro) {
    if (CodLibro == "14") {
        var Cod_TipoComprobante = $("#Cod_TipoComprobante").val();
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Cod_TipoComprobante: Cod_TipoComprobante
            })
        };
        fetch(_constantes.URL + '/cajas_api/get_series_by_cod_caja_comprobante', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == 'ok') {
                var series = res.data.series;
                LlenarSeries(series);
                if (series.length > 0) {
                    TraerSiguienteNumero(CodLibro);
                } else {
                    $("#Serie").val("");
                    toastr.error('No se cuenta con ninguna Serie Autorizada para este tipo de Comprobante.\n\n Solicite al Administrador Autorice una serie para Continuar.', 'Error', { timeOut: 5000 });
                }
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });

        CambioComprobantes();
    }
}

function CargarAlmacenes(Id_Producto, Cod_Almacen) {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_Producto: Id_Producto
        })
    };
    fetch(_constantes.URL + '/almacenes_api/get_almacen_by_producto', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            LlenarAlmacenes(res.data.almacenes, Cod_Almacen);
        } else {
            LlenarAlmacenes([]);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CambioMonedaFormaPagoMasterCard() {
    if ($('input[name=Cod_FormaPago_Modal]:checked').val() == "mastercard") {
        $("#divReferencia").css("display", "block");
    } else {
        $("#divReferencia").css("display", "none");
    }
}

function CambioMonedaFormaPagoVisa() {
    if ($('input[name=Cod_FormaPago_Modal]:checked').val() == "visa") {
        $("#divReferencia").css("display", "block");
    } else {
        $("#divReferencia").css("display", "none");
    }
}

function CambioMonedaComprobante(Cod_Moneda, variables, Tipo_Cambio) {
    switch ($('#Cod_Moneda_Forma_Pago').val()) {
        case 'PEN':
            CambioMonedaFormaPagoSoles(Cod_Moneda);
            break;
        case 'USD':
            CambioMonedaFormaPagoDolares(Cod_Moneda, variables, Tipo_Cambio);
            break;
        case 'EUR':
            CambioMonedaFormaPagoEuros(Cod_Moneda, variables, Tipo_Cambio);
            break;
    }
}

function CambioMonedaFormaPagoSoles(Cod_Moneda) {
    //if($('input[name=Cod_Moneda_Forma_Pago]:checked').val()=="soles"){
    if ($("#Cod_Moneda_Forma_Pago").val() == 'PEN') {
        $("#divTipoCambio").css("display", "none");
    } else {
        $("#divTipoCambio").css("display", "block");
    }
    OcultarCompletarSaldo(Cod_Moneda);
}

function CambioMonedaFormaPagoDolares(Cod_Moneda, variables, Tipo_Cambio) {
    var _CodMoneda = "";
    //if($('input[name=Cod_Moneda_Forma_Pago]:checked').val()=="dolares"){
    if ($("#Cod_Moneda_Forma_Pago").val() == 'USD') {
        _CodMoneda = "USD";
        $("#divTipoCambio").css("display", "block");
    } else {
        $("#divTipoCambio").css("display", "none");
    }
    RecuperarTipoCambio(_CodMoneda, variables, Tipo_Cambio);
    OcultarCompletarSaldo(Cod_Moneda);
}

function CambioMonedaFormaPagoEuros(Cod_Moneda, variables, Tipo_Cambio) {
    var _CodMoneda = "";
    //if($('input[name=Cod_Moneda_Forma_Pago]:checked').val()=="euros"){
    if ($("#Cod_Moneda_Forma_Pago").val() == 'EUR') {
        _CodMoneda = "EUR";
        $("#divTipoCambio").css("display", "block");
    } else {
        $("#divTipoCambio").css("display", "none");
    }
    RecuperarTipoCambio(_CodMoneda, variables, Tipo_Cambio);
    OcultarCompletarSaldo(Cod_Moneda);
}

function CambioCodCuentaBancaria(CodLibro) {
    var Cod_CuentaBancaria = $("#Cod_CuentaBancaria").val();
    var Beneficiario = $("#Cliente").val();
    var Cod_Libro = CodLibro;

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_CuentaBancaria: Cod_CuentaBancaria,
            Beneficiario: Beneficiario,
            Cod_Libro: Cod_Libro
        })
    };
    fetch(_constantes.URL + '/cuentas_bancarias_api/get_cheques_by_cuenta_cliente', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var cheques = res.data.cheques;
            LlenarCheques(cheques);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CambioGastos() {
    var visible = "block";
    if ($("#optEsGasto").is(":checked")) {
        visible = "none";
    }
    $("#Cod_Almacen").attr("disabled", $("#optEsGasto").is(":checked"));
    $("#Cod_UnidadMedida").attr("disabled", $("#optEsGasto").is(":checked"));
    $("#Stock").attr("disabled", $("#optEsGasto").is(":checked"));
    $("#Cod_TipoPrecio").attr("disabled", $("#optEsGasto").is(":checked"));
    $("#Cantidad").val(1);
    $("#Cantidad").attr("disabled", $("#optEsGasto").is(":checked"));
    $("#Descuento").attr("disabled", $("#optEsGasto").is(":checked"));
    $("#Precio_Unitario").attr("disabled", $("#optEsGasto").is(":checked"));
    $("#btnBuscarSeries").css("display", visible);
}

function FocusOutSerie() {
    if ($("#Serie").parent().find('input.ui-widget').val().trim().length > 0) {
        if ($("#Serie").parent().find('input.ui-widget').val().length < 4) {
            var cadenaCeros = "";
            var cantidadCeros = 4 - $("#Serie").parent().find('input.ui-widget').val().length;
            for (var i = 0; i < cantidadCeros; i++) {
                cadenaCeros = cadenaCeros + "0";
            }$("#Serie").parent().find('input.ui-widget').val(cadenaCeros + $("#Serie").parent().find('input.ui-widget').val());
        }

        var nuevoValor = $("<option value=" + $("#Serie").parent().find('input.ui-widget').val() + ">" + $("#Serie").parent().find('input.ui-widget').val() + "</option>");
        $("#Serie").append(nuevoValor);
        $("#Serie option:last").attr("selected", "selected");
    }
}

function CambioNumero_(event, CodLibro) {
    if (CodLibro != '08') {
        (0, _tools.BloquearControles)(event);
    }
}

function CambioNumero() {
    if ($("#Numero").val().trim() > 0) {
        if ($("#Numero").val().length < 8) {
            var cadenaCeros = "";
            var cantidadCeros = 8 - $("#Numero").val().length;
            for (var i = 0; i < cantidadCeros; i++) {
                cadenaCeros = cadenaCeros + "0";
            }$("#Numero").val(cadenaCeros + $("#Numero").val());
        }
    } else {
        $("#Numero").val("");
        toastr.error('Ingrese un numero correcto y vuelva a intentarlo', 'Error', { timeOut: 5000 });
    }
}

function CambioDespachado() {
    if (!$("#optDescargar").is(":checked")) {
        $("#DescripcionDespachado").text("No se Aplicara la descarga de los Productos en el almacen seleccionado.");
    } else {
        $("#DescripcionDespachado").text("");
    }
}

function CambioExportacion(CodLibro, variables) {
    if ($("#optExportacion").is(":checked")) {
        CodTipoOperacion = '02';
        $("#ckbAplicaImpuesto").prop("checked", false);
        $("#divAplicaImpuesto").css("display", "none");

        $('#tablaBody tr').each(function () {
            var _this = this;

            var Id_Producto = $(this).find("td").eq(2).find("input").val();

            var parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Id_Producto: Id_Producto
                })
            };
            fetch(_constantes.URL + '/productos_serv_api/get_producto_by_pk', parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                if (res.respuesta == 'ok') {
                    if (res.data.producto.length > 0) {
                        var producto = res.data.producto[0];
                        $(_this).find("td").eq(4).find("input").val(producto.Nom_Producto + ' / ' + producto.Des_CortaProducto);
                    }
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        });
    } else {
        CodTipoOperacion = '01';
        $("#ckbAplicaImpuesto").prop("checked", true);
        $("#divAplicaImpuesto").css("display", "block");

        $('#tablaBody tr').each(function () {
            var _this2 = this;

            var Id_Producto = $(this).find("td").eq(2).find("input").val();

            var parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Id_Producto: Id_Producto
                })
            };
            fetch(_constantes.URL + '/productos_serv_api/get_producto_by_pk', parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                if (res.respuesta == 'ok') {
                    if (res.data.producto.length > 0) {
                        var producto = res.data.producto[0];
                        $(_this2).find("td").eq(4).find("input").val(producto.Nom_Producto);
                    }
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        });
    }
    CalcularTotal(CodLibro, variables);
}

function RecorrerTablaDetalles_Series(indiceDetalle, callback) {
    if (indiceDetalle < $("#tablaBody > tr").length) {
        var Id_Producto = $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(2).find('input').val();
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Id_Producto: Id_Producto
            })
        };
        fetch(_constantes.URL + '/series_api/get_series_by_idproducto', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            var series = res.data.series;
            if (series.length > 0) {
                var Series = JSON.parse($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(16).find('input').val());
                if (Series.length == 0) {
                    callback(false);
                    //return false
                } else {
                    RecorrerTablaDetalles_Series(indiceDetalle + 1, callback);
                }
            } else {
                RecorrerTablaDetalles_Series(indiceDetalle + 1, callback);
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    } else {
        callback(true);
    }
}

function RecorrerTablaDetalles_Licitaciones(CodLibro, variables, indiceDetalle, indiceLicitacion, arregloLicitacion, _ExisteAtencion) {
    if (indiceDetalle < $("#tablaBody > tr").length) {
        _ExisteAtencion = false;
        if (indiceLicitacion < arregloLicitacion.length) {
            if (arregloLicitacion[indiceLicitacion].Id_Producto.toString() == $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(2).find('input').val().toString()) {
                _ExisteAtencion = true;
                if (parseFloat(arregloLicitacion[indiceLicitacion].Por_Descuento) == parseFloat("0.00")) {
                    $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(10).find('input').val(arregloLicitacion[indiceLicitacion].Precio_Unitario);
                    $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(10).find('input').attr("data-value", arregloLicitacion[indiceLicitacion].Precio_Unitario);
                    $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(12).find('input').val(parseFloat($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(8).find('input').val()) * parseFloat($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(10).find('input').val()));
                    $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(11).find('input').val("0.00");
                    $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(11).find('input').attr("data-value", 0);
                } else {
                    $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(10).find('input').val(parseFloat($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(10).find('input').val()) - parseFloat(arregloLicitacion[indiceLicitacion].Precio_Unitario));
                    $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(10).find('input').attr("data-value", parseFloat($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(10).find('input').val()) - parseFloat(arregloLicitacion[indiceLicitacion].Precio_Unitario));
                    $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(11).find('input').val("0.00");
                    $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(11).find('input').attr("data-value", 0);
                }

                if (parseFloat(arregloLicitacion[indiceLicitacion].Diferencia) - parseFloat($('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(8).find('input').val()) >= 0) {
                    $("#btnAceptarGenerarComprobante").attr("disabled", false);
                } else {
                    toastr.error('Solo se puede atender ' + arregloLicitacion[indiceLicitacion].Diferencia + ' de ' + arregloLicitacion[indiceLicitacion].Nom_Producto + '. Selecione otra LicitaciÃ³n', 'Error', { timeOut: 5000 });
                }
            }
            CalcularTotal(CodLibro, variables);
            if (!_ExisteAtencion) {
                toastr.error('El producto: ' + $('#tablaBody > tr:eq(' + indiceDetalle + ')').find('td').eq(4).find('input').val() + ' no se encuentra dentro la LicitaciÃ³n Seleccionada.', 'Error', { timeOut: 5000 });
                $("#Cod_Licitacion").val("");
            }
            RecorrerTablaDetalles_Licitaciones(CodLibro, variables, indiceDetalle, indiceLicitacion + 1, arregloLicitacion, _ExisteAtencion);
        } else {
            RecorrerTablaDetalles_Licitaciones(CodLibro, variables, indiceDetalle + 1, 0, arregloLicitacion, _ExisteAtencion);
        }
        //console.log($('#tablaBody > tr:eq('+indiceDetalle+')').find('td').eq(2).find('input').val())
    }
    /*$('#tablaBody tr').each(function () {
        var Id_Producto = $(this).find("td").eq(2).find("input").val()
    })*/
}

function CambioCreditoContado() {
    $("#Cod_FormaPago").val($("#Cod_FormaPago option:first").val());
    if (!arrayValidacion.includes($("#Cod_FormaPago").val())) {
        if ($("#Cod_FormaPago").val() != "008" || $('input[name=optCredito]:checked').val() == "credito") {
            $("#divOperacion").css("display", "block");
            $("#divCuentaCajaBancos").css("display", "block");
        } else {
            $("#divOperacion").css("display", "none");
            $("#divCuentaCajaBancos").css("display", "none");
        }
    }
    if ($('input[name=optCredito]:checked').val() == 'contado') {

        $("#divNroDias").css("display", "none");
        $("#divFormasPago").css("display", "block");
        $("#divOperacion").css("display", "none");
        $("#divCuentaCajaBancos").css("display", "none");
    } else {

        $("#divNroDias").css("display", "block");
        $("#divFormasPago").css("display", "none");
        $("#divOperacion").css("display", "none");
        $("#divCuentaCajaBancos").css("display", "none");
    }
}

function CambioSelectLicitacion(CodLibro, variables) {
    if ($("#divCodigoLicitacion").css("display") == "block") {
        if ($("#optLicitacion").is(":checked")) {
            if ($("#Cod_Licitacion").val() != "") {
                var _ExisteAtencion = false;

                var parametros = {
                    method: 'POST',
                    headers: {
                        Accept: 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Cod_Licitacion: $("#Cod_Licitacion").val(),
                        Id_ClienteProveedor: global.objCliente.Id_ClienteProveedor
                    })
                };
                fetch(_constantes.URL + '/comprobantes_pago_api/get_licitacion_detallado', parametros).then(function (req) {
                    return req.json();
                }).then(function (res) {
                    if (res.respuesta == 'ok') {
                        if (res.data.licitaciones.length > 0) RecorrerTablaDetalles_Licitaciones(CodLibro, variables, 0, 0, res.data.licitaciones, _ExisteAtencion);
                    } else {
                        toastr.error('Ocurrio un error. Intentelo mas tarde', 'Error', { timeOut: 5000 });
                    }
                }).catch(function (e) {
                    console.log(e);
                    toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                });
            }
        }
    }
}

function CambioLicitacion() {
    var visible = "none";
    if ($("#optLicitacion").is(":checked")) {
        visible = "block";
    }
    $("#divCodigoLicitacion").css("display", visible);
}

function CambioUnidadMedida() {
    if (!arrayValidacion.includes($("#Nom_Producto").attr("data-id")) && !arrayValidacion.includes($("#Cod_Almacen").val())) {
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Id_Producto: $("#Nom_Producto").attr("data-id"),
                Cod_UnidadMedida: $("#Cod_UnidadMedida").val(),
                Cod_Almacen: $("#Cod_Almacen").val()
            })
        };
        fetch(_constantes.URL + '/productos_serv_api/get_producto_stock', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == 'ok') {
                if (res.data.producto.length > 0) {
                    var producto = res.data.producto[0];
                    $("#Stock").val(producto.Stock_Act);
                    CargarTipoPrecio();
                }
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    }
}

function CambioComprobantes() {
    if ($("#Cod_TipoComprobante").val() == "TKB" || $("#Cod_TipoComprobante").val() == "TKF" || $("#Cod_TipoComprobante").val() == "BE" || $("#Cod_TipoComprobante").val() == "FE") {

        $("#Numero").bind("keypress", function (event) {
            event.preventDefault();
            event.stopPropagation();
        });

        $('#Fecha').get(0).type = 'text';

        $("#Fecha").bind("keypress", function (event) {
            event.preventDefault();
            event.stopPropagation();
        });

        /*document.getElementById("Numero").addEventListener("keypress", function(event){
            event.preventDefault();
            event.stopPropagation();
        });*/
        //$("#Numero").prop("disabled",true)
        //$("#Fecha").prop("disabled",true)
    } else {
        $("#Numero").unbind("keypress");
        $("#Fecha").unbind("keypress");
        $('#Fecha').get(0).type = 'date';
        //$("#Numero").prop("disabled",false)
        //$("#Fecha").prop("disabled",false)
    }
}

function CambioFormasPago(CodLibro) {
    if (!arrayValidacion.includes($("#Cod_FormaPago").val())) {
        var flagDisplay = "none";
        if ($("#Cod_FormaPago").val() != "008") flagDisplay = "block";

        $("#divOperacion").css("display", flagDisplay);
        $("#Cod_CuentaBancaria").css("display", flagDisplay);
        $("#divCuentaCajaBancos").css("display", flagDisplay);

        if ($("#divOperacion").css("display") == "block") {
            switch ($("#Cod_FormaPago").val()) {
                case "007":
                    if (CodLibro == "08") {
                        $("#lbCuentaCajaBanco").text("# de Cheque: ");
                        TraerCuentaBancariaPorSucursal(CodLibro);
                    } else {
                        toastr.error('No Existe la Operacion de CHEQUE para ventas.\nSe debe de Depositar el Cheque eh ingresarlo como Deposito en Cuenta.', 'Error', { timeOut: 5000 });
                        $("#Cod_FormaPago").val(null);
                    }
                    break;
                case "011":
                    $("#Cod_CuentaBancaria").css("display", "block");
                    $("#lbCuentaCajaBanco").text("# de Operacion");
                    if (CodLibro == "08") {
                        TraerCuentasBancariasXIdClienteProveedor(CodLibro);
                    } else {
                        TraerCuentaBancariaPorSucursal(CodLibro);
                    }
                    break;
                case "001":
                    $("#lbCuentaCajaBanco").text("# de Letra: ");
                    break;
                case "005":
                    $("#lbCuentaCajaBanco").text("# de Tarjeta VISA: ");
                    break;
                case "006":
                    $("#lbCuentaCajaBanco").text("# de Tarjeta MASTER CARD: ");
                    break;
                case "004":
                    $("#lbCuentaCajaBanco").text("# de Orden de Pago: ");
                    break;
                case "003":
                    $("#Cod_CuentaBancaria").css("display", "block");
                    $("#lbCuentaCajaBanco").text("Seleccione Transferencia: ");
                    TraerCuentaBancariaPorSucursal(CodLibro);
                    break;
                case "008":
                    $("#divOperacion").css("display", "none");
                    $("#Cod_CuentaBancaria").css("display", "none");
                    $("#divCuentaCajaBancos").css("display", "none");
                    break;
                case "998":
                    $("#lbCuentaCajaBanco").text("Selecione Pago Adelantado: ");
                    TraerSaldoPagoAdelantado();
                    break;
                default:
                    $("#lbCuentaCajaBanco").text("# de OperaciÃ³n: ");
                    break;
            }
        }
    }
}

function CambioTipoCambioGlobal(Cod_Moneda, Tipo_Cambio) {
    $('#tablaBodyPagosMultiples tr').each(function () {
        if ($(this).find("td").eq(1).text() == Cod_Moneda) {
            $(this).find("td").eq(3).text(Tipo_Cambio);
            var ValorTotal = parseFloat($(this).find("td").eq(5).text()).toFixed(2);
            $(this).find("td").eq(5).text((parseFloat(ValorTotal) * parseFloat(Tipo_Cambio)).toFixed(2));
        }
    });
    CalcularSaldo(Cod_Moneda, Tipo_Cambio);
}

function CambioTipoDocumento() {
    if ($("#Cod_TipoDoc").val() == "1" || $("#Cod_TipoDoc").val() == "6") $("#BuscarRENIEC").show();else $("#BuscarRENIEC").hide();
}

function CambioMoneda(CodLibro) {
    if (!arrayValidacion.includes($("#Cod_Moneda").val())) {
        if ($("#Cod_Moneda").val() == "USD") {
            $("#divTC").css("display", "block");
            TraerTipoCambio(CodLibro);
        } else {
            $("#divTC").css("display", "none");
            $("#Tipo_Cambio").val("1");
        }
    }
}

function TraerTipoCambio(CodLibro) {
    if ($("#Cod_Moneda").val() != "PEN") {
        try {
            var Cod_Moneda = $("#Cod_Moneda").val();
            var FechaHora = $("#Fecha").val();
            var parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Cod_Moneda: Cod_Moneda,
                    FechaHora: FechaHora
                })
            };
            fetch(_constantes.URL + '/comprobantes_pago_api/get_variables_formas_pago', parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                if (res.respuesta == 'ok') {
                    if (res.data.tipos_cambios.length > 0) {
                        if (CodLibro == "08") {
                            $("#Tipo_Cambio").val(res.data.tipos_cambios[0].SunatCompra);
                        } else {
                            $("#Tipo_Cambio").val(res.data.tipos_cambios[0].SunatVenta);
                        }
                    } else {
                        $("#Tipo_Cambio").val(1);
                    }
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        } catch (e) {
            $("#Tipo_Cambio").val(1);
        }
    }
}

function TraerSiguienteNumero(CodLibro) {
    if ($("#Serie").val() != "" && $("#Cod_TipoComprobante").val() != "") {
        var Cod_TipoComprobante = $("#Cod_TipoComprobante").val();
        var Serie = $("#Serie").val();
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Cod_TipoComprobante: Cod_TipoComprobante,
                Serie: Serie,
                CodLibro: CodLibro
            })
        };
        fetch(_constantes.URL + '/cajas_api/get_next_comprobante_by_tipo_serie_libro', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == 'ok') {
                if (res.data.comprobante.length > 0) {
                    var comprobante = res.data.comprobante;
                    $("#Numero").val("00000000" + comprobante[0].NumeroSiguiente);
                } else {
                    $("#Numero").val("");
                }
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    }
}

function TraerSaldoPagoAdelantado() {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_ClienteProveedor: global.objCliente.Id_ClienteProveedor
        })
    };
    fetch(_constantes.URL + '/comprobantes_pago_api/get_pago_adelantado', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var pagos_adelantados = res.data.pagos_adelantados;
            if (pagos_adelantados.length > 0) {
                LlenarPagosAdelantados(pagos_adelantados);
            } else {
                $("#lbCuentaCajaBanco").text("No tienen Ningun Adelanto para Selecionar.");
                $("#Cuenta_CajaBancos").html('');
                $("#divCuentaCajaBancos").css("display", "none");
            }
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function TraerCuentaBancariaPorSucursal(CodLibro) {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({})
    };
    fetch(_constantes.URL + '/cuentas_bancarias_api/get_cuenta_by_sucursal', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var cuentas = res.data.cuentas;
            LlenarCuentaBancaria(cuentas, CodLibro);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function TraerCuentasBancariasXIdClienteProveedor(CodLibro) {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_ClienteProveedor: global.objCliente.Id_ClienteProveedor
        })
    };
    fetch(_constantes.URL + '/cuentas_bancarias_api/get_cuenta_by_id_cliente', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var cuentas = res.data.cuentas;
            LlenarCuentaBancaria_(cuentas, CodLibro);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function TraerCredito(CodLibro, callback) {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_ClienteProveedor: $("#Cliente").attr("data-id"),
            Cod_Libro: CodLibro
        })
    };
    fetch(_constantes.URL + '/clientes_api/get_credito_cliente', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            if (res.data.creditos.length > 0) {
                var aCreditoUtilizado = parseFloat(res.data.creditos[0].CreditoUtilizado);
                var aLimiteCredito = parseFloat(res.data.creditos[0].LimiteCredito);
                if (aLimiteCredito - aCreditoUtilizado - parseFloat($("#Gran_Total")) > 0) {
                    callback(true);
                } else {
                    toastr.error('No hay Credito Suficiente!!!.\nSu Linea es: ' + aLimiteCredito + '.\nCredito Utilizado: ' + aCreditoUtilizado + '.', 'Error', { timeOut: 5000 });
                    callback(false);
                }
            } else {
                callback(true);
            }
        } else {
            callback(true);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function BuscarProductoCP(CodLibro, tipo) {
    if (tipo == 'blur') {
        if ($("#Nom_Producto").val().trim().length > 2 && !$("#optEsGasto").is(":checked")) {
            (0, _modales.BuscarProducto)(CodLibro == "14", $("#Nom_Producto").val());
        }
        $("#Nom_Producto").focusout();
    } else {
        if (!$("#optEsGasto").is(":checked")) (0, _modales.BuscarProducto)(CodLibro == "14", $("#Nom_Producto").val());

        $("#Nom_Producto").focusout();
    }
}

function KeyPressClienteDoc() {
    switch ($('#Nro_Documento').val().trim().length) {
        case 8:
            $("#Cod_TipoDoc").val("1");
            break;
        case 11:
            $("#Cod_TipoDoc").val("6");
            break;
        case 0:
            $("#Cliente").attr("data-id", null);
            $("#Cliente").val("");
            $("#Direccion").val("");
            break;
    }
}

function BuscarClienteDoc(CodLibro) {
    var Nro_Documento = $('#Nro_Documento').val().trim();
    var Cod_TipoDocumento = document.getElementById('Cod_TipoDoc').value;
    var Cod_TipoCliente = CodLibro == "08" ? "001" : "002";
    if (Nro_Documento != '') {
        run_waitMe($('#div-cliente-comprobante-pago'), 1, "ios", "Buscando cliente...");
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Nro_Documento: Nro_Documento, Cod_TipoDocumento: Cod_TipoDocumento, Cod_TipoCliente: Cod_TipoCliente
            })
        };
        fetch(_constantes.URL + '/clientes_api/get_cliente_by_documento', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == 'ok' && res.data.cliente.length > 0) {
                global.objCliente = res.data.cliente[0];

                if (global.objCliente != '' && global.objCliente) {
                    $("#Cod_TipoDoc").val(global.objCliente.Cod_TipoDocumento);
                    $("#Cliente").val(global.objCliente.Cliente);
                    $("#Nro_Documento").val(global.objCliente.Nro_Documento);
                    $("#Direccion").val(global.objCliente.Direccion);
                    $("#Cliente").attr("data-id", global.objCliente.Id_ClienteProveedor);
                    if (parseFloat(global.objCliente.Limite_Credito) > 0) {
                        $("input[name=optCredito][value='credito']").prop("checked", true);
                        $("#divCredito").css("display", "block");
                    } else {
                        $("input[name=optCredito][value='contado']").prop("checked", true);
                        $("#divCredito").css("display", "none");
                    }

                    if ($("#divCredito").css("display") == "block") {
                        $("input[name=optCredito][value='credito']").prop("checked", true);
                        $("#Nro_Dias").val(30);
                    } else {
                        $("input[name=optCredito][value='credito']").prop("checked", false);
                        $("#Nro_Dias").val(0);
                    }

                    if (CodLibro == "14") {
                        $("#Cod_TipoComprobante").val(global.objCliente.Cod_TipoComprobante);
                        CargarSeries(CodLibro);
                        CargarLicitacionesCliente(global.objCliente.Id_ClienteProveedor);
                    }
                }
                CambioCreditoContado();
                CambioLicitacion();
            }
            $('#div-cliente-comprobante-pago').waitMe('hide');
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            $('#div-cliente-comprobante-pago').waitMe('hide');
        });
    }
}

function AbrirModalObsComprobantePago() {
    var Cod_Tabla = "CAJ_COMPROBANTE_PAGO";
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_Tabla: Cod_Tabla
        })
    };
    fetch(_constantes.URL + '/comprobantes_pago_api/get_diagramas_xml_comprobante', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        var variables = res.data;
        (0, _modales.AbrirModalObs)(variables.diagramas, obs_xml, "modal_observaciones", "modal_obs_body");
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function AsyncCalcularTotal(CodLibro, variables) {
    return regeneratorRuntime.async(function AsyncCalcularTotal$(_context2) {
        while (1) {
            switch (_context2.prev = _context2.next) {
                case 0:
                    return _context2.abrupt('return', CalcularTotal(CodLibro, variables));

                case 1:
                case 'end':
                    return _context2.stop();
            }
        }
    }, null, this);
}

function ComprobantePago(Cod_Libro, Cliente, Detalles) {
    run_waitMe($('#main-contenido'), 1, "ios", "Cargando ventana para el comprobante...");
    var fecha = new Date();
    var mes = fecha.getMonth() + 1;
    var dia = fecha.getDate();
    var fecha_format = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Cod_Libro: Cod_Libro
        })
    };
    fetch(_constantes.URL + '/comprobantes_pago_api/get_variable_comprobante_pago', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        var variables = res.data;
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        };
        fetch(_constantes.URL + '/cajas_api/get_empresa', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            var data_empresa = res.empresa;
            variables['empresa'] = data_empresa;
            VerRegistroComprobante(variables, fecha_format, Cod_Libro, Cod_Libro == '08' ? '02' : '01', Cliente, Detalles);
            $('#main-contenido').waitMe('hide');
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            $('#main-contenido').waitMe('hide');
        });
    });
}

exports.ComprobantePago = ComprobantePago;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../../../../utility/tools":401,"../../../constantes_entorno/constantes":377,"../../modales":395,"../../modales/pdf":396,"../../modales/series":397,"empty-element":338,"yo-yo":375}],384:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NuevaRecepcion = undefined;

var _templateObject = _taggedTemplateLiteral(['\n        <div class="modal-dialog modal-lg">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Recepcion de Transferencia</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row" id="divRecepcionados" style="overflow-x: auto;">\n                        <table class="table table-bordered table-striped" id="tablaRecepciones">\n                            <thead>\n                                <tr>\n                                    <th>Turno</th>\n                                    <th>Caja</th> \n                                    <th>Hora</th>\n                                    <th>Movimiento</th>\n                                    <th>M</th>\n                                    <th>Monto</th>\n                                    <th>Recibido</th>\n                                    <th>Dif.</th>\n                                    <th>Responsable</th>\n                                    <th>Acciones</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                ', '\n                            </tbody>\n                        \n                        </table>\n                    </div>\n                    <div class="row">\n                        <div class="col-md-2">\n                            <button type="button" class="btn btn-success" onclick=', '><i class="fa fa-arrow-circle-down"></i> Recepcionados</button>\n                        </div>\n                        <div class="col-md-8">\n                            <div class="row" id="divTotales">\n                                <div class="form-group">\n                                    <div class="col-md-3">\n                                        <label>Total Recepcion : </label>\n                                    </div>\n                                    <div class="col-md-3" >\n                                        <input type="number" class="form-control" id="totalMonto" value="', '">\n                                    </div>\n                                    <div class="col-md-3" >\n                                        <input type="number" class="form-control" id="totalRecibido" value="', '">\n                                    </div>\n                                    <div class="col-md-3">\n                                        <input type="number" class="form-control"  id="total" value="', '">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-md-2">\n                            <button type="button" class="btn btn-inverse"><i class="fa fa-print"></i> Re-Imprimir</button>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog modal-lg">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Recepcion de Transferencia</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row" id="divRecepcionados" style="overflow-x: auto;">\n                        <table class="table table-bordered table-striped" id="tablaRecepciones">\n                            <thead>\n                                <tr>\n                                    <th>Turno</th>\n                                    <th>Caja</th> \n                                    <th>Hora</th>\n                                    <th>Movimiento</th>\n                                    <th>M</th>\n                                    <th>Monto</th>\n                                    <th>Recibido</th>\n                                    <th>Dif.</th>\n                                    <th>Responsable</th>\n                                    <th>Acciones</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                ', '\n                            </tbody>\n                        \n                        </table>\n                    </div>\n                    <div class="row">\n                        <div class="col-md-2">\n                            <button type="button" class="btn btn-success" onclick=', '><i class="fa fa-arrow-circle-down"></i> Recepcionados</button>\n                        </div>\n                        <div class="col-md-8">\n                            <div class="row" id="divTotales">\n                                <div class="form-group">\n                                    <div class="col-md-3">\n                                        <label>Total Recepcion : </label>\n                                    </div>\n                                    <div class="col-md-3" >\n                                        <input type="number" class="form-control" id="totalMonto" value="', '">\n                                    </div>\n                                    <div class="col-md-3" >\n                                        <input type="number" class="form-control" id="totalRecibido" value="', '">\n                                    </div>\n                                    <div class="col-md-3">\n                                        <input type="number" class="form-control"  id="total" value="', '">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-md-2">\n                            <button type="button" class="btn btn-inverse"><i class="fa fa-print"></i> Re-Imprimir</button>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                </div>\n            </div>\n        </div>']),
    _templateObject2 = _taggedTemplateLiteral(['\n                                <tr> \n                                    ', '\n                                    <td>', '</td>\n                                    <td>', '</td>\n                                    <td>', '</td>\n                                    <td>', '</td>\n                                    <td>', '</td>\n                                    <td> ', '</td>\n                                    <td><input type="number" value="', '" onkeyup=', ' onchange=', ' class="form-control recibido" id="R', '"></td>\n                                    <td class="diferencia" id="D', '">', '</td> \n                                    <td><input value="', '" type="text" id="', '" class="form-control" onchange=', ' data-id="-1"></td>\n                                    <td>\n                                        <div class="btn-group">\n                                            <button class="btn btn-info btn-xs" onclick=', '><i class="fa fa-share"></i> </button>\n                                            <button class="btn btn-success btn-xs" onclick=', '><i class="fa fa-arrow-circle-down"></i> </button>\n                                        </div>\n                                    </td>\n                                </tr>'], ['\n                                <tr> \n                                    ', '\n                                    <td>', '</td>\n                                    <td>', '</td>\n                                    <td>', '</td>\n                                    <td>', '</td>\n                                    <td>', '</td>\n                                    <td> ', '</td>\n                                    <td><input type="number" value="', '" onkeyup=', ' onchange=', ' class="form-control recibido" id="R', '"></td>\n                                    <td class="diferencia" id="D', '">', '</td> \n                                    <td><input value="', '" type="text" id="', '" class="form-control" onchange=', ' data-id="-1"></td>\n                                    <td>\n                                        <div class="btn-group">\n                                            <button class="btn btn-info btn-xs" onclick=', '><i class="fa fa-share"></i> </button>\n                                            <button class="btn btn-success btn-xs" onclick=', '><i class="fa fa-arrow-circle-down"></i> </button>\n                                        </div>\n                                    </td>\n                                </tr>']),
    _templateObject3 = _taggedTemplateLiteral(['<table class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Turno</th>\n            <th>Caja</th> \n            <th>Hora</th>\n            <th>Movimiento</th>\n            <th>M</th>\n            <th>Monto</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>'], ['<table class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Turno</th>\n            <th>Caja</th> \n            <th>Hora</th>\n            <th>Movimiento</th>\n            <th>M</th>\n            <th>Monto</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>']),
    _templateObject4 = _taggedTemplateLiteral(['\n        <tr>\n            <td>', '</td>\n            <td>', '</td>\n            <td>', '</td>\n            <td>', '</td>\n            <td>', '</td>\n            <td>', '</td>\n        </tr>'], ['\n        <tr>\n            <td>', '</td>\n            <td>', '</td>\n            <td>', '</td>\n            <td>', '</td>\n            <td>', '</td>\n            <td>', '</td>\n        </tr>']);

var _constantes = require('../../../constantes_entorno/constantes');

var _movimientos_caja = require('../../movimientos_caja');

var _modales = require('../../modales');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');


var flag_button = false;
var total = 0;
var totalMonto = 0;
var totalRecibido = 0;

function Ver(variables) {
    var el = yo(_templateObject, variables.movimientos_pendientes.map(function (u) {
        return yo(_templateObject2, ActualizarMontosTotales(parseFloat(u.Ingreso) - parseFloat(u.Ingreso), u.Ingreso, u.Ingreso), u.Cod_Turno, u.Des_Caja, u.Fecha_Inicio, u.Movimiento, u.Simbolo, u.Ingreso, parseFloat(u.Ingreso) - parseFloat(u.Diferencia), function () {
            return CambioMonto(btoa(u.id_Movimiento).toString().replace(/=/g, ""), u.Ingreso);
        }, function () {
            return CambioMonto(btoa(u.id_Movimiento).toString().replace(/=/g, ""), u.Ingreso);
        }, btoa(u.id_Movimiento).toString().replace(/=/g, ""), btoa(u.id_Movimiento).toString().replace(/=/g, ""), u.Diferencia, u.Responsable, btoa(u.id_Movimiento).toString().replace(/=/g, ""), function () {
            return BuscarResponsable(btoa(u.id_Movimiento).replace(/=/g, ""));
        }, function () {
            return Reactivar(u, btoa(u.id_Movimiento).replace(/=/g, ""));
        }, function () {
            return RegistrarRecepcion(u, btoa(u.id_Movimiento).replace(/=/g, ""));
        });
    }), function () {
        return Recepcionados();
    }, totalMonto, totalRecibido, total);

    var modal_proceso = document.getElementById('modal-proceso');
    empty(modal_proceso).appendChild(el);
    $('#modal-proceso').modal();
}

function ActualizarMontosTotales(_total, _totalMonto, _totalRecibido) {
    total = total + _total;
    totalMonto = totalMonto + _totalMonto;
    totalRecibido = totalRecibido + _totalRecibido;
}

function CambioMonto(idInput, montoIngreso) {
    var montoR = parseFloat($("#R" + idInput).val());
    var montoDif = montoR - parseFloat(montoIngreso);
    $("#D" + idInput).text(montoDif);
    totalRecibido = 0;
    total = 0;
    $('#tablaRecepciones > tbody  > tr').each(function () {
        totalRecibido = totalRecibido + parseFloat($(this).find("td > input.recibido").val());
        total = total + parseFloat($(this).find("td.diferencia").text());
    });
    $("#totalMonto").val(totalMonto);
    $("#totalRecibido").val(totalRecibido);
    $("#total").val(total);
}

function BuscarResponsable(idInput) {
    (0, _modales.BuscarCliente)(idInput, null, null);
}

function refrescarTabla(recepcionados) {
    var el = yo(_templateObject3, recepcionados.map(function (u) {
        return yo(_templateObject4, u.Cod_Turno, u.Des_Caja, u.Fecha_Inicio, u.Movimiento, u.Simbolo, u.Ingreso);
    }));
    empty(document.getElementById('divRecepcionados')).appendChild(el);
}

function EsValido(idInputCliente) {
    var Id_ClienteProveedor = $("#" + idInputCliente).attr("data-id");
    var Cliente = $("#" + idInputCliente).val();
    var Recibido = $("#R" + idInputCliente).val();
    var Diferencia = $("#D" + idInputCliente).text();
    if (parseFloat(Recibido) != 0) {
        if (parseFloat(Diferencia) != 0) {
            if (Id_ClienteProveedor == "-1") {
                return false;
            } else {
                return true;
            }
        } else {
            return true;
        }
    } else {
        return true;
    }
}

function RegistrarRecepcion(u, idInputCliente) {
    var Id_ClienteProveedor = $("#" + idInputCliente).attr("data-id");
    var Cliente = $("#" + idInputCliente).val();
    var Recibido = $("#R" + idInputCliente).val();
    var Diferencia = $("#D" + idInputCliente).text();
    if (EsValido(idInputCliente)) {
        run_waitMe($('#modal-proceso'), 1, "ios", "Registrando recepciÃ³n...");
        var id_Movimiento = u.id_Movimiento;
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            credentials: 'same-origin',
            body: JSON.stringify({
                id_Movimiento: id_Movimiento,
                Diferencia: Diferencia,
                Id_ClienteProveedor: Id_ClienteProveedor,
                Recibido: Recibido,
                Cliente: Cliente
            })
        };
        fetch(_constantes.URL + '/recepciones_api/recepcionar', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == 'ok') {
                toastr.success('Se recepciono correctamente el movimiento de dinero', 'Confirmacion', { timeOut: 5000 });
                (0, _movimientos_caja.refrescar_movimientos)();
            } else {
                toastr.error('No se pudo recepcionar correctamente el movimiento de dinero', 'Error', { timeOut: 5000 });
            }
            $('#modal-proceso').modal('hide');
            $('#modal-proceso').waitMe('hide');
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            $('#modal-proceso').waitMe('hide');
        });
    } else {
        toastr.error('No Existe un Responsable asignado para la Diferencia', 'Error', { timeOut: 5000 });
    }
}

function Reactivar(u, idInputCliente) {
    run_waitMe($('#modal-proceso'), 1, "ios");
    var id_Movimiento = u.id_Movimiento;
    var Recibido = $("#R" + idInputCliente).val();
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            id_Movimiento: id_Movimiento,
            Recibido: Recibido
        })
    };
    fetch(_constantes.URL + '/recepciones_api/reactivar', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            toastr.success('Se coloco como pendiente a esta RecepciÃ³n', 'Confirmacion', { timeOut: 5000 });
            NuevaRecepcion();
        } else {
            toastr.error('No se pudo colocar como pendiente a esta recepcion', 'Error', { timeOut: 5000 });
        }
        console.log(res.data);
        $('#modal-proceso').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#modal-proceso').waitMe('hide');
    });
}

function Recepcionados() {
    if (!flag_button) {
        run_waitMe($('#modal-proceso'), 1, "ios", "Realizando operaciÃ³n...");
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        };
        fetch(_constantes.URL + '/recepciones_api/get_recepcionados', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            console.log(res);
            var recepcionados = res.data.movimientos_recepcionados;
            if (res.respuesta == 'ok') {

                refrescarTabla(recepcionados);
            } else {
                refrescarTabla([]);
            }
            $('#modal-proceso').waitMe('hide');
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            $('#modal-proceso').waitMe('hide');
        });

        flag_button = true;
    } else {
        NuevaRecepcion();
    }
}

function NuevaRecepcion() {
    totalMonto = 0;
    totalRecibido = 0;
    total = 0;
    flag_button = false;
    run_waitMe($('#main-contenido'), 1, "ios");
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({})
    };
    fetch(_constantes.URL + '/recepciones_api/get_variables_recepcion_transferencia', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        var variables = res.data;
        console.log(variables);
        if (res.respuesta == 'ok') {

            Ver(variables);
        } else {}
        $('#main-contenido').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#main-contenido').waitMe('hide');
    });
}

exports.NuevaRecepcion = NuevaRecepcion;

},{"../../../constantes_entorno/constantes":377,"../../modales":395,"../../movimientos_caja":398,"empty-element":338,"yo-yo":375}],385:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NuevaHabitacion = undefined;

var _templateObject = _taggedTemplateLiteral(['\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"><strong>Nueva Habitaci\xF3n</strong></h4>\n            </div>\n            <div class="modal-body" id="modal_form_habitacion">\n                <div class="row">\n                    <div id="modal_error_habitacion" class="callout callout-danger hidden">\n                        <p> Es necesario llenar los campos marcados con rojo</p>\n                    </div>\n                </div>\n                <div class="row"> \n                    <div class="col-sm-12">\n                        <div class="form-group">\n                            <label id="laCod_Habitacion">Codigo Habitaci\xF3n</label>\n                            <input type="text" class="form-control required" id="Cod_Habitacion">\n                        </div>\n                    </div> \n                    <div class="col-sm-12">\n                        <div class="form-group">\n                            <label id="laCapacidad">Capacidad Camas</label>\n                            <input type="number" class="form-control required" id="Capacidad" value="1">\n                        </div>\n                    </div>  \n                    <div class="col-sm-12"> \n                        <div class="form-group">\n                            <label id="laCod_Tipo_Habitacion">Tipo Habitaci\xF3n</label>\n                            <select class="form-control required" id="Cod_Tipo_Habitacion">\n                                <option value="TH001">Doble</option>\n                                <option value="TH002">Simple</option>\n                                <option value="TH003">Matrimonial</option>\n                            </select>\n                        </div> \n                    </div>                                    \n                    <div class="col-sm-12"> \n                        <div class="form-group">\n                            <label id="laDescripcion">Descripci\xF3n</label>\n                            <input class="form-control" id="Descripcion">\n                        </div> \n                    </div>\n                    <div class="col-sm-12">\n                        <div class="form-group">\n                            <label id="laCod_Torre">Torre</label>\n                            <select class="form-control" id="Cod_Torre">\n                                <option value="TO001">Primera</option>\n                                <option value="TO002">Segunda</option>\n                            </select>\n                        </div> \n                    </div>\n                    <div class="col-sm-12"> \n                        <div class="form-group">\n                            <label id="laCod_Piso">Piso</label>\n                            <select class="form-control" id="Cod_Piso">\n                                <option value="PI001">Primer</option>\n                                <option value="PI002">Segundo</option>\n                                <option value="PI003">Tercer</option>\n                            </select>\n                        </div> \n                    </div>   \n                    <div class="col-sm-12"> \n                        <div class="form-group">\n                            <label id="laObservaciones">Observaciones</label>\n                            <textarea class="form-control" id="Observaciones">\n                            </textarea>\n                        </div> \n                    </div>\n                    <div class="col-sm-12">\n                        <div class="form-group">\n                            <label>Escoja los detalles de la habitaci\xF3n</label>\n                            <select class="form-control select-multiple select2" data-placeholder="Seleccione los especificaciones de la habitacion" name="detalles[]" multiple="multiple" style="width:100%">\n                                <option value="WIFI">Wifi</option>\n                                <option value="DC">Ducha Caliente</option>\n                                <option value="J">Jacuzzi</option>\n                            </select>\n                        </div>\n                    </div>  \n                    \n                </div>\n\n                \n            </div>\n            <div class="modal-footer text-center"> \n                <button type="button" class="btn btn-success" onclick=', '>Guardar</button>  \n                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button> \n            </div>\n        </div>\n    </div>'], ['\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"><strong>Nueva Habitaci\xF3n</strong></h4>\n            </div>\n            <div class="modal-body" id="modal_form_habitacion">\n                <div class="row">\n                    <div id="modal_error_habitacion" class="callout callout-danger hidden">\n                        <p> Es necesario llenar los campos marcados con rojo</p>\n                    </div>\n                </div>\n                <div class="row"> \n                    <div class="col-sm-12">\n                        <div class="form-group">\n                            <label id="laCod_Habitacion">Codigo Habitaci\xF3n</label>\n                            <input type="text" class="form-control required" id="Cod_Habitacion">\n                        </div>\n                    </div> \n                    <div class="col-sm-12">\n                        <div class="form-group">\n                            <label id="laCapacidad">Capacidad Camas</label>\n                            <input type="number" class="form-control required" id="Capacidad" value="1">\n                        </div>\n                    </div>  \n                    <div class="col-sm-12"> \n                        <div class="form-group">\n                            <label id="laCod_Tipo_Habitacion">Tipo Habitaci\xF3n</label>\n                            <select class="form-control required" id="Cod_Tipo_Habitacion">\n                                <option value="TH001">Doble</option>\n                                <option value="TH002">Simple</option>\n                                <option value="TH003">Matrimonial</option>\n                            </select>\n                        </div> \n                    </div>                                    \n                    <div class="col-sm-12"> \n                        <div class="form-group">\n                            <label id="laDescripcion">Descripci\xF3n</label>\n                            <input class="form-control" id="Descripcion">\n                        </div> \n                    </div>\n                    <div class="col-sm-12">\n                        <div class="form-group">\n                            <label id="laCod_Torre">Torre</label>\n                            <select class="form-control" id="Cod_Torre">\n                                <option value="TO001">Primera</option>\n                                <option value="TO002">Segunda</option>\n                            </select>\n                        </div> \n                    </div>\n                    <div class="col-sm-12"> \n                        <div class="form-group">\n                            <label id="laCod_Piso">Piso</label>\n                            <select class="form-control" id="Cod_Piso">\n                                <option value="PI001">Primer</option>\n                                <option value="PI002">Segundo</option>\n                                <option value="PI003">Tercer</option>\n                            </select>\n                        </div> \n                    </div>   \n                    <div class="col-sm-12"> \n                        <div class="form-group">\n                            <label id="laObservaciones">Observaciones</label>\n                            <textarea class="form-control" id="Observaciones">\n                            </textarea>\n                        </div> \n                    </div>\n                    <div class="col-sm-12">\n                        <div class="form-group">\n                            <label>Escoja los detalles de la habitaci\xF3n</label>\n                            <select class="form-control select-multiple select2" data-placeholder="Seleccione los especificaciones de la habitacion" name="detalles[]" multiple="multiple" style="width:100%">\n                                <option value="WIFI">Wifi</option>\n                                <option value="DC">Ducha Caliente</option>\n                                <option value="J">Jacuzzi</option>\n                            </select>\n                        </div>\n                    </div>  \n                    \n                </div>\n\n                \n            </div>\n            <div class="modal-footer text-center"> \n                <button type="button" class="btn btn-success" onclick=', '>Guardar</button>  \n                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button> \n            </div>\n        </div>\n    </div>']);

var _constantes = require('../../../constantes_entorno/constantes');

var _movimientos_caja = require('../../movimientos_caja');

var _reservas = require('../../mod_reservas/reservas');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');


var fecha = new Date();
var mes = fecha.getMonth() + 1;
var dia = fecha.getDate();
var fecha_actual = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);

function Ver() {
    var el = yo(_templateObject, function () {
        return GuardarHabitacion();
    });

    var modal_proceso = document.getElementById('modal-proceso');
    empty(modal_proceso).appendChild(el);
    $('#modal-proceso').modal();
    $('.select-multiple').select2();
}

function GuardarHabitacion() {
    //console.log($(".select-multiple").val())

    if (ValidacionCampos("modal_error_habitacion", "modal_form_habitacion")) {
        run_waitMe($('#modal-proceso'), 1, "ios", "Registrando habitacion....");
        var Cod_Habitacion = $("#Cod_Habitacion").val();
        var Des_Habitacion = $("#Descripcion").val();
        var Id_Producto = -1;
        var Cod_EstadoHabitacion = "LIMPIO";
        var Sobre_Booking = 0;
        var Cod_Torre = $("#Cod_Torre").val();
        var Cod_Piso = $("#Cod_Piso").val();
        var Flag_Activo = "ACTIVO";
        var Cod_Tipo = $("#Cod_Tipo_Habitacion").val();
        var Capacidad = parseInt($("#Capacidad").val());
        var Obs_Habitacion = $("#Observaciones").val().toString().trim();
        var Fecha = fecha_actual;
        var Detalles = $(".select-multiple").val();
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Cod_Habitacion: Cod_Habitacion,
                Des_Habitacion: Des_Habitacion,
                Id_Producto: Id_Producto,
                Cod_EstadoHabitacion: Cod_EstadoHabitacion,
                Sobre_Booking: Sobre_Booking,
                Cod_Torre: Cod_Torre,
                Cod_Piso: Cod_Piso,
                Flag_Activo: Flag_Activo,
                Cod_Tipo: Cod_Tipo,
                Capacidad: Capacidad,
                Obs_Habitacion: Obs_Habitacion,
                Fecha: Fecha,
                Detalles: Detalles
            })
            //console.log(parametros)
        };fetch(_constantes.URL + '/reservas_api/guardar_habitacion', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            $('#modal-proceso').modal('hide');
            if (res.respuesta == "ok") {
                (0, _reservas.LibroReservas)();
            } else {
                toastr.error('No se pudo registrar correctamente la habitacion', 'Error', { timeOut: 5000 });
            }
            $('#modal-proceso').waitMe('hide');
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            $('#modal-proceso').waitMe('hide');
        });
    }
}

function NuevaHabitacion() {
    run_waitMe($('#main-contenido'), 1, "ios");
    Ver();
    $('#main-contenido').waitMe('hide');
}

exports.NuevaHabitacion = NuevaHabitacion;

},{"../../../constantes_entorno/constantes":377,"../../mod_reservas/reservas":386,"../../movimientos_caja":398,"empty-element":338,"yo-yo":375}],386:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LibroReservas = undefined;

var _templateObject = _taggedTemplateLiteral(['\n        <li class=""><a href="#tabReservas" data-toggle="tab" aria-expanded="false" id="idReservas">Front Desk</a></li>'], ['\n        <li class=""><a href="#tabReservas" data-toggle="tab" aria-expanded="false" id="idReservas">Front Desk</a></li>']),
    _templateObject2 = _taggedTemplateLiteral(['\n            <div class="tab-pane" id="tabReservas">\n                <div class="row">\n                    <div class="col-md-12">\n                        <div class="box box-primary">\n                            <div class="box-header">\n                                <div class="row">\n                                    \n                                    <div class="col-md-9 col-sm-9">\n                                        <div class="btn-group pull-right divAcciones" data-toggle="buttons">\n                                            <label class="btn btn-primary btn-sm">\n                                            <input type="radio" name="options" id="option1" onchange=', '> Mostrar un solo dia\n                                            </label>\n                                            <label class="btn btn-primary btn-sm">\n                                            <input type="radio" name="options" id="option2" onchange=', '> Mostrar 3 dias\n                                            </label>\n                                            <label class="btn btn-primary btn-sm">\n                                            <input type="radio" name="options" id="option3" onchange=', '> Mostrar semana\n                                            </label>\n                                            <label class="btn btn-primary btn-sm">\n                                            <input type="radio" name="options" id="option3" onchange=', '> Mostrar 15 dias\n                                            </label>\n                                            <label class="btn btn-primary btn-sm">\n                                            <input type="radio" name="options" id="option3" onchange=', '> Mostrar Mes\n                                            </label>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-3 col-sm-3">\n                                        <div class="input-group divBuscar">\n                                            <input type="txtBuscarReserva" class="form-control input-sm">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-primary btn-sm">Buscar</button>\n                                            </div> \n                                        </div> \n                                    </div>\n                                </div>\n                                \n                            </div>\n                            <div class="box-body">  \n                                <div class="row"> \n                                    <div class="col-sm-1 divNav" >\n                                        <div id="nav"></div>\n                                    </div>\n                                    <div class="col-sm-10 divDP">\n                                        <div id="dp"></div>\n                                    </div>  \n                                </div>\n                            </div>\n                        \n                        </div>\n                    </div>\n                </div>\n            </div>'], ['\n            <div class="tab-pane" id="tabReservas">\n                <div class="row">\n                    <div class="col-md-12">\n                        <div class="box box-primary">\n                            <div class="box-header">\n                                <div class="row">\n                                    \n                                    <div class="col-md-9 col-sm-9">\n                                        <div class="btn-group pull-right divAcciones" data-toggle="buttons">\n                                            <label class="btn btn-primary btn-sm">\n                                            <input type="radio" name="options" id="option1" onchange=', '> Mostrar un solo dia\n                                            </label>\n                                            <label class="btn btn-primary btn-sm">\n                                            <input type="radio" name="options" id="option2" onchange=', '> Mostrar 3 dias\n                                            </label>\n                                            <label class="btn btn-primary btn-sm">\n                                            <input type="radio" name="options" id="option3" onchange=', '> Mostrar semana\n                                            </label>\n                                            <label class="btn btn-primary btn-sm">\n                                            <input type="radio" name="options" id="option3" onchange=', '> Mostrar 15 dias\n                                            </label>\n                                            <label class="btn btn-primary btn-sm">\n                                            <input type="radio" name="options" id="option3" onchange=', '> Mostrar Mes\n                                            </label>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-3 col-sm-3">\n                                        <div class="input-group divBuscar">\n                                            <input type="txtBuscarReserva" class="form-control input-sm">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-primary btn-sm">Buscar</button>\n                                            </div> \n                                        </div> \n                                    </div>\n                                </div>\n                                \n                            </div>\n                            <div class="box-body">  \n                                <div class="row"> \n                                    <div class="col-sm-1 divNav" >\n                                        <div id="nav"></div>\n                                    </div>\n                                    <div class="col-sm-10 divDP">\n                                        <div id="dp"></div>\n                                    </div>  \n                                </div>\n                            </div>\n                        \n                        </div>\n                    </div>\n                </div>\n            </div>']),
    _templateObject3 = _taggedTemplateLiteral(['\n        <div class="modal-dialog modal-lg">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Nueva Reserva</strong></h4>\n                </div>\n                <div class="modal-body" id="modal_form">\n                    <div class="row">\n                        <div id="modal_error" class="callout callout-danger hidden">\n                            <p> Es necesario llenar los campos marcados con rojo</p>\n                        </div>\n                    </div>\n                    <div class="row"> \n                        <div class="col-sm-6">\n                            <div class="box">\n                                <div class="box-header">\n                                    <h4>Datos de la Reserva</h4>\n                                </div>\n                                <div class="box-body">\n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laDuracion">Duracion : ', ' - ', '</label> \n                                            </div>\n                                        </div>\n                                    </div>\n                                   \n                                    <div class="row">\n                                        <div class="col-md-4">\n                                            <div class="form-group">\n                                                <select id="Cod_TipoDoc" class="form-control input-sm">\n                                                    ', '\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class="col-md-8">\n                                            <div class="form-group"> \n                                                <input type="text" id="Nro_Documento" class="form-control input-sm required" onblur="', '">\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laCliente">Cliente</label>\n                                                <div class="input-group input-group-sm">\n                                                    <div class="input-group-btn">\n                                                        <button type="button" class="btn btn-success" id="AgregarCliente"  onclick=', '>\n                                                            <i class="fa fa-plus"></i>\n                                                        </button>\n                                                    </div>\n                                                    <input type="text" id="Cliente" class="form-control required" data-id=null>\n                                                    <div class="input-group-btn">\n                                                        <button type="button" class="btn btn-info" id="BuscarCliente"  onclick=', '>\n                                                            <i class="fa fa-search"></i>\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laNacionalidad">Nacionalidad</label>\n                                                <select class="form-control" id="Nacionalidad">\n                                                    ', '\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div> \n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laTelefono">Telefono</label>\n                                                <input type="text" class="form-control" id="Telefono">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laEmail">Email</label>\n                                                <input type="email" class="form-control" id="Email">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laDes_Reserva">Descripcion Reserva</label>\n                                                <textarea type="text" class="form-control" id="Des_Reserva">\n                                                </textarea>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-sm-4">\n                                            <div class="form-group">\n                                                <label id="laNroAdultos">Nro Adultos</label>\n                                                <input type="number" class="form-control" id="NroAdultos">\n                                            </div>\n                                        </div>\n                                        <div class="col-sm-4">\n                                            <div class="form-group">\n                                                <label id="laNroNinios">Nro Ni\xF1os</label>\n                                                <input type="number" class="form-control" id="NroNinios">\n                                            </div>\n                                        </div>\n                                        <div class="col-sm-4">\n                                            <div class="form-group">\n                                                <label id="laNroInfantes">Nro Infantes</label>\n                                                <input type="number" class="form-control" id="NroInfantes">\n                                            </div>\n                                        </div>\n                                    </div>\n                                     \n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <div class="box">\n                                <div class="box-header">\n                                    <h4>Datos de la Habitacion</h4>\n                                </div>\n                                <div class="box-body">\n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laTipoHabitacion">Tipo de Habitacion : ', '</label>\n                                            </div>\n                                        </div>\n                                    </div>  \n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laTarifa">Tarifa</label>\n                                                <select class="form-control" id="Tarifa" onchange=', '>\n                                                    ', '\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>                                   \n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laCantidad">Cantidad</label>\n                                                <select class="form-control" id="Cantidad" onchange=', '>\n                                                    ', '\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div> \n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label>Moneda: </label>\n                                                <select id="Cod_Moneda" class="form-control input-sm">\n                                                    ', '\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laPrecio">Precio</label>\n                                                <input type="number" class="form-control" id="Precio" value=', '>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-sm-12 text-right">\n                                            <a href="javascript:void(0);" style="font-style: oblique;border-right: 1px solid;padding-right: 5px;padding-left: 5px;font-size: medium;">Unica Persona</a>                      \n                                            <a href="javascript:void(0);" style="font-style: oblique;border-right: 1px solid;padding-right: 5px;padding-left: 5px;font-size: medium;">Grupo</a>                      \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-12 text-right">\n                              <a href="javascript:void(0);" style="font-style: oblique;border-right: 1px solid;padding-right: 5px;padding-left: 5px;font-size: medium;">Unica Persona</a>                      \n                              <a href="javascript:void(0);" style="font-style: oblique;border-right: 1px solid;padding-right: 5px;padding-left: 5px;font-size: medium;">Grupo</a>                      \n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-success" onclick=', '>Reservar</button> \n                    <button type="button" class="btn btn-warning">Reservar temporalmente</button> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button> \n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog modal-lg">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Nueva Reserva</strong></h4>\n                </div>\n                <div class="modal-body" id="modal_form">\n                    <div class="row">\n                        <div id="modal_error" class="callout callout-danger hidden">\n                            <p> Es necesario llenar los campos marcados con rojo</p>\n                        </div>\n                    </div>\n                    <div class="row"> \n                        <div class="col-sm-6">\n                            <div class="box">\n                                <div class="box-header">\n                                    <h4>Datos de la Reserva</h4>\n                                </div>\n                                <div class="box-body">\n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laDuracion">Duracion : ', ' - ', '</label> \n                                            </div>\n                                        </div>\n                                    </div>\n                                   \n                                    <div class="row">\n                                        <div class="col-md-4">\n                                            <div class="form-group">\n                                                <select id="Cod_TipoDoc" class="form-control input-sm">\n                                                    ', '\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class="col-md-8">\n                                            <div class="form-group"> \n                                                <input type="text" id="Nro_Documento" class="form-control input-sm required" onblur="', '">\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laCliente">Cliente</label>\n                                                <div class="input-group input-group-sm">\n                                                    <div class="input-group-btn">\n                                                        <button type="button" class="btn btn-success" id="AgregarCliente"  onclick=', '>\n                                                            <i class="fa fa-plus"></i>\n                                                        </button>\n                                                    </div>\n                                                    <input type="text" id="Cliente" class="form-control required" data-id=null>\n                                                    <div class="input-group-btn">\n                                                        <button type="button" class="btn btn-info" id="BuscarCliente"  onclick=', '>\n                                                            <i class="fa fa-search"></i>\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laNacionalidad">Nacionalidad</label>\n                                                <select class="form-control" id="Nacionalidad">\n                                                    ', '\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div> \n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laTelefono">Telefono</label>\n                                                <input type="text" class="form-control" id="Telefono">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laEmail">Email</label>\n                                                <input type="email" class="form-control" id="Email">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laDes_Reserva">Descripcion Reserva</label>\n                                                <textarea type="text" class="form-control" id="Des_Reserva">\n                                                </textarea>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-sm-4">\n                                            <div class="form-group">\n                                                <label id="laNroAdultos">Nro Adultos</label>\n                                                <input type="number" class="form-control" id="NroAdultos">\n                                            </div>\n                                        </div>\n                                        <div class="col-sm-4">\n                                            <div class="form-group">\n                                                <label id="laNroNinios">Nro Ni\xF1os</label>\n                                                <input type="number" class="form-control" id="NroNinios">\n                                            </div>\n                                        </div>\n                                        <div class="col-sm-4">\n                                            <div class="form-group">\n                                                <label id="laNroInfantes">Nro Infantes</label>\n                                                <input type="number" class="form-control" id="NroInfantes">\n                                            </div>\n                                        </div>\n                                    </div>\n                                     \n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <div class="box">\n                                <div class="box-header">\n                                    <h4>Datos de la Habitacion</h4>\n                                </div>\n                                <div class="box-body">\n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laTipoHabitacion">Tipo de Habitacion : ', '</label>\n                                            </div>\n                                        </div>\n                                    </div>  \n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laTarifa">Tarifa</label>\n                                                <select class="form-control" id="Tarifa" onchange=', '>\n                                                    ', '\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>                                   \n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laCantidad">Cantidad</label>\n                                                <select class="form-control" id="Cantidad" onchange=', '>\n                                                    ', '\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div> \n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label>Moneda: </label>\n                                                <select id="Cod_Moneda" class="form-control input-sm">\n                                                    ', '\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-sm-12">\n                                            <div class="form-group">\n                                                <label id="laPrecio">Precio</label>\n                                                <input type="number" class="form-control" id="Precio" value=', '>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-sm-12 text-right">\n                                            <a href="javascript:void(0);" style="font-style: oblique;border-right: 1px solid;padding-right: 5px;padding-left: 5px;font-size: medium;">Unica Persona</a>                      \n                                            <a href="javascript:void(0);" style="font-style: oblique;border-right: 1px solid;padding-right: 5px;padding-left: 5px;font-size: medium;">Grupo</a>                      \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-12 text-right">\n                              <a href="javascript:void(0);" style="font-style: oblique;border-right: 1px solid;padding-right: 5px;padding-left: 5px;font-size: medium;">Unica Persona</a>                      \n                              <a href="javascript:void(0);" style="font-style: oblique;border-right: 1px solid;padding-right: 5px;padding-left: 5px;font-size: medium;">Grupo</a>                      \n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-success" onclick=', '>Reservar</button> \n                    <button type="button" class="btn btn-warning">Reservar temporalmente</button> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button> \n                </div>\n            </div>\n        </div>']),
    _templateObject4 = _taggedTemplateLiteral(['<option style="text-transform:uppercase" value="', '">', '</option>'], ['<option style="text-transform:uppercase" value="', '">', '</option>']),
    _templateObject5 = _taggedTemplateLiteral([''], ['']),
    _templateObject6 = _taggedTemplateLiteral(['<option value="', '">', '</option>'], ['<option value="', '">', '</option>']);

var _constantes = require('../../../constantes_entorno/constantes');

var _movimientos_caja = require('../../movimientos_caja');

var _modales = require('../../modales');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');

var dp = null;
var nav = null;
var _MS_PER_DAY = 1000 * 60 * 60 * 24;

function Ver() {
    if ($("ul#tabs").find("li > a#idReservas").length <= 0) {
        var tab = yo(_templateObject);

        var tabContent = yo(_templateObject2, function () {
            return MostrarPorDias(1);
        }, function () {
            return MostrarPorDias(3);
        }, function () {
            return MostrarPorDias(7);
        }, function () {
            return MostrarPorDias(15);
        }, function () {
            return MostrarMes();
        });

        $("#tabs").append(tab);
        $("#tabs_contents").append(tabContent);
        $("#idReservas").click();

        nav = new DayPilot.Navigator("nav");
        nav.locale = "es-es";
        nav.selectMode = "day";
        nav.showMonths = 1;
        nav.skipMonths = 1;
        nav.onTimeRangeSelected = function (args) {
            dp.startDate = args.day.value;
            dp.days = nav.startDate.daysInMonth();
            dp.update();
        };
        nav.init();
        dp = new DayPilot.Scheduler("dp");
        dp.locale = "es-es";
        dp.timeRangeSelectingStartEndEnabled = true;
        dp.eventMovingStartEndFormat = "MMMM d, yyyy";
        dp.startDate = nav.selectionDay.value;
        dp.days = nav.startDate.daysInMonth();
        dp.cellDuration = 1440;
        dp.treeEnabled = true;
        dp.treePreventParentUsage = true;

        if ($(window).width() < 1350) {
            dp.cellWidthSpec = 'Fixed';
        } else {
            dp.cellWidthSpec = 'Auto';
        }

        dp.eventDeleteHandling = "Update";
        dp.timeHeaders = [{ groupBy: "Month", format: "MMMM yyyy" }, { groupBy: "Day", format: "d" }];

        dp.eventHeight = 60;
        dp.bubble = new DayPilot.Bubble({});

        dp.rowHeaderColumns = [{ title: "Habitacion", width: 70 }, { title: "Capacidad", width: 70 }, { title: "Estado", width: 70 }];

        dp.separators = [{ location: new DayPilot.Date(), color: "red" }];

        dp.contextMenuResource = new DayPilot.Menu({ items: [{ text: 'Open', onclick: function onclick() {
                    var e = this.source;var command = this.item.command;console.log(e);
                } }] });

        dp.contextMenu = new DayPilot.Menu({ items: [{ text: "Check out", onClick: function onClick(args) {
                    console.log(args.source);
                    //dp.events.edit(args.source); 
                }
            }, { text: "Eliminar", onClick: function onClick(args) {
                    //dp.events.remove(args.source); 
                }
            }] });

        dp.onEventClick = function (args) {
            /*var modal = new DayPilot.Modal();
            modal.closed = function() {
                // reload all events
                var data = this.result;
                if (data && data.result === "OK") {
                    cargarEvents();
                }
            };
            modal.showUrl("edit.php?id=" + args.e.id());*/
        };

        dp.onTimeRangeSelected = function (args) {
            RegistroReserva(args);
            /*var modal = new DayPilot.Modal();
            modal.closed = function() {
                dp.clearSelection();
                      // reload all events
                var data = this.result;
                if (data && data.result === "OK") {
                    cargarEvents();
                }
            };
            modal.showUrl("new.php?start=" + args.start + "&end=" + args.end + "&resource=" + args.resource);*/
        };

        dp.onBeforeResHeaderRender = function (args) {
            var beds = function beds(count) {
                return count + " cama" + (count > 1 ? "s" : "");
            };

            args.resource.columns[0].html = args.resource.capacity == undefined ? "" : beds(args.resource.capacity);
            args.resource.columns[1].html = args.resource.status;
            switch (args.resource.status) {
                case "SUCIO":
                    args.resource.cssClass = "status_dirty";
                    break;
                case "POR LIMPIAR":
                    args.resource.cssClass = "status_cleanup";
                    break;
                case "LIMPIO":
                    args.resource.cssClass = "status_clean";
                    break;
            }

            args.resource.areas = [{
                top: 3,
                right: 4,
                height: 14,
                width: 14,
                action: "JavaScript",
                js: function js(r) {
                    /*var modal = new DayPilot.Modal();
                    modal.onClosed = function(args) {
                        cargarResources();
                    };
                    modal.showUrl("room_edit.php?id=" + r.id);*/
                },
                v: "Hover",
                css: "icon icon-edit"
            }];
        };

        dp.onBeforeEventRender = function (args) {
            var start = new DayPilot.Date(args.e.start);
            var end = new DayPilot.Date(args.e.end);

            var today = DayPilot.Date.today();
            var now = new DayPilot.Date();

            args.e.cssClass = 'text-white';
            args.e.html = "<span style='color:white;font-weight: bold;'>" + args.e.text + " (" + start.toString("M/d/yyyy") + " - " + end.toString("M/d/yyyy") + ")" + "</span>";
            args.e.barHidden = true;
            switch (args.e.status) {
                case "NUEVO":
                    var in2days = today.addDays(1);

                    if (start < in2days) {
                        args.e.backColor = '#cc0000';
                        args.e.toolTip = 'EXPIRADO (NO CONFIRMO EN LAS 24 HORAS)';
                    } else {
                        args.e.backColor = '#e69138';
                        args.e.toolTip = 'NUEVO';
                    }
                    break;
                case "CONFIRMADO":
                    var arrivalDeadline = today.addHours(18);

                    if (start < today || start.getDatePart() === today.getDatePart() && now > arrivalDeadline) {
                        // must arrive before 6 pm
                        args.e.backColor = '#cc0000';
                        args.e.toolTip = 'LLEGADA TARDIA';
                    } else {
                        args.e.backColor = '#6aa84f';
                        args.e.toolTip = "CONFIRMADO";
                    }
                    break;
                case 'CHECKIN':
                    // arrived
                    var checkoutDeadline = today.addHours(10);

                    if (end < today || end.getDatePart() === today.getDatePart() && now > checkoutDeadline) {
                        // must checkout before 10 am
                        args.e.backColor = '#cc0000'; // red
                        args.e.toolTip = "REGISTRO TARDIO";
                    } else {
                        args.e.backColor = "#3c78d8"; // blue
                        args.e.toolTip = "CHECKIN";
                    }
                    break;
                case 'CHECKOUT':
                    // checked out
                    args.e.backColor = "#1b1c1d";
                    args.e.toolTip = "CHECKOUT";
                    break;
                default:
                    args.e.toolTip = "SIN ESTADO";
                    break;
            }

            args.e.html = args.e.html + "<br /><span style='color:white'>" + args.e.toolTip + "</span>";

            var paid = args.e.paid;
            var paidColor = "white";

            args.e.areas = [{ bottom: 10, right: 4, html: "<div style='color:" + paidColor + "; font-size: 8pt;'>Paid: " + paid + "%</div>", v: "Visible" }, { left: 4, bottom: 8, right: 4, height: 2, html: "<div style='background-color:" + paidColor + "; height: 100%; width:" + paid + "%'></div>", v: "Visible" }];
        };

        dp.init();
    } else {
        $("#idReservas").click();
        AjustarTamanio();
    }

    $(window).resize(function () {
        AjustarTamanio();
    });

    CargarResources();
    CargarEvents();

    /*var dp = new DayPilot.Scheduler("dp");
      dp.startDate = "2018-01-01";
    dp.days = 365;
    dp.scale = "Day";
    dp.timeHeaders = [
        { groupBy: "Month", format: "MMM yyyy" },
        { groupBy: "Cell", format: "d" }
    ];
      dp.eventHeight = 30;
      dp.contextMenu = new DayPilot.Menu({items: [
        {text:"Editar", onClick: function(args) { 
                console.log(args.source)
                //dp.events.edit(args.source); 
            } 
        },
        {text:"Eliminar", onClick: function(args) { 
                //dp.events.remove(args.source); 
            } 
        },
      ]});
      dp.treeEnabled = true;
    dp.treePreventParentUsage = true;
    
    dp.resources = [
                 { name: "standard", id: "G1", expanded: true, children:[
                         { name : "Room 1", id : "A" },
                         { name : "Room 2", id : "B" },
                         { name : "Room 3", id : "C" },
                         { name : "Room 4", id : "D" }
                         ]
                 },
                 { name: "doble cama", id: "G2", expanded: true, children:[
                         { name : "Person 1", id : "E" },
                         { name : "Person 2", id : "F" },
                         { name : "Person 3", id : "G" },
                         { name : "Person 4", id : "H" }
                         ]
                 },
                 { name: "simple", id: "G3", expanded: false, children:[
                         { name : "Tool 1", id : "I" },
                         { name : "Tool 2", id : "J" },
                         { name : "Tool 3", id : "K" },
                         { name : "Tool 4", id : "L" }
                         ]
                 },
                  ];
      dp.heightSpec = "Max";
    dp.height = 500;
      dp.events.list = [];
      for (var i = 0; i < 12; i++) {
        var duration = Math.floor(Math.random() * 6) + 1; // 1 to 6
        var durationDays = Math.floor(Math.random() * 6) + 1; // 1 to 6
        var start = Math.floor(Math.random() * 6) + 2; // 2 to 7
          var e = {
            start: new DayPilot.Date("2018-05-05T00:00:00").addDays(start),
            end: new DayPilot.Date("2018-05-05T12:00:00").addDays(start).addDays(durationDays).addHours(duration),
            id: DayPilot.guid(),
            resource: String.fromCharCode(65+i),
            text: "Event " + (i + 1),
            bubbleHtml: "Event " + (i + 1),
            barColor: barColor(i),
            barBackColor: barBackColor(i)
        };
          dp.events.list.push(e);
    }
      dp.eventMovingStartEndEnabled = true;
    dp.eventResizingStartEndEnabled = true;
    dp.timeRangeSelectingStartEndEnabled = true;
      // event moving
    dp.onEventMoved = function (args) {
        dp.message("Moved: " + args.e.text());
    };
      dp.onEventMoving = function(args) {
        if (args.e.resource() === "A" && args.resource === "B") {  // don't allow moving from A to B
            args.left.enabled = false;
            args.right.html = "You can't move an event from Room 1 to Room 2";
              args.allowed = false;
        }
        else if (args.resource === "B") {  // must start on a working day, maximum length one day
            while (args.start.getDayOfWeek() == 0 || args.start.getDayOfWeek() == 6) {
                args.start = args.start.addDays(1);
            }
            args.end = args.start.addDays(1);  // fixed duration
            args.left.enabled = false;
            args.right.html = "Events in Room 2 must start on a workday and are limited to 1 day.";
        }
          if (args.resource === "C") {
            var except = args.e.data;
            var events = dp.rows.find(args.resource).events.all();
              var start = args.start;
            var end = args.end;
            var overlaps = events.some(function(item) {
                return item.data !== except && DayPilot.Util.overlaps(item.start(), item.end(), start, end);
            });
              while (overlaps) {
                start = start.addDays(1);
                end = end.addDays(1);
                  overlaps = events.some(function(item) {
                    return item.data !== except && DayPilot.Util.overlaps(item.start(), item.end(), start, end);
                });
            }
              if (args.start !== start) {
                args.start = start;
                args.end = end;
                  args.left.enabled = false;
                args.right.html = "Start automatically moved to " + args.start.toString("d MMMM, yyyy");
            }
          }
      };
      // event resizing
    dp.onEventResized = function (args) {
        dp.message("Resized: " + args.e.text());
    };
      // event creating
    dp.onTimeRangeSelected = function (args) {
        
        ModalRegistroReserva(args)
          DayPilot.Modal.prompt("New event name:", "New Event").then(function(modal) {
             
            dp.clearSelection();
            var name = modal.result;
            if (!name) return;
            var e = new DayPilot.Event({
                start: args.start,
                end: args.end,
                id: DayPilot.guid(),
                resource: args.resource,
                text: name
            });
            dp.events.add(e);
            dp.message("Created");
        }); 
    };
      dp.onEventMove = function(args) {
        if (args.ctrl) {
            var newEvent = new DayPilot.Event({
                start: args.newStart,
                end: args.newEnd,
                text: "Copy of " + args.e.text(),
                resource: args.newResource,
                id: DayPilot.guid()  // generate random id
            });
            dp.events.add(newEvent);
              // notify the server about the action here
              args.preventDefault(); // prevent the default action - moving event to the new location
        }
    };
      dp.init();
      dp.scrollTo("2018-01-01");*/
}

function VerRegistroReserva(variables) {
    global.objCliente = '';
    var el = yo(_templateObject3, new DayPilot.Date(variables.args.start.value).toString("dddd d MMMM yyyy", "es-es"), new DayPilot.Date(variables.args.end.value).toString("dddd d MMMM yyyy", "es-es"), variables.documentos.map(function (e) {
        return e.Cod_TipoDoc == 1 || e.Cod_TipoDoc == 7 ? yo(_templateObject4, e.Cod_TipoDoc, e.Nom_TipoDoc) : yo(_templateObject5);
    }), function () {
        return BuscarClienteDoc();
    }, function () {
        return (0, _modales.NuevoCliente)(variables.documentos);
    }, function () {
        return (0, _modales.BuscarCliente)("Cliente", "Nro_Documento", "001");
    }, variables.paises.map(function (e) {
        return yo(_templateObject4, e.Cod_Pais, e.Nom_Pais);
    }), variables.datos_habitacion.tipo_habitacion, function () {
        return CambioTarifa();
    }, variables.datos_habitacion.tarifas.map(function (e) {
        return yo(_templateObject4, e.Cod_Tarifa, e.Des_Tarifa);
    }), function () {
        return CambioCantidad(variables.datos_habitacion.precio);
    }, Array(variables.datos_habitacion.cantidad).fill(null).map(function (u, i) {
        return yo(_templateObject6, i + 1, i + 1);
    }), variables.monedas.map(function (e) {
        return yo(_templateObject4, e.Cod_Moneda, e.Nom_Moneda);
    }), variables.datos_habitacion.precio, function () {
        return ConfirmarReserva(variables);
    });

    var modal_proceso = document.getElementById('modal-proceso');
    empty(modal_proceso).appendChild(el);
    $('#modal-proceso').modal();
    $('#modal-proceso').on('hidden.bs.modal', function () {
        dp.clearSelection();
    });

    $('#modal-superior').on('hidden.bs.modal', function () {

        if (global.objCliente != '') {
            $("#Cod_TipoDocumento").val(global.objCliente.Cod_TipoDocumento);
            $("#Cliente").val(global.objCliente.Cliente);
            $("#Nro_Documento").val(global.objCliente.Nro_Documento);
            $("#Cliente").attr("data-id", global.objCliente.Id_ClienteProveedor);
        }
    });
}

function BuscarClienteDoc() {
    var Nro_Documento = document.getElementById('Nro_Documento').value;
    var Cod_TipoDocumento = document.getElementById('Cod_TipoDoc').value;
    var Cod_TipoCliente = "001";
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Nro_Documento: Nro_Documento, Cod_TipoDocumento: Cod_TipoDocumento, Cod_TipoCliente: Cod_TipoCliente
        })
    };
    fetch(_constantes.URL + '/clientes_api/get_cliente_by_documento', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok' && res.data.cliente.length > 0) {
            global.objCliente = res.data.cliente[0];

            if (global.objCliente != '' && global.objCliente) {
                $("#Cod_TipoDocumento").val(global.objCliente.Cod_TipoDocumento);
                $("#Cliente").val(global.objCliente.Cliente);
                $("#Nro_Documento").val(global.objCliente.Nro_Documento);
                $("#Cliente").attr("data-id", global.objCliente.Id_ClienteProveedor);
            }
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CambioCantidad(precio) {
    try {
        $("#Precio").val(parseFloat($("#Precio").val()) * parseInt($("#Cantidad").val()));
    } catch (e) {
        $("#Precio").val(precio);
    }
}

function dateDiffInDays(a, b) {
    var utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());
    var utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());
    return Math.floor((utc2 - utc1) / _MS_PER_DAY);
}

function ConfirmarReserva(variables) {
    var Cod_Reserva = "R0003";
    var Cod_Habitacion = variables.args.resource;
    var Id_Huesped = parseInt($("#Cliente").attr("data-id"));
    var Cod_TipoHuesped = null;
    var Item = 0;
    var Cod_Tarifa = $("#Tarifa").val();
    var Monto = $("#Precio").val();
    var Des_Reserva = $("#Des_Reserva").val().trim();
    var Cod_Moneda = $("#Cod_Moneda").val();
    var Cod_TipoReserva = "TR0001";
    var Fecha_Inicio = variables.args.start.value;
    var Fecha_Fin = variables.args.end.value;
    var Cod_EstadoReserva = "NUEVO";
    var Nro_Adultos = $("#NroAdultos").val();
    var Nro_ninos = $("#NroNinios").val();
    var Nro_infantes = $("#NroInfantes").val();
    var CheckIn = null;
    var CheckedOut = null;
    var Duracion = dateDiffInDays(new Date(new DayPilot.Date(Fecha_Inicio).toString("yyyy-MM-d", "es-es")), new Date(new DayPilot.Date(Fecha_Fin).toString("yyyy-MM-d", "es-es")));
    var Preferencias = null;
    var ExtraCamas = 0;
    var Proposito = null;
    var Cod_Recurso = "CR001";
    var Cod_TipoRecurso = "CTR001";
    var Cod_TipoLlegada = null;
    var Detalle_Llegada = null;
    var FechaHora_Llegada = null;
    var Cod_TipoPartida = null;
    var Detalle_Partida = null;
    var FechaHora_Partida = null;
    var Numero_Tarjeta = null;
    var Cod_TipoTarjeta = null;
    var Fecha_Vencimiento = null;
    var CVC = null;
    var Cod_EntidadFinanciera = null;
    var Nro_Deposito = null;
    var Fecha_Cancelacion = null;
    var Motivo_Cancelacion = null;
    var Obs_Reserva = null;
    var Cod_Grupo = null;

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_Reserva: Cod_Reserva,
            Cod_Habitacion: Cod_Habitacion,
            Id_Huesped: Id_Huesped,
            Cod_TipoHuesped: Cod_TipoHuesped,
            Item: Item,
            Cod_Tarifa: Cod_Tarifa,
            Monto: Monto,
            Des_Reserva: Des_Reserva,
            Cod_Moneda: Cod_Moneda,
            Cod_TipoReserva: Cod_TipoReserva,
            Fecha_Inicio: Fecha_Inicio,
            Fecha_Fin: Fecha_Fin,
            Cod_EstadoReserva: Cod_EstadoReserva,
            Nro_Adultos: Nro_Adultos,
            Nro_ninos: Nro_ninos,
            Nro_infantes: Nro_infantes,
            CheckIn: CheckIn,
            CheckedOut: CheckedOut,
            Duracion: Duracion,
            Preferencias: Preferencias,
            ExtraCamas: ExtraCamas,
            Proposito: Proposito,
            Cod_Recurso: Cod_Recurso,
            Cod_TipoRecurso: Cod_TipoRecurso,
            Cod_TipoLlegada: Cod_TipoLlegada,
            Detalle_Llegada: Detalle_Llegada,
            FechaHora_Llegada: FechaHora_Llegada,
            Cod_TipoPartida: Cod_TipoPartida,
            Detalle_Partida: Detalle_Partida,
            FechaHora_Partida: FechaHora_Partida,
            Numero_Tarjeta: Numero_Tarjeta,
            Cod_TipoTarjeta: Cod_TipoTarjeta,
            Fecha_Vencimiento: Fecha_Vencimiento,
            CVC: CVC,
            Cod_EntidadFinanciera: Cod_EntidadFinanciera,
            Nro_Deposito: Nro_Deposito,
            Fecha_Cancelacion: Fecha_Cancelacion,
            Motivo_Cancelacion: Motivo_Cancelacion,
            Obs_Reserva: Obs_Reserva,
            Cod_Grupo: Cod_Grupo
        })
    };
    fetch(_constantes.URL + '/reservas_api/guardar_reserva', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        $('#modal-proceso').modal("hide");
        if (res.respuesta == "ok") {
            CargarEvents();
        } else {
            toastr.error('No se pudo registrar correctamente la reserva', 'Error', { timeOut: 5000 });
        }
    }).catch(function (e) {
        console.log(e);
        $('#modal-proceso').modal("hide");
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function RegistroReserva(args) {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({})
    };
    fetch(_constantes.URL + '/reservas_api/get_variables_reserva', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        var variables = res.data;
        var datos_habitacion = {
            tipo_habitacion: "DOBLE",
            cantidad: 2,
            precio: 12,
            tarifas: [{
                Cod_Tarifa: 'TA0001',
                Des_Tarifa: 'Premium'
            }, {
                Cod_Tarifa: 'TA0002',
                Des_Tarifa: 'Clasica'
            }, {
                Cod_Tarifa: 'TA0003',
                Des_Tarifa: 'VIP'
            }]
        };

        variables['args'] = args;
        variables['datos_habitacion'] = datos_habitacion;
        VerRegistroReserva(variables);
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CargarResources() {

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({})
    };
    fetch(_constantes.URL + '/reservas_api/get_habitaciones', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        DataHabitaciones(res.data.habitaciones, function (list) {
            dp.resources = [{ name: list[0].tipo, id: list[0].Cod_Tipo, expanded: true, eventHeight: 25, children: list[0].list }, { name: list[1].tipo, id: list[1].Cod_Tipo, expanded: true, eventHeight: 25, children: list[1].list }, { name: list[2].tipo, id: list[2].Cod_Tipo, expanded: true, eventHeight: 25, children: list[2].list }];
            dp.update();
        });
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CargarEvents() {

    var Fecha_Inicio = dp.visibleStart();
    var Fecha_Fin = dp.visibleEnd();

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Fecha_Inicio: Fecha_Inicio,
            Fecha_Fin: Fecha_Fin
        })
    };
    fetch(_constantes.URL + '/reservas_api/get_reservas', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        DataReservas(res.data.reservas, function (list) {
            console.log(list);
            dp.events.list = list;
            dp.update();
        });
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });

    /*var start = dp.visibleStart();
    var end = dp.visibleEnd();
      var data = [{
        id : '101',
        text : 'PRUEBA DE HABITACION',
        start : '2018-06-01',
        end : '2018-06-12',
        resource : '101',
        bubbleHtml : "Reservation details: <br/>",
        status : 'New',
        paid : '40',
    }]  
    dp.events.list = data;
    dp.update();*/
}

function MostrarPorDias(dia) {
    dp.startDate = nav.selectionDay.value;
    dp.days = dia;
    dp.update();
}

function MostrarMes() {
    dp.startDate = nav.selectionDay.value;
    dp.days = nav.startDate.daysInMonth();
    dp.update();
}

function AjustarTamanio() {
    if ($(window).width() < 1350) {
        dp.cellWidthSpec = 'Fixed';
    } else {
        dp.cellWidthSpec = 'Auto';
    }
}

function DataReservas(data, callback) {

    var list = [];
    for (var i = 0; i < data.length; i++) {
        list.push({
            id: data[i].Cod_Reserva,
            text: data[i].Id_Huesped,
            start: data[i].Fecha_Inicio,
            end: data[i].Fecha_Fin,
            resource: data[i].Cod_Habitacion,
            bubbleHtml: "Detalles: <br/>" + data[i].Des_Reserva + "<br/>" + data[i].Cod_Moneda + " " + data[i].Monto,
            status: data[i].Cod_EstadoReserva,
            paid: '40'
        });
    }
    callback(list);
}

function DataHabitaciones(data, callback) {
    var listTipos = [];
    var listS = [];
    var listM = [];
    var listD = [];
    for (var i = 0; i < data.length; i++) {
        var obj = data[i];
        if (obj.Cod_Tipo == "TH002") listS.push({
            id: obj.Cod_Habitacion,
            name: obj.Cod_Habitacion + " " + obj.Des_Habitacion,
            capacity: obj.Capacidad,
            status: obj.Cod_EstadoHabitacion
        });else {
            if (obj.Cod_Tipo == "TH001") {
                listD.push({
                    id: obj.Cod_Habitacion,
                    name: obj.Cod_Habitacion + " " + obj.Des_Habitacion,
                    capacity: obj.Capacidad,
                    status: obj.Cod_EstadoHabitacion
                });
            } else {
                listM.push({
                    id: obj.Cod_Habitacion,
                    name: obj.Cod_Habitacion + " " + obj.Des_Habitacion,
                    capacity: obj.Capacidad,
                    status: obj.Cod_EstadoHabitacion
                });
            }
        }
    }
    listTipos.push({ tipo: 'Simple', Cod_Tipo: 'TH002', list: listS });
    listTipos.push({ tipo: 'Doble', Cod_Tipo: 'TH001', list: listD });
    listTipos.push({ tipo: 'Matrimonial', Cod_Tipo: 'TH003', list: listM });
    callback(listTipos);
}

function LibroReservas(pCargarEfectivo) {
    Ver();
}

exports.LibroReservas = LibroReservas;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../../../constantes_entorno/constantes":377,"../../modales":395,"../../movimientos_caja":398,"empty-element":338,"yo-yo":375}],387:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NuevoArqueoCaja = undefined;

var _templateObject = _taggedTemplateLiteral(['\n        <div class="modal-dialog modal-lg">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Arqueo de Caja</strong></h4>\n                </div>\n                <div class="modal-body"  id="modal_form"> \n                    <div class="row">\n                        <div id="modal_error" class="callout callout-danger hidden">\n                            <p> Es necesario llenar los campos marcados con rojo</p>\n                        </div>\n                    </div>\n\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <div class="box box-primary">\n                                <div class="box-header with-border">\n                                    <div class="col-md-4">\n                                        <h3 class="box-title">Turno : ', '</h3>\n                                    </div>\n                                    <div class="col-md-8 text-right">\n                                        <h3 class="box-title">Nro : 0000', '</h3>\n                                    </div>\n                                </div>\n                                <div class="box-body">\n                                    <div class="row">\n                                        <div class="col-md-4">\n                                            <div class="form-group">\n                                                <label for="Cajero">Responsable</label>\n                                                <input type="text" class="form-control" id="Cajero" onkeypress=', '>\n                                            </div>\n                                        </div>\n                                        <div class="col-md-4">\n                                            <div class="form-group">\n                                                <label for="Cod_Caja">Caja</label>\n                                                <input type="text" class="form-control" id="Cod_Caja" value="', '" onkeypress=', '>\n                                            </div>\n                                        </div>\n                                        <div class="col-md-4">\n                                            <div class="form-group">\n                                                <label for="FechaHora">Fecha y Hora</label>\n                                                <input type="datetime-local" class="form-control" id="FechaHora" value=', '>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div> \n                    <div class="row">\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="checkbox">\n                                <label>\n                                    <input type="checkbox" id="optEnvio" name="optEnvio"> Envio de Efectivo\n                                </label>\n                            </div>\n                        </div>\n                        ', '\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <div class="box box-primary">\n                                <div class="box-header with-border">\n                                    <h3 class="box-title">Arqueo de Caja</h3>\n                                </div>\n                                <div class="box-body">\n                                    <div class="row">\n                                        <div class="col-md-5">\n                                            <div class="nav-tabs-custom">\n                                                <ul class="nav nav-tabs" id="tabsArqueoCaja">\n                                                    <li class="active"><a href="#tabSoles" data-toggle="tab" id="tSoles" aria-expanded="true" onclick="', '">Soles S/</a></li>\n                                                    <li><a href="#tabDolares" data-toggle="tab" id="tDolares" aria-expanded="true" onclick="', '">Dolares $</a></li>\n                                                </ul>\n                                                <div class="tab-content">\n                                                    <div class="tab-pane active" id="tabSoles">\n                                                        <div class="row">\n                                                            <div class="box box-default">\n                                                                <div class="box-body">\n                                                                    <form id="formSumaTotalSoles">\n                                                                        <div class="table-responsive">\n                                                                            <table class="table table-bordered table-striped">\n                                                                                <tbody> \n                                                                                    ', '\n                                                                                </tbody>\n                                                                            </table>\n                                                                        </div>\n                                                                    </form>\n                                                                </div>\n                                                                <div class="box-footer">\n                                                                    <div class="row">\n                                                                        <div class="col-md-12">\n                                                                            <div class="col-md-6">\n                                                                                <div class="form-group">\n                                                                                    <label id="laSaldoTotalSoles"></label>\n                                                                                    <input type="text" class="form-control required" id="SaldoTotalSoles" value="0.00" onkeypress=', '>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class="col-md-6">\n                                                                                <div class="form-group">\n                                                                                    <label id="laDiferenciaSoles"></label>\n                                                                                    <input type="text" class="form-control required" id="DiferenciaSoles"  onkeypress=', '>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        \n                                                        </div>\n                                                    </div>\n                                                    <div class="tab-pane" id="tabDolares">\n                                                        <div class="row">\n                                                            <div class="box box-default">\n                                                                <div class="box-body">\n                                                                    <form id="formSumaTotalDolares">\n                                                                        <div class="table-responsive">\n                                                                            <table class="table table-bordered table-striped">\n                                                                                <tbody> \n                                                                                    ', '\n                                                                                </tbody>\n                                                                            </table>\n                                                                        </div>\n                                                                    </form>\n                                                                </div>\n                                                                <div class="box-footer">\n                                                                    <div class="row">\n                                                                        <div class="col-md-12">\n                                                                            <div class="col-md-6">\n                                                                                <div class="form-group">\n                                                                                    <label id="laSaldoTotalDolares"></label>\n                                                                                    <input type="text" class="form-control required" id="SaldoTotalDolares" value="0.00" onkeypress=', '>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class="col-md-6">\n                                                                                <div class="form-group">\n                                                                                    <label id="laDiferenciaDolares"></label>\n                                                                                    <input type="text" class="form-control required" id="DiferenciaDolares" onkeypress=', '>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        \n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="col-md-7">\n                                           \n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <div class="nav-tabs-custom">\n                                                        <ul class="nav nav-tabs" id="tabsArqueoCajaBilletes">\n                                                            <li class="active"><a href="#tabSolesBilletes" id="tbSoles" data-toggle="tab" aria-expanded="true" onclick="', '">Soles S/</a></li>\n                                                            <li ><a href="#tabDolaresBilletes" id="tbDolares" data-toggle="tab" aria-expanded="true" onclick="', '">Dolares $</a></li>\n                                                        </ul>\n                                                        <div class="tab-content">\n                                                            <div class="tab-pane active" id="tabSolesBilletes">\n                                                                <div class="row">\n                                                                    <div class="box box-default">\n                                                                    \n                                                                        <div class="box-body">\n                                                                            <div class="row">\n                                                                                <div class="col-md-6">\n                                                                                    <div class="form-group">\n                                                                                        <label id="laCantidadBilletesSoles">Total en Soles S/</label>\n                                                                                        <input class="form-control" type="number" id="CantidadBilletesSoles" value="0.00" onkeyup=', '>\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div class="col-md-6">\n                                                                                    <a href="javascript:void(0)" onclick=', '>Distribuir Automaticamente</a>\n                                                                                </div>\n                                                                            </div>\n                                                                            <form id="formBilletesSoles">\n                                                                                <div class="table-responsive" id="divTablaSoles">\n                                                                                    <table class="table table-bordered table-striped" id="tablaSoles">\n                                                                                        <thead>\n                                                                                            <tr>\n                                                                                                <th>Codigo</th>\n                                                                                                <th>Billete</th>\n                                                                                                <th>Cantidad</th>\n                                                                                                <th>Total</th>\n                                                                                            </tr>\n                                                                                        </thead>\n                                                                                        <tbody> \n                                                                                        \n                                                                                        </tbody>\n                                                                                    </table>\n                                                                                </div>\n                                                                            </form>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <div class="tab-pane" id="tabDolaresBilletes">\n                                                                <div class="box box-default">\n                                                                    <div class="box-body">\n                                                                        <div class="row">\n                                                                            <div class="col-md-6">\n                                                                                <div class="form-group">\n                                                                                    <label id="laCantidadBilletesDolares">Total en Dolares USD</label>\n                                                                                    <input class="form-control" type="number" id="CantidadBilletesDolares" value="0.00" onkeyup=', '>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class="col-md-6">\n                                                                                <a href="javascript:void(0)" onclick=', '>Distribuir Automaticamente</a>\n                                                                            </div>\n                                                                        </div>\n\n                                                                        <form id="formBilletesDolares">\n                                                                            <div class="table-responsive" id="divTablaDolares">\n                                                                                <table class="table table-bordered table-striped" id="tablaDolares">\n                                                                                    <thead>\n                                                                                        <tr>\n                                                                                            <th>Billete</th>\n                                                                                            <th>Cantidad</th>\n                                                                                            <th>Total</th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody> \n                                                                                    \n                                                                                    </tbody>\n                                                                                </table>\n                                                                            </div>\n                                                                        </form>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    ', ' \n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog modal-lg">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Arqueo de Caja</strong></h4>\n                </div>\n                <div class="modal-body"  id="modal_form"> \n                    <div class="row">\n                        <div id="modal_error" class="callout callout-danger hidden">\n                            <p> Es necesario llenar los campos marcados con rojo</p>\n                        </div>\n                    </div>\n\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <div class="box box-primary">\n                                <div class="box-header with-border">\n                                    <div class="col-md-4">\n                                        <h3 class="box-title">Turno : ', '</h3>\n                                    </div>\n                                    <div class="col-md-8 text-right">\n                                        <h3 class="box-title">Nro : 0000', '</h3>\n                                    </div>\n                                </div>\n                                <div class="box-body">\n                                    <div class="row">\n                                        <div class="col-md-4">\n                                            <div class="form-group">\n                                                <label for="Cajero">Responsable</label>\n                                                <input type="text" class="form-control" id="Cajero" onkeypress=', '>\n                                            </div>\n                                        </div>\n                                        <div class="col-md-4">\n                                            <div class="form-group">\n                                                <label for="Cod_Caja">Caja</label>\n                                                <input type="text" class="form-control" id="Cod_Caja" value="', '" onkeypress=', '>\n                                            </div>\n                                        </div>\n                                        <div class="col-md-4">\n                                            <div class="form-group">\n                                                <label for="FechaHora">Fecha y Hora</label>\n                                                <input type="datetime-local" class="form-control" id="FechaHora" value=', '>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div> \n                    <div class="row">\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="checkbox">\n                                <label>\n                                    <input type="checkbox" id="optEnvio" name="optEnvio"> Envio de Efectivo\n                                </label>\n                            </div>\n                        </div>\n                        ', '\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <div class="box box-primary">\n                                <div class="box-header with-border">\n                                    <h3 class="box-title">Arqueo de Caja</h3>\n                                </div>\n                                <div class="box-body">\n                                    <div class="row">\n                                        <div class="col-md-5">\n                                            <div class="nav-tabs-custom">\n                                                <ul class="nav nav-tabs" id="tabsArqueoCaja">\n                                                    <li class="active"><a href="#tabSoles" data-toggle="tab" id="tSoles" aria-expanded="true" onclick="', '">Soles S/</a></li>\n                                                    <li><a href="#tabDolares" data-toggle="tab" id="tDolares" aria-expanded="true" onclick="', '">Dolares $</a></li>\n                                                </ul>\n                                                <div class="tab-content">\n                                                    <div class="tab-pane active" id="tabSoles">\n                                                        <div class="row">\n                                                            <div class="box box-default">\n                                                                <div class="box-body">\n                                                                    <form id="formSumaTotalSoles">\n                                                                        <div class="table-responsive">\n                                                                            <table class="table table-bordered table-striped">\n                                                                                <tbody> \n                                                                                    ', '\n                                                                                </tbody>\n                                                                            </table>\n                                                                        </div>\n                                                                    </form>\n                                                                </div>\n                                                                <div class="box-footer">\n                                                                    <div class="row">\n                                                                        <div class="col-md-12">\n                                                                            <div class="col-md-6">\n                                                                                <div class="form-group">\n                                                                                    <label id="laSaldoTotalSoles"></label>\n                                                                                    <input type="text" class="form-control required" id="SaldoTotalSoles" value="0.00" onkeypress=', '>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class="col-md-6">\n                                                                                <div class="form-group">\n                                                                                    <label id="laDiferenciaSoles"></label>\n                                                                                    <input type="text" class="form-control required" id="DiferenciaSoles"  onkeypress=', '>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        \n                                                        </div>\n                                                    </div>\n                                                    <div class="tab-pane" id="tabDolares">\n                                                        <div class="row">\n                                                            <div class="box box-default">\n                                                                <div class="box-body">\n                                                                    <form id="formSumaTotalDolares">\n                                                                        <div class="table-responsive">\n                                                                            <table class="table table-bordered table-striped">\n                                                                                <tbody> \n                                                                                    ', '\n                                                                                </tbody>\n                                                                            </table>\n                                                                        </div>\n                                                                    </form>\n                                                                </div>\n                                                                <div class="box-footer">\n                                                                    <div class="row">\n                                                                        <div class="col-md-12">\n                                                                            <div class="col-md-6">\n                                                                                <div class="form-group">\n                                                                                    <label id="laSaldoTotalDolares"></label>\n                                                                                    <input type="text" class="form-control required" id="SaldoTotalDolares" value="0.00" onkeypress=', '>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class="col-md-6">\n                                                                                <div class="form-group">\n                                                                                    <label id="laDiferenciaDolares"></label>\n                                                                                    <input type="text" class="form-control required" id="DiferenciaDolares" onkeypress=', '>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        \n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="col-md-7">\n                                           \n                                            <div class="row">\n                                                <div class="col-md-12">\n                                                    <div class="nav-tabs-custom">\n                                                        <ul class="nav nav-tabs" id="tabsArqueoCajaBilletes">\n                                                            <li class="active"><a href="#tabSolesBilletes" id="tbSoles" data-toggle="tab" aria-expanded="true" onclick="', '">Soles S/</a></li>\n                                                            <li ><a href="#tabDolaresBilletes" id="tbDolares" data-toggle="tab" aria-expanded="true" onclick="', '">Dolares $</a></li>\n                                                        </ul>\n                                                        <div class="tab-content">\n                                                            <div class="tab-pane active" id="tabSolesBilletes">\n                                                                <div class="row">\n                                                                    <div class="box box-default">\n                                                                    \n                                                                        <div class="box-body">\n                                                                            <div class="row">\n                                                                                <div class="col-md-6">\n                                                                                    <div class="form-group">\n                                                                                        <label id="laCantidadBilletesSoles">Total en Soles S/</label>\n                                                                                        <input class="form-control" type="number" id="CantidadBilletesSoles" value="0.00" onkeyup=', '>\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div class="col-md-6">\n                                                                                    <a href="javascript:void(0)" onclick=', '>Distribuir Automaticamente</a>\n                                                                                </div>\n                                                                            </div>\n                                                                            <form id="formBilletesSoles">\n                                                                                <div class="table-responsive" id="divTablaSoles">\n                                                                                    <table class="table table-bordered table-striped" id="tablaSoles">\n                                                                                        <thead>\n                                                                                            <tr>\n                                                                                                <th>Codigo</th>\n                                                                                                <th>Billete</th>\n                                                                                                <th>Cantidad</th>\n                                                                                                <th>Total</th>\n                                                                                            </tr>\n                                                                                        </thead>\n                                                                                        <tbody> \n                                                                                        \n                                                                                        </tbody>\n                                                                                    </table>\n                                                                                </div>\n                                                                            </form>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <div class="tab-pane" id="tabDolaresBilletes">\n                                                                <div class="box box-default">\n                                                                    <div class="box-body">\n                                                                        <div class="row">\n                                                                            <div class="col-md-6">\n                                                                                <div class="form-group">\n                                                                                    <label id="laCantidadBilletesDolares">Total en Dolares USD</label>\n                                                                                    <input class="form-control" type="number" id="CantidadBilletesDolares" value="0.00" onkeyup=', '>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class="col-md-6">\n                                                                                <a href="javascript:void(0)" onclick=', '>Distribuir Automaticamente</a>\n                                                                            </div>\n                                                                        </div>\n\n                                                                        <form id="formBilletesDolares">\n                                                                            <div class="table-responsive" id="divTablaDolares">\n                                                                                <table class="table table-bordered table-striped" id="tablaDolares">\n                                                                                    <thead>\n                                                                                        <tr>\n                                                                                            <th>Billete</th>\n                                                                                            <th>Cantidad</th>\n                                                                                            <th>Total</th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody> \n                                                                                    \n                                                                                    </tbody>\n                                                                                </table>\n                                                                            </div>\n                                                                        </form>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    ', ' \n                </div>\n            </div>\n        </div>']),
    _templateObject2 = _taggedTemplateLiteral(['\n                            <div class="col-sm-6">\n                                <h2 class="text-red" id="laFlagCerrado"> ARQUEADO </h2>\n                            </div>\n                            '], ['\n                            <div class="col-sm-6">\n                                <h2 class="text-red" id="laFlagCerrado"> ARQUEADO </h2>\n                            </div>\n                            ']),
    _templateObject3 = _taggedTemplateLiteral([''], ['']),
    _templateObject4 = _taggedTemplateLiteral(['\n                                                                                    <tr name="filaSumaSoles">\n                                                                                        <td><input class="form-control" type="text" value="', '" name="tipo" onkeypress=', '></td>\n                                                                                        <td><input class="form-control" type="text" value="', '" name="Monto" onkeypress=', '></td> \n                                                                                    </tr>'], ['\n                                                                                    <tr name="filaSumaSoles">\n                                                                                        <td><input class="form-control" type="text" value="', '" name="tipo" onkeypress=', '></td>\n                                                                                        <td><input class="form-control" type="text" value="', '" name="Monto" onkeypress=', '></td> \n                                                                                    </tr>']),
    _templateObject5 = _taggedTemplateLiteral(['\n                                                                                    <tr  name="filaSumaDolares">\n                                                                                        <td><input  class="form-control" type="text" value="', '" name="tipo" onkeypress=', '></td>\n                                                                                        <td><input  class="form-control" type="text" value="', '" name="Monto" onkeypress=', '></td>\n                                                                                    </tr>'], ['\n                                                                                    <tr  name="filaSumaDolares">\n                                                                                        <td><input  class="form-control" type="text" value="', '" name="tipo" onkeypress=', '></td>\n                                                                                        <td><input  class="form-control" type="text" value="', '" name="Monto" onkeypress=', '></td>\n                                                                                    </tr>']),
    _templateObject6 = _taggedTemplateLiteral([' <button type="button" class="btn btn-info" id="btnGuardar" onclick="', '">Arquear</button>'], [' <button type="button" class="btn btn-info" id="btnGuardar" onclick="', '">Arquear</button>']),
    _templateObject7 = _taggedTemplateLiteral(['\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"> Confirmacion </h4>\n            </div>\n            <div class="modal-body">\n                <p>Esta Seguro que desea Arquear su Caja?</p>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                <button type="button" class="btn btn-primary" id="btnConfirmacion" onclick=', '>Aceptar</button>\n            </div>\n        </div>\n        <!-- /.modal-content -->\n    </div>'], ['\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"> Confirmacion </h4>\n            </div>\n            <div class="modal-body">\n                <p>Esta Seguro que desea Arquear su Caja?</p>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                <button type="button" class="btn btn-primary" id="btnConfirmacion" onclick=', '>Aceptar</button>\n            </div>\n        </div>\n        <!-- /.modal-content -->\n    </div>']),
    _templateObject8 = _taggedTemplateLiteral(['<table class="table table-bordered table-striped" id="tablaSoles">\n        <thead>\n            <tr>\n                <th class="hidden">Codigo</th>\n                <th>Billete</th>\n                <th class="hidden">Valor</th>\n                <th>Cantidad</th> \n                <th>Total</th>\n            </tr>\n        </thead>\n        <tbody>\n            ', '\n            \n        </tbody>\n\n    </table>'], ['<table class="table table-bordered table-striped" id="tablaSoles">\n        <thead>\n            <tr>\n                <th class="hidden">Codigo</th>\n                <th>Billete</th>\n                <th class="hidden">Valor</th>\n                <th>Cantidad</th> \n                <th>Total</th>\n            </tr>\n        </thead>\n        <tbody>\n            ', '\n            \n        </tbody>\n\n    </table>']),
    _templateObject9 = _taggedTemplateLiteral(['\n                    <tr id="', '">\n                        <td class="hidden"><input class="form-control" type="text" value="', '" name="Cod_Billete"></td>\n                        <td name="Nom_Billete" class="Nom_Billete"> ', '</td>\n                        <td class="hidden Valor"><input class="form-control" type="text" value="', '" name="Valor_Billete"></td>\n                        <td name="Cantidad" class="Cantidad"><input class="form-control" type="number" value="0.00" name="Cantidad" onkeypress=', '></td>\n                        <td name="Total" class="Total"><input class="form-control" type="number" value="0.00" name="Total"></td>\n                    </tr>'], ['\n                    <tr id="', '">\n                        <td class="hidden"><input class="form-control" type="text" value="', '" name="Cod_Billete"></td>\n                        <td name="Nom_Billete" class="Nom_Billete"> ', '</td>\n                        <td class="hidden Valor"><input class="form-control" type="text" value="', '" name="Valor_Billete"></td>\n                        <td name="Cantidad" class="Cantidad"><input class="form-control" type="number" value="0.00" name="Cantidad" onkeypress=', '></td>\n                        <td name="Total" class="Total"><input class="form-control" type="number" value="0.00" name="Total"></td>\n                    </tr>']),
    _templateObject10 = _taggedTemplateLiteral(['<table class="table table-bordered table-striped" id="tablaDolares">\n        <thead>\n            <tr>\n                <th class="hidden">Codigo</th>\n                <th>Billete</th>\n                <th class="hidden">Valor</th>\n                <th>Cantidad</th> \n                <th>Total</th>\n            </tr>\n        </thead>\n        <tbody>\n            ', '\n            \n        </tbody>\n\n    </table>'], ['<table class="table table-bordered table-striped" id="tablaDolares">\n        <thead>\n            <tr>\n                <th class="hidden">Codigo</th>\n                <th>Billete</th>\n                <th class="hidden">Valor</th>\n                <th>Cantidad</th> \n                <th>Total</th>\n            </tr>\n        </thead>\n        <tbody>\n            ', '\n            \n        </tbody>\n\n    </table>']),
    _templateObject11 = _taggedTemplateLiteral(['\n                    <tr id="', '">\n                        <td class="hidden"><input class="form-control" type="text" value="', '" name="Cod_Billete"></td>\n                        <td name="Nom_Billete" class="Nom_Billete"> ', ' </td>\n                        <td class="hidden Valor"><input class="form-control" type="text" value="', '" name="Valor_Billete"></td>\n                        <td name="Cantidad" class="Cantidad"><input class="form-control" type="number" value="0.00" name="Cantidad" onkeypress=', '></td>\n                        <td name="Total" class="Total"><input class="form-control" type="number" value="0.00" name="Total"></td>\n                    </tr>'], ['\n                    <tr id="', '">\n                        <td class="hidden"><input class="form-control" type="text" value="', '" name="Cod_Billete"></td>\n                        <td name="Nom_Billete" class="Nom_Billete"> ', ' </td>\n                        <td class="hidden Valor"><input class="form-control" type="text" value="', '" name="Valor_Billete"></td>\n                        <td name="Cantidad" class="Cantidad"><input class="form-control" type="number" value="0.00" name="Cantidad" onkeypress=', '></td>\n                        <td name="Total" class="Total"><input class="form-control" type="number" value="0.00" name="Total"></td>\n                    </tr>']);

var _constantes = require('../../../constantes_entorno/constantes');

var _movimientos_caja = require('../../movimientos_caja');

var _tools = require('../../../../utility/tools');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');

var aCargarEfectivo = null;

function Ver(fecha_hora, caja_actual, turno_actual, arqueo, resumenpen, resumenusd) {

    var el = yo(_templateObject, turno_actual.Cod_Turno, arqueo.Numero, function () {
        return (0, _tools.BloquearControles)(event);
    }, caja_actual.Des_Caja, function () {
        return (0, _tools.BloquearControles)(event);
    }, fecha_hora, arqueo.FlagCerrado ? yo(_templateObject2) : yo(_templateObject3), function () {
        return CalcularSumaTotalSoles(resumenpen);
    }, function () {
        return CalcularSumaTotalDolares(resumenusd);
    }, resumenpen.map(function (u) {
        return yo(_templateObject4, u.Nom_FormaPago, function () {
            return (0, _tools.BloquearControles)(event);
        }, u.Monto, function () {
            return (0, _tools.BloquearControles)(event);
        });
    }), function () {
        return (0, _tools.BloquearControles)(event);
    }, function () {
        return (0, _tools.BloquearControles)(event);
    }, resumenusd.map(function (u) {
        return yo(_templateObject5, u.Nom_FormaPago, function () {
            return (0, _tools.BloquearControles)(event);
        }, u.Monto, function () {
            return (0, _tools.BloquearControles)(event);
        });
    }), function () {
        return (0, _tools.BloquearControles)(event);
    }, function () {
        return (0, _tools.BloquearControles)(event);
    }, function () {
        return CalcularSumaTotalSoles(resumenpen);
    }, function () {
        return CalcularSumaTotalDolares(resumenusd);
    }, function () {
        return CambioBilletesSoles();
    }, function () {
        return DistribuirSoles();
    }, function () {
        return CambioBilletesDolares();
    }, function () {
        return DistribuirDolares();
    }, !arqueo.FlagCerrado ? yo(_templateObject6, function () {
        return ArquearCaja();
    }) : '');

    var modal_proceso = document.getElementById('modal-proceso');
    empty(modal_proceso).appendChild(el);
    $('#modal-proceso').modal();
    $('#Cajero').val($('#nick').text());
    CalcularSumaTotalDolares(resumenusd);
    CalcularSumaTotalSoles(resumenpen);
    CargarBilletes(arqueo);
}

function CargarModalConfirmacionArqueo() {
    var el = yo(_templateObject7, function () {
        return AceptarConfirmacion();
    });

    var modal_proceso = document.getElementById('modal-alerta');
    empty(modal_proceso).appendChild(el);
    $('#modal-alerta').modal();
}

function LlenarTabla(billetes) {
    var elsoles = yo(_templateObject8, billetes.map(function (u) {
        return u.Cod_Moneda == "PEN" ? yo(_templateObject9, u.Cod_Billete, u.Cod_Billete, u.Nom_Billete, u.Valor_Billete, function () {
            return CambioCantidadSoles(u.Cod_Billete);
        }) : yo(_templateObject3);
    }));

    var eldolares = yo(_templateObject10, billetes.map(function (u) {
        return u.Cod_Moneda == "USD" ? yo(_templateObject11, u.Cod_Billete, u.Cod_Billete, u.Nom_Billete, u.Valor_Billete, function () {
            return CambioCantidadDolares(u.Cod_Billete);
        }) : yo(_templateObject3);
    }));

    empty(document.getElementById('divTablaSoles')).appendChild(elsoles);
    empty(document.getElementById('divTablaDolares')).appendChild(eldolares);
    if (aCargarEfectivo) {
        if (parseFloat($("#SaldoTotalSoles").val()) >= 0) {
            $("#laCantidadBilletesSoles").text("Total en Soles S/");
            $("#CantidadBilletesSoles").val($("#SaldoTotalSoles").val());
        } else {
            toastr.error('No puede realizar aun el Cierre verifique no tenga saldo final Menor a Cero y vuelta a intentarlo.\n\n', 'Error', { timeOut: 5000 });
            $('#modal-proceso').modal('hide');
        }

        if (parseFloat($("#SaldoTotalDolares").val()) >= 0) {
            $("#laCantidadBilletesDolares").text("Total en Dolares USD");
            $("#CantidadBilletesDolares").val($("#SaldoTotalDolares").val());
        } else {
            toastr.error('No puede realizar aun el Cierre verifique no tenga saldo final Menor a Cero y vuelta a intentarlo.\n\n', 'Error', { timeOut: 5000 });
            $('#modal-proceso').modal('hide');
        }
    }
}

function CambioBilletesSoles() {
    $("#DiferenciaSoles").val(parseFloat($("#CantidadBilletesSoles").val()) - parseFloat($("#SaldoTotalSoles").val()));
}

function CambioBilletesDolares() {
    $("#DiferenciaDolares").val(parseFloat($("#CantidadBilletesDolares").val()) - parseFloat($("#SaldoTotalDolares").val()));
}

function CambioCantidadSoles(idInput) {
    var total = 0;
    $("tr#" + idInput).find("td.Total").find("input").val(parseFloat($("tr#" + idInput).find("td.Valor").find("input").val()) * parseFloat($("tr#" + idInput).find("td.Cantidad").find("input").val()));
    $('#tablaSoles > tbody  > tr').each(function () {
        total = total + parseFloat($(this).find("td.Total").find("input").val());
    });
    $("#CantidadBilletesSoles").val(total);
    $("#DiferenciaSoles").val(parseFloat($("#CantidadBilletesSoles").val()) - parseFloat($("#SaldoTotalSoles").val()));
}

function CambioCantidadDolares(idInput) {
    var total = 0;
    $("tr#" + idInput).find("td.Total").find("input").val(parseFloat($("tr#" + idInput).find("td.Valor").find("input").val()) * parseFloat($("tr#" + idInput).find("td.Cantidad").find("input").val()));
    $('#tablaDolares > tbody  > tr').each(function () {
        total = total + parseFloat($(this).find("td.Total").find("input").val());
    });
    $("#CantidadBilletesDolares").val(total);
    $("#DiferenciaDolares").val(parseFloat($("#CantidadBilletesDolares").val()) - parseFloat($("#SaldoTotalDolares").val()));
}

function CalcularSumaTotalSoles(resumen) {
    var suma = 0;
    for (var i = 0; i < resumen.length; i++) {
        if (resumen[i].FlagEfectivo == "1") {
            suma += parseFloat(resumen[i].Monto);
        }
    }
    $("#laSaldoTotalSoles").text("SALDO : S/");
    $("#SaldoTotalSoles").val(suma);
    $("#laDiferenciaSoles").text("DIFERENCIA : S/");
    $("#DiferenciaSoles").val(-1 * suma);

    $("#tbSoles").tab('show');
    $("#tSoles").tab('show');
}

function CalcularSumaTotalDolares(resumen) {
    var suma = 0;
    for (var i = 0; i < resumen.length; i++) {
        if (resumen[i].FlagEfectivo == "1") {
            suma += parseFloat(resumen[i].Monto);
        }
    }
    $("#laSaldoTotalDolares").text("SALDO : USD ");
    $("#SaldoTotalDolares").val(suma);
    $("#laDiferenciaDolares").text("DIFERENCIA : USD ");
    $("#DiferenciaDolares").val(-1 * suma);
    $("#tbDolares").tab('show');
    $("#tDolares").tab('show');
}

function DistribuirSoles() {
    var pSumaTotal = 0;
    var pDiferencia = $("#CantidadBilletesSoles").val();
    $('#tablaSoles > tbody  > tr').each(function () {
        if (pDiferencia != 0) {
            $(this).find("td.Cantidad").find("input").val(Math.trunc(pDiferencia / parseFloat($(this).find("td.Valor").find("input").val())));
            pSumaTotal += parseFloat($(this).find("td.Valor").find("input").val()) * parseFloat($(this).find("td.Cantidad").find("input").val());
            $(this).find("td.Total").find("input").val(parseFloat($(this).find("td.Valor").find("input").val()) * parseFloat($(this).find("td.Cantidad").find("input").val()));
            if (pSumaTotal == parseFloat($("#CantidadBilletesSoles").val())) return false;else pDiferencia = parseFloat($("#CantidadBilletesSoles").val()) - pSumaTotal;
        }
    });
}

function DistribuirDolares() {
    var pSumaTotal = 0;
    var pDiferencia = $("#CantidadBilletesDolares").val();
    $('#tablaDolares > tbody  > tr').each(function () {
        if (pDiferencia != 0) {
            $(this).find("td.Cantidad").find("input").val(Math.trunc(pDiferencia / parseFloat($(this).find("td.Valor").find("input").val())));
            pSumaTotal += parseFloat($(this).find("td.Valor").find("input").val()) * parseFloat($(this).find("td.Cantidad").find("input").val());
            $(this).find("td.Total").find("input").val(parseFloat($(this).find("td.Valor").find("input").val()) * parseFloat($(this).find("td.Cantidad").find("input").val()));
            if (pSumaTotal == parseFloat($("#CantidadBilletesDolares").val())) return false;else pDiferencia = parseFloat($("#CantidadBilletesDolares").val()) - pSumaTotal;
        }
    });
}

function CargarBilletes(arqueo) {
    if (!arqueo.FlagCerrado) {

        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            credentials: 'same-origin',
            body: JSON.stringify({})
        };
        fetch(_constantes.URL + '/cajas_api/get_billetes', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            //console.log("billetes")
            //console.log(res)
            LlenarTabla(res.data.billetes);
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    } else {

        var _parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            credentials: 'same-origin',
            body: JSON.stringify({})
        };
        fetch(_constantes.URL + '/cajas_api/get_detalle_arqueo', _parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            //console.log("billetes1")
            //console.log(res)
            LlenarTabla(res.data.billetes);
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    }
}

function esValido() {
    if (parseFloat($("#DiferenciaSoles").val()) > -1) {
        if (parseFloat($("#DiferenciaDolares").val()) > -1) {
            return true;
        } else {
            toastr.error('La Diferencia en Dolares debe ser Mayor a -1.00', 'Error', { timeOut: 5000 });
        }
    } else {
        toastr.error('La Diferencia en Soles debe ser Mayor a -1.00', 'Error', { timeOut: 5000 });
    }
    return false;
}

function ArquearCaja() {
    if (esValido()) {
        CargarModalConfirmacionArqueo();
    }
    //AceptarConfirmacion()
}

function AceptarConfirmacion() {
    run_waitMe($('#modal-alerta'), 1, "ios", "Realizando operaciÃ³n...");
    var Fecha = $("#FechaHora").val().replace('T', ' ');
    var dataFormTS = $("#formSumaTotalSoles").serializeArray();
    var dataFormTD = $("#formSumaTotalDolares").serializeArray();
    var dataBS = $("#formBilletesSoles").serializeArray();
    var dataBD = $("#formBilletesDolares").serializeArray();
    var totalBilletesSoles = $("#CantidadBilletesSoles").val();
    var totalBilletesDolares = $("#CantidadBilletesDolares").val();
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Fecha: Fecha,
            dataFormTS: dataFormTS,
            dataFormTD: dataFormTD,
            totalBilletesSoles: totalBilletesSoles,
            totalBilletesDolares: totalBilletesDolares,
            dataBS: dataBS,
            dataBD: dataBD
        })
    };
    fetch(_constantes.URL + '/cajas_api/guardar_arqueo', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            window.location.href = '/logout';
        } else {
            toastr.error('Ocurrio un erro en el arqueo, comuniquese con el administrador de sistemas', 'Error', { timeOut: 5000 });
            $('#modal-alerta').modal('hide');
            $('#modal-alerta').waitMe('hide');
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#modal-alerta').waitMe('hide');
    });
}

function NuevoArqueoCaja(pCargarEfectivo) {
    run_waitMe($('#main-contenido'), 1, "ios");
    aCargarEfectivo = true;
    var fecha = new Date();
    var mes = fecha.getMonth() + 1;
    var dia = fecha.getDate();
    var fecha_format = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia) + 'T' + [fecha.getHours() > 9 ? fecha.getHours() : '0' + fecha.getHours(), fecha.getMinutes() > 9 ? fecha.getMinutes() : '0' + fecha.getMinutes()].join(':');
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({})
    };
    fetch(_constantes.URL + '/cajas_api/arqueo_caja', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        var caja = res.caja;
        var turno = res.turno;
        var arqueo = res.arqueo;
        Ver(fecha_format, caja, turno, arqueo, res.data.resumenpen, res.data.resumenusd);
        $('#main-contenido').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#main-contenido').waitMe('hide');
    });
}

exports.NuevoArqueoCaja = NuevoArqueoCaja;

},{"../../../../utility/tools":401,"../../../constantes_entorno/constantes":377,"../../movimientos_caja":398,"empty-element":338,"yo-yo":375}],388:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NuevoCompraVentaME = undefined;

var _templateObject = _taggedTemplateLiteral(['\n        <div class="modal-dialog modal-lg">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong id="tituloModal">Compra ME</strong></h4>\n                </div>\n                <div class="modal-body" id="modal_form">\n                    <div class="row">\n                        <div id="modal_error" class="callout callout-danger hidden">\n                            <p>Es necesario llenar todos los campos requeridos y el Importe mayor a cero</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-md-8">\n                            <div class="panel panel-default">\n                                <div class="panel-heading">\n                                    <p>A favor de : </p>\n                                </div> \n                                <div class="panel-body">\n                                    <div class="row">\n                                        <div class="col-md-6">\n                                            <div class="form-group">\n                                                <select class="form-control" id="Cod_TipoDocumentoBuscar">\n                                                    ', '\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class="col-md-6">\n                                            <div class="input-group">\n                                                <input type="text" class="form-control" id="Nro_DocumentoBuscar" onblur=', '>\n                                                <div class="input-group-btn">\n                                                    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modal-buscar-doc-proveedor" id="BuscarDoc"\n                                                    ><i class="fa fa-globe"></i></button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <div class="input-group">\n                                                <div class="input-group-btn">\n                                                    <button type="button" class="btn btn-success" id="AgregarCliente" onclick=', '><i class="fa fa-plus"></i></button>\n                                                </div>\n                                                <input type="text" class="form-control" id="txtNombreCliente">\n                                                <div class="input-group-btn">\n                                                    <button type="button" class="btn btn-info" id="BuscarCliente" onclick=', '><i class="fa fa-search"></i></button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                        <div class="col-md-4">\n                            <div class="panel panel-default">\n                                <div class="panel-heading text-center">\n                                    <div class="row">\n                                        <h4 class="box-title" id="Ruc_Empresa"><strong> R.U.C. 20442625256 </strong></h4>\n                                    </div>\n                                    <div class="row">\n                                        <h4><strong>COMPRA/VENTA ME</strong></h4>\n                                    </div> \n                                    \n                                    <div class="row">\n                                        <div class="col-md-5">\n                                            <div class="form-group">\n                                                <select class="form-control" id="Serie">\n                                                    <option style="text-transform:uppercase" value="', '">', '</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class="col-md-7">\n                                            <div class="form-group">\n                                                <input type="text" class="form-control" id="Numero" value="00000000', '">\n                                            </div>\n                                        </div>\n                                    </div> \n\n                                </div>\n                                \n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-md-6">\n                            <div class="col-sm-3">\n                                <label></label>\n                                <div class="radio">\n                                    <label>\n                                        <input type="radio" value="c" id="TipoDestino" name="TipoDestino" checked onclick="', '" > En Caja\n                                    </label>\n                                </div>\n                            </div>\n                            <div class="col-sm-3">\n                                <label></label>\n                                <div class="radio">\n                                    <label>\n                                        <input type="radio" value="b" id="TipoDestino" name="TipoDestino" onclick="', '"> En Banco\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="Fecha">Fecha</label>\n                                <input type="date" class="form-control" id="Fecha" placeholder=\'dd/mm/aaaa\' value="', '">\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="panel panel-default">\n\n                            <div class="panel-heading text-center">\n                                <p> Detalles</p>\n                            </div>\n\n                            <div class="panel-body">\n                                <div class="row"> \n                                    <div class="col-md-12"> \n                                        <div class="col-md-6"> \n                                             \n                                            <div class="col-md-12" id="formBanco" style="display:none">\n                                                <div class="form-group">\n                                                    <label for="Cod_Producto">Banco</label>\n                                                    <select class="form-control" id="SelectEntidadFinanciera" onchange=', '>\n                                                        ', '\n                                                    </select>\n                                                </div>\n                                                <div class="form-group">\n                                                    <label for="Cod_CuentaSoles">Cuenta Soles</label>\n                                                    <select class="form-control" id="Cod_CuentaSoles">\n                                                    </select>\n                                                </div>\n                                                <div class="form-group">\n                                                    <label for="Cod_CuentaME">Cuenta ME</label>\n                                                    <select class="form-control" id="Cod_CuentaME">\n                                                    </select>\n                                                </div>\n                                                <div class="form-group">\n                                                    <label for="Operacion">Operacion</label>\n                                                    <input type="text" class="form-control" id="Operacion">\n                                                </div>\n                                            </div>\n                                            \n                                            <div class="col-md-12"> \n                                                <div class="form-group" id="obs_body_xml">\n                                                  \n                                                </div>\n                                            </div>\n\n                                        </div>\n                                        <div class="col-md-6" id="formVentaCompraME">\n                                            <label>Tipo de Operacion</label>\n                                            <div class="col-sm-12">\n                                                <div class="col-sm-6">\n                                                        <label class="radio-inline">\n                                                            <input type="radio" id="optionCV" name="optionCV" value="c"  onclick="', '" checked> Compra ME\n                                                        </label> \n                                                </div>\n                                                <div class="col-sm-6">\n                                                        <label class="radio-inline">\n                                                            <input type="radio" id="optionCV" name="optionCV" value="v" onclick="', '"> Venta ME\n                                                        </label>\n                                                </div>\n                                            </div> \n                                            <br><br><br>\n                                            <div class="form-group">\n                                                <label for="Cod_Moneda">Moneda</label>\n                                                <select class="form-control required" id="Cod_Moneda">\n                                                    ', '\n                                                </select>\n                                            </div>\n                                            <div class="form-group">\n                                                <label for="Monto">Monto</label>\n                                                <input type="number" class="form-control required" id="Monto" onkeypress=', '>\n                                            </div>\n                                            <div class="form-group">\n                                                <label for="TipoCambio">Tipo de Cambio</label>\n                                                <input type="number" class="form-control required" id="TipoCambio" onkeypress=', '>\n                                            </div>\n                                            <div class="form-group">\n                                                <label for="Soles">Soles</label>\n                                                <input type="number" class="form-control required" id="Soles" onkeypress=', '>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div> \n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnGuardar" onclick=', '>Guardar</button>\n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog modal-lg">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong id="tituloModal">Compra ME</strong></h4>\n                </div>\n                <div class="modal-body" id="modal_form">\n                    <div class="row">\n                        <div id="modal_error" class="callout callout-danger hidden">\n                            <p>Es necesario llenar todos los campos requeridos y el Importe mayor a cero</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-md-8">\n                            <div class="panel panel-default">\n                                <div class="panel-heading">\n                                    <p>A favor de : </p>\n                                </div> \n                                <div class="panel-body">\n                                    <div class="row">\n                                        <div class="col-md-6">\n                                            <div class="form-group">\n                                                <select class="form-control" id="Cod_TipoDocumentoBuscar">\n                                                    ', '\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class="col-md-6">\n                                            <div class="input-group">\n                                                <input type="text" class="form-control" id="Nro_DocumentoBuscar" onblur=', '>\n                                                <div class="input-group-btn">\n                                                    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modal-buscar-doc-proveedor" id="BuscarDoc"\n                                                    ><i class="fa fa-globe"></i></button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <div class="input-group">\n                                                <div class="input-group-btn">\n                                                    <button type="button" class="btn btn-success" id="AgregarCliente" onclick=', '><i class="fa fa-plus"></i></button>\n                                                </div>\n                                                <input type="text" class="form-control" id="txtNombreCliente">\n                                                <div class="input-group-btn">\n                                                    <button type="button" class="btn btn-info" id="BuscarCliente" onclick=', '><i class="fa fa-search"></i></button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                        <div class="col-md-4">\n                            <div class="panel panel-default">\n                                <div class="panel-heading text-center">\n                                    <div class="row">\n                                        <h4 class="box-title" id="Ruc_Empresa"><strong> R.U.C. 20442625256 </strong></h4>\n                                    </div>\n                                    <div class="row">\n                                        <h4><strong>COMPRA/VENTA ME</strong></h4>\n                                    </div> \n                                    \n                                    <div class="row">\n                                        <div class="col-md-5">\n                                            <div class="form-group">\n                                                <select class="form-control" id="Serie">\n                                                    <option style="text-transform:uppercase" value="', '">', '</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class="col-md-7">\n                                            <div class="form-group">\n                                                <input type="text" class="form-control" id="Numero" value="00000000', '">\n                                            </div>\n                                        </div>\n                                    </div> \n\n                                </div>\n                                \n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-md-6">\n                            <div class="col-sm-3">\n                                <label></label>\n                                <div class="radio">\n                                    <label>\n                                        <input type="radio" value="c" id="TipoDestino" name="TipoDestino" checked onclick="', '" > En Caja\n                                    </label>\n                                </div>\n                            </div>\n                            <div class="col-sm-3">\n                                <label></label>\n                                <div class="radio">\n                                    <label>\n                                        <input type="radio" value="b" id="TipoDestino" name="TipoDestino" onclick="', '"> En Banco\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="Fecha">Fecha</label>\n                                <input type="date" class="form-control" id="Fecha" placeholder=\'dd/mm/aaaa\' value="', '">\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="panel panel-default">\n\n                            <div class="panel-heading text-center">\n                                <p> Detalles</p>\n                            </div>\n\n                            <div class="panel-body">\n                                <div class="row"> \n                                    <div class="col-md-12"> \n                                        <div class="col-md-6"> \n                                             \n                                            <div class="col-md-12" id="formBanco" style="display:none">\n                                                <div class="form-group">\n                                                    <label for="Cod_Producto">Banco</label>\n                                                    <select class="form-control" id="SelectEntidadFinanciera" onchange=', '>\n                                                        ', '\n                                                    </select>\n                                                </div>\n                                                <div class="form-group">\n                                                    <label for="Cod_CuentaSoles">Cuenta Soles</label>\n                                                    <select class="form-control" id="Cod_CuentaSoles">\n                                                    </select>\n                                                </div>\n                                                <div class="form-group">\n                                                    <label for="Cod_CuentaME">Cuenta ME</label>\n                                                    <select class="form-control" id="Cod_CuentaME">\n                                                    </select>\n                                                </div>\n                                                <div class="form-group">\n                                                    <label for="Operacion">Operacion</label>\n                                                    <input type="text" class="form-control" id="Operacion">\n                                                </div>\n                                            </div>\n                                            \n                                            <div class="col-md-12"> \n                                                <div class="form-group" id="obs_body_xml">\n                                                  \n                                                </div>\n                                            </div>\n\n                                        </div>\n                                        <div class="col-md-6" id="formVentaCompraME">\n                                            <label>Tipo de Operacion</label>\n                                            <div class="col-sm-12">\n                                                <div class="col-sm-6">\n                                                        <label class="radio-inline">\n                                                            <input type="radio" id="optionCV" name="optionCV" value="c"  onclick="', '" checked> Compra ME\n                                                        </label> \n                                                </div>\n                                                <div class="col-sm-6">\n                                                        <label class="radio-inline">\n                                                            <input type="radio" id="optionCV" name="optionCV" value="v" onclick="', '"> Venta ME\n                                                        </label>\n                                                </div>\n                                            </div> \n                                            <br><br><br>\n                                            <div class="form-group">\n                                                <label for="Cod_Moneda">Moneda</label>\n                                                <select class="form-control required" id="Cod_Moneda">\n                                                    ', '\n                                                </select>\n                                            </div>\n                                            <div class="form-group">\n                                                <label for="Monto">Monto</label>\n                                                <input type="number" class="form-control required" id="Monto" onkeypress=', '>\n                                            </div>\n                                            <div class="form-group">\n                                                <label for="TipoCambio">Tipo de Cambio</label>\n                                                <input type="number" class="form-control required" id="TipoCambio" onkeypress=', '>\n                                            </div>\n                                            <div class="form-group">\n                                                <label for="Soles">Soles</label>\n                                                <input type="number" class="form-control required" id="Soles" onkeypress=', '>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div> \n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnGuardar" onclick=', '>Guardar</button>\n                </div>\n            </div>\n        </div>']),
    _templateObject2 = _taggedTemplateLiteral(['<option style="text-transform:uppercase" value="', '">', '</option>'], ['<option style="text-transform:uppercase" value="', '">', '</option>']),
    _templateObject3 = _taggedTemplateLiteral(['\n        ', ''], ['\n        ', '']),
    _templateObject4 = _taggedTemplateLiteral(['\n             <option value="', '">', '</option>\n        '], ['\n             <option value="', '">', '</option>\n        ']),
    _templateObject5 = _taggedTemplateLiteral(['<div> \n        ', '\n    </div>'], ['<div> \n        ', '\n    </div>']),
    _templateObject6 = _taggedTemplateLiteral(['\n        <div class="row">\n            <div class="col-sm-12">\n                <div class="form-group">\n                    <label for="">', '</label>\n                    <input id="', '"\n                    value=', '\n                    class="form-control" />\n                </div>\n            </div>\n        </div>'], ['\n        <div class="row">\n            <div class="col-sm-12">\n                <div class="form-group">\n                    <label for="">', '</label>\n                    <input id="', '"\n                    value=', '\n                    class="form-control" />\n                </div>\n            </div>\n        </div>']);

var _constantes = require('../../../constantes_entorno/constantes');

var _movimientos_caja = require('../../movimientos_caja');

var _modales = require('../../modales');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');

function Ver(_escritura, Serie, variables, fecha_actual) {
    var el = yo(_templateObject, variables.tipos_documento.map(function (e) {
        return yo(_templateObject2, e.Cod_TipoDoc, e.Nom_TipoDoc);
    }), function () {
        return RecuperarDatosClientePorNroDoc();
    }, function () {
        return (0, _modales.NuevoCliente)(variables.tipos_documento);
    }, function () {
        return (0, _modales.BuscarCliente)("txtNombreCliente", "Nro_DocumentoBuscar", "002");
    }, Serie, Serie, variables.siguiente_numero_comprobante[0].Numero, function () {
        return CambioTipoDestino();
    }, function () {
        return CambioTipoDestino();
    }, fecha_actual, function () {
        return TraerCuentaBancariaEntidadFinanciera();
    }, variables.entidades_financieras.map(function (e) {
        return yo(_templateObject2, e.Cod_EntidadFinanciera, e.Nom_EntidadFinanciera);
    }), function () {
        return CambioCompraVentaME();
    }, function () {
        return CambioCompraVentaME();
    }, variables.monedas_sinsoles.map(function (e) {
        return yo(_templateObject2, e.Cod_Moneda, e.Nom_Moneda);
    }), function () {
        return CambioSoles();
    }, function () {
        return CambioSoles();
    }, function () {
        return CambioMonto();
    }, function () {
        return GuardarCompraVentaME(variables, fecha_actual);
    });

    var modal_proceso = document.getElementById('modal-proceso');
    empty(modal_proceso).appendChild(el);
    $('#modal-proceso').modal();
    TraerCuentaBancariaEntidadFinanciera();
    ObservacionesXML(variables.diagramas);
}

function LlenarCuenta(cuenta, idSelect) {
    var el = yo(_templateObject3, cuenta.map(function (e) {
        return yo(_templateObject4, e.Cod_CuentaBancaria, e.Des_CuentaBancaria);
    }));
    $("#" + idSelect).html('');
    $("#" + idSelect).html(el);
}

var Id_ClienteProveedor = null;

function CambioSoles() {
    $("#Soles").val(parseFloat($("#Monto").val()) * parseFloat($("#TipoCambio").val()));
}

function CambioMonto() {
    $("#Monto").val(parseFloat($("#Soles").val()) / parseFloat($("#TipoCambio").val()));
}

function getValueXML(xmlDoc, TAG) {
    if (xmlDoc.getElementsByTagName(TAG).length > 0 && xmlDoc.getElementsByTagName(TAG)[0].childNodes.length > 0) {
        return xmlDoc.getElementsByTagName(TAG)[0].childNodes[0].nodeValue;
    } else {
        return '';
    }
}

function ObservacionesXML(diagrama) {
    var xml = '';
    var parser = new DOMParser();
    var xmlDoc = parser.parseFromString(xml, "text/xml");
    var el = yo(_templateObject5, diagrama.map(function (e) {
        return yo(_templateObject6, e.Nom_Elemento, e.Cod_Elemento, getValueXML(xmlDoc, e.Cod_Elemento));
    }));
    var obs_xml = document.getElementById('obs_body_xml');
    empty(obs_xml).appendChild(el);
}

function RecuperarDatosClientePorNroDoc() {
    var Nro_Documento = $("#Nro_DocumentoBuscar").val();
    var Cod_TipoDocumento = $("#Cod_TipoDocumentoBuscar").val();
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Nro_Documento: Nro_Documento,
            Cod_TipoDocumento: Cod_TipoDocumento
        })
    };
    fetch(_constantes.URL + '/clientes_api/get_cliente_by_documento', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            $("#txtNombreCliente").val(res.data.cliente[0].Cliente);
            $("#txtNombreCliente").focus();
            Id_ClienteProveedor = res.data.cliente[0].Id_ClienteProveedor;
        } else {
            (0, _modales.BuscarCliente)("txtNombreCliente", "Nro_DocumentoBuscar", "002");
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CambioTipoDestino() {
    if ($('input[name=TipoDestino]:checked').val() == 'c') {
        $('#formBanco').hide();
    } else {
        $('#formBanco').show();
    }
}

function CambioCompraVentaME() {
    if ($('input[name=optionCV]:checked').val() == 'c') {
        $('#tituloModal').text("Compra ME");
    } else {
        $('#tituloModal').text("Venta ME");
    }
}

function SeleccionarCliente(cliente) {
    $("#Nro_DocumentoBuscar").val(cliente.Nro_Documento);
    $("#txtNombreCliente").val(cliente.Cliente);
    Id_ClienteProveedor = cliente.Id_ClienteProveedor;
}

function GuardarCompraVentaME(variables, fecha_actual) {
    if (ValidacionCampos("modal_error", "modal_form")) {
        run_waitMe($('#modal-proceso'), 1, "ios", "Registrando operaciÃ³n...");
        if ($('input[name=TipoDestino]:checked').val() == 'c') {
            var OBS = '<Registro>';
            for (var i = 0; i < variables.diagramas.length; i++) {
                OBS += '<' + variables.diagramas[i].Cod_Elemento + '>' + document.getElementById(variables.diagramas[i].Cod_Elemento).value + '</' + variables.diagramas[i].Cod_Elemento + '>';
            }
            var Obs_Movimiento = OBS + '</Registro>';
            var Des_Movimiento = null;
            var id_Movimiento = -1;
            var Cod_Caja = '100';
            var Cod_Turno = 'T0002';
            var Id_Concepto = 3000;
            var Cliente = $("#txtNombreCliente").val();
            var _nom_moneda = $("#Cod_Moneda").val() == "USD" ? "DOLARES" : "EUROS";

            var Cod_TipoComprobante = 'CV';
            var Serie = $("#Serie").val();
            var Numero = $("#Numero").val();
            var Fecha = fecha_actual;
            var Tipo_Cambio = $("#TipoCambio").val();
            var Ingreso = null;
            var Cod_MonedaIng = null;
            var Egreso = null;
            var Cod_MonedaEgr = null;
            var Flag_Extornado = 0;
            var Fecha_Aut = fecha_actual;
            var Id_MovimientoRef = 0;

            if ($('input[name=optionCV]:checked').val() == 'c') {
                Des_Movimiento = "Compra ME " + _nom_moneda + " : " + parseFloat($("#Monto").val()).toFixed(2) + " T/C: " + parseFloat($("#TipoCambio").val()).toFixed(3) + " SOLES: " + parseFloat($("#Soles").val()).toFixed(3);
                Ingreso = parseFloat($("#Monto").val()).toFixed(3);
                Cod_MonedaIng = $("#Cod_Moneda").val();
                Egreso = $("#Soles").val();
                Cod_MonedaEgr = 'PEN';
            } else {
                Des_Movimiento = "Venta ME " + _nom_moneda + " : " + parseFloat($("#Monto").val()).toFixed(2) + " T/C: " + parseFloat($("#TipoCambio").val()).toFixed(2) + " SOLES: " + parseFloat($("#Soles").val()).toFixed(2);
                Ingreso = parseFloat($("#Soles").val()).toFixed(3);
                Cod_MonedaIng = 'PEN';
                Egreso = $("#Monto").val();
                Cod_MonedaEgr = $("#Cod_Moneda").val();
            }

            var parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                credentials: 'same-origin',
                body: JSON.stringify({
                    id_Movimiento: id_Movimiento,
                    Cod_Caja: Cod_Caja,
                    Cod_Turno: Cod_Turno,
                    Id_Concepto: Id_Concepto,
                    Id_ClienteProveedor: Id_ClienteProveedor,
                    Cliente: Cliente,
                    Des_Movimiento: Des_Movimiento,
                    Cod_TipoComprobante: Cod_TipoComprobante,
                    Serie: Serie,
                    Numero: Numero,
                    Fecha: Fecha,
                    Tipo_Cambio: Tipo_Cambio,
                    Ingreso: Ingreso,
                    Cod_MonedaIng: Cod_MonedaIng,
                    Egreso: Egreso,
                    Cod_MonedaEgr: Cod_MonedaEgr,
                    Flag_Extornado: Flag_Extornado,
                    Fecha_Aut: Fecha_Aut,
                    Obs_Movimiento: Obs_Movimiento,
                    Id_MovimientoRef: Id_MovimientoRef
                })
            };
            console.log(parametros);
            fetch(_constantes.URL + '/compra_venta_moneda_extranjera_api/guardar_compra_venta_me', parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                $('#modal-proceso').modal('hide');
                $('#modal-proceso').waitMe('hide');
                if (res.respuesta == 'ok') {
                    toastr.success('Se registro correctamente el movimiento', 'Confirmacion', { timeOut: 5000 });
                    (0, _movimientos_caja.refrescar_movimientos)();
                } else {
                    toastr.error('No se pudo registrar correctamente el movimiento', 'Error', { timeOut: 5000 });
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                $('#modal-proceso').waitMe('hide');
            });
        } else {
            var OBS = '<Registro>';
            for (var i = 0; i < variables.diagramas.length; i++) {
                OBS += '<' + variables.diagramas[i].Cod_Elemento + '>' + document.getElementById(variables.diagramas[i].Cod_Elemento).value + '</' + variables.diagramas[i].Cod_Elemento + '>';
            }
            var Obs_Movimiento = OBS + '</Registro>';
            var Id_MovimientoCuenta = -1;
            var Cod_CuentaBancaria = null;
            var Nro_Operacion = $("#Operacion").val();
            var Des_Movimiento = 'SALIDA: COMPRA/VENTA DE MONEDA EXTRANJERA BANCOS';
            var Cod_TipoOperacionBancaria = '010';
            var Fecha = $("#Fecha").val();
            var Monto = null;
            var TipoCambio = $("#TipoCambio").val();
            var Cod_Caja = '100';
            var Cod_Turno = 'T0002';
            var Cod_Plantilla = '';
            var Nro_Cheque = '';
            var Beneficiario = '';
            var Id_ComprobantePago = 0;
            if ($('input[name=optionCV]:checked').val() == 'c') {
                Cod_CuentaBancaria = $("#Cod_CuentaSoles").val();
                Monto = -1 * parseFloat($("#Soles").val());
            } else {
                Cod_CuentaBancaria = $("#Cod_CuentaME").val();
                Monto = -1 * parseFloat($("#Monto").val());
            }

            var _parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                credentials: 'same-origin',
                body: JSON.stringify({
                    Id_MovimientoCuenta: Id_MovimientoCuenta,
                    Cod_CuentaBancaria: Cod_CuentaBancaria,
                    Nro_Operacion: Nro_Operacion,
                    Des_Movimiento: Des_Movimiento,
                    Cod_TipoOperacionBancaria: Cod_TipoOperacionBancaria,
                    Fecha: Fecha,
                    Monto: Monto,
                    TipoCambio: TipoCambio,
                    Cod_Caja: Cod_Caja,
                    Cod_Turno: Cod_Turno,
                    Cod_Plantilla: Cod_Plantilla,
                    Nro_Cheque: Nro_Cheque,
                    Beneficiario: Beneficiario,
                    Id_ComprobantePago: Id_ComprobantePago,
                    Obs_Movimiento: Obs_Movimiento
                })
            };
            fetch(_constantes.URL + '/compra_venta_moneda_extranjera_api/guardar_cuenta_bancaria_compra_venta_me', _parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                if (res.respuesta == 'ok') {
                    //$('#modal-superior').modal('hide')
                    if ($('input[name=optionCV]:checked').val() == 'c') {
                        Cod_CuentaBancaria = $("#Cod_CuentaME").val();
                        Monto = -1 * parseFloat($("#Monto").val());
                    } else {
                        Cod_CuentaBancaria = $("#Cod_CuentaSoles").val();
                        Monto = -1 * parseFloat($("#Soles").val());
                    }

                    var _parametros2 = {
                        method: 'POST',
                        headers: {
                            Accept: 'application/json',
                            'Content-Type': 'application/json'
                        },
                        credentials: 'same-origin',
                        body: JSON.stringify({
                            Id_MovimientoCuenta: Id_MovimientoCuenta,
                            Cod_CuentaBancaria: Cod_CuentaBancaria,
                            Nro_Operacion: Nro_Operacion,
                            Des_Movimiento: Des_Movimiento,
                            Cod_TipoOperacionBancaria: Cod_TipoOperacionBancaria,
                            Fecha: Fecha,
                            Monto: Monto,
                            TipoCambio: TipoCambio,
                            Cod_Caja: Cod_Caja,
                            Cod_Turno: Cod_Turno,
                            Cod_Plantilla: Cod_Plantilla,
                            Nro_Cheque: Nro_Cheque,
                            Beneficiario: Beneficiario,
                            Id_ComprobantePago: Id_ComprobantePago,
                            Obs_Movimiento: Obs_Movimiento
                        })
                    };
                    fetch(_constantes.URL + '/compra_venta_moneda_extranjera_api/guardar_cuenta_bancaria_compra_venta_me', _parametros2).then(function (req) {
                        return req.json();
                    }).then(function (res) {
                        $('#modal-proceso').modal('hide');
                        $('#modal-proceso').waitMe('hide');
                        if (res.respuesta == 'ok') {
                            toastr.success('Se registro correctamente el movimiento', 'Confirmacion', { timeOut: 5000 });
                            (0, _movimientos_caja.refrescar_movimientos)();
                        } else {
                            toastr.error('No se pudo registrar correctamente el movimiento', 'Error', { timeOut: 5000 });
                        }
                    }).catch(function (e) {
                        console.log(e);
                        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                        $('#modal-proceso').waitMe('hide');
                    });
                } else {
                    toastr.error('No se pudo registrar correctamente el movimiento', 'Error', { timeOut: 5000 });
                }
                $('#modal-proceso').waitMe('hide');
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                $('#modal-proceso').waitMe('hide');
            });
        }
    }
}

function NuevoCompraVentaME(_escritura, caja) {
    run_waitMe($('#main-contenido'), 1, "ios");
    var Cod_Caja = '100'; //caja.Cod_Caja
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_Caja: Cod_Caja
        })
    };
    fetch(_constantes.URL + '/compra_venta_moneda_extranjera_api/get_comprobante_by_caja', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            TraerSiguienteNumeroComprobante(_escritura, res.data.comprobante_caja[0].Serie == undefined ? 0 : res.data.comprobante_caja[0].Serie);
        } else {
            $('#main-contenido').waitMe('hide');
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#main-contenido').waitMe('hide');
    });
}

function TraerSiguienteNumeroComprobante(_escritura, Serie) {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Serie: Serie
        })
    };
    fetch(_constantes.URL + '/compra_venta_moneda_extranjera_api/get_next_number_comprobante', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var variables = res.data;

            var fecha = new Date();
            var mes = fecha.getMonth() + 1;
            var dia = fecha.getDate();
            var fecha_format = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);

            Ver(_escritura, Serie, variables, fecha_format);
        } else {}
        $('#main-contenido').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#main-contenido').waitMe('hide');
    });
}

function TraerCuentaBancariaEntidadFinanciera() {
    var Cod_EntidadFinanciera = $("#SelectEntidadFinanciera").val();
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_EntidadFinanciera: Cod_EntidadFinanciera
        })
    };
    fetch(_constantes.URL + '/compra_venta_moneda_extranjera_api/get_cuenta_bancaria_by_entidad_financiera', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            LlenarCuenta(res.data.cuenta_bancaria_pen, "Cod_CuentaSoles");
            LlenarCuenta(res.data.cuenta_bancaria_usd, "Cod_CuentaME");
        } else {}
        $('#main-contenido').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#main-contenido').waitMe('hide');
    });
}

exports.NuevoCompraVentaME = NuevoCompraVentaME;

},{"../../../constantes_entorno/constantes":377,"../../modales":395,"../../movimientos_caja":398,"empty-element":338,"yo-yo":375}],389:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NuevoEgreso = undefined;

var _templateObject = _taggedTemplateLiteral(['\n    <div class="modal-dialog modal-lg">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"><b>RECIBO DE EGRESO</b></h4>\n            </div>\n            <div class="modal-body" id="modal_form_egreso">\n                <div class="modal fade" id="modal_observaciones">\n                    <div class="modal-dialog modal-sm" > \n                        <div class="modal-content" id="modal_obs_body"></div>\n                    </div> \n                </div>\n                <div class="row">\n                    <div class="callout callout-danger hidden" id="modal_error_egreso">\n                        <p>Es necesario llenar todos los campos requeridos y el Importe mayor a cero</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-8" id="div-cliente-recibo-egreso">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <p>A favor de :</p>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-md-3">\n                                        <div class="form-group">\n                                            <select id="Cod_TipoDoc" class="form-control">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-6">\n                                        <div class="input-group">\n                                            <input type="text" id="Nro_Documento" onblur="', '" class="form-control required">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modal-buscar-doc-proveedor" id="BuscarDoc">\n                                                    <i class="fa fa-globe"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-3">\n                                        <div class="form-group">\n                                            <button class="btn btn-info" onclick="', '">Mas Detalles</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <div class="input-group">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-success" id="AgregarCliente" onclick=', '>\n                                                    <i class="fa fa-plus"></i>\n                                                </button>\n                                            </div>\n                                            <input type="text" id="Cliente" class="form-control required">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-info" id="BuscarCliente" onclick=', '">\n                                                    <i class="fa fa-search"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="box-footer">\n                                \n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-md-4">\n                        <div class="panel panel-default">\n\n\n                            <div class="panel-heading text-center">\n                                <div class="row">\n                                    <h4 class="box-title" id="Ruc_Empresa"><strong> R.U.C. 20442625256 </strong></h4>\n                                </div>\n                                <div class="row">\n                                    <h4><strong>RECIBO DE EGRESO</strong></h4>\n                                </div> \n                                \n                                <div class="row">\n                                    <div class="col-md-5">\n                                        <div class="form-group">\n                                            <select class="form-control" id="Serie">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-7">\n                                        <div class="form-group">\n                                            <input type="text" class="form-control required"  id="Numero" value="00000000', '">\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-6">\n                    </div>\n                    <div class="col-sm-3">\n                        <div class="form-group">\n                            <b>Moneda: </b>\n                            <select id="Cod_Moneda" id="" class="form-control">\n                                ', '\n                            </select>\n                        </div>\n                    </div>\n                    <div class="col-sm-3">\n                        <div class="form-group">\n                            <b>Fecha: </b>\n                            <input type="date" class="form-control" id="Fecha" value="', '">\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-12">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <p>Detalles</p>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-sm-9">\n                                        <div class="form-group">\n                                            <label for="">Cuenta</label>\n                                            <select id="Id_Concepto" class="form-control" id="">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-sm-9">\n                                        <div class="form-group">\n                                            <label for="">Concepto:</label>\n                                            <textarea class="form-control" id="Des_Movimiento"></textarea>\n                                        </div>\n                                    </div>\n                                    <div class="col-sm-3">\n                                        <div class="form-group">\n                                            <label for="">Importe :</label>\n                                            <input class="form-control required" type="number" id="Monto" value="0.00">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="box-footer">\n                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    \n            <div class="modal-footer">\n                <button onclick="', '" class="btn btn-primary">Guardar</button>\n                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar</button>\n            </div>\n        </div>\n    </div>'], ['\n    <div class="modal-dialog modal-lg">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"><b>RECIBO DE EGRESO</b></h4>\n            </div>\n            <div class="modal-body" id="modal_form_egreso">\n                <div class="modal fade" id="modal_observaciones">\n                    <div class="modal-dialog modal-sm" > \n                        <div class="modal-content" id="modal_obs_body"></div>\n                    </div> \n                </div>\n                <div class="row">\n                    <div class="callout callout-danger hidden" id="modal_error_egreso">\n                        <p>Es necesario llenar todos los campos requeridos y el Importe mayor a cero</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-8" id="div-cliente-recibo-egreso">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <p>A favor de :</p>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-md-3">\n                                        <div class="form-group">\n                                            <select id="Cod_TipoDoc" class="form-control">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-6">\n                                        <div class="input-group">\n                                            <input type="text" id="Nro_Documento" onblur="', '" class="form-control required">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modal-buscar-doc-proveedor" id="BuscarDoc">\n                                                    <i class="fa fa-globe"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-3">\n                                        <div class="form-group">\n                                            <button class="btn btn-info" onclick="', '">Mas Detalles</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <div class="input-group">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-success" id="AgregarCliente" onclick=', '>\n                                                    <i class="fa fa-plus"></i>\n                                                </button>\n                                            </div>\n                                            <input type="text" id="Cliente" class="form-control required">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-info" id="BuscarCliente" onclick=', '">\n                                                    <i class="fa fa-search"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="box-footer">\n                                \n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-md-4">\n                        <div class="panel panel-default">\n\n\n                            <div class="panel-heading text-center">\n                                <div class="row">\n                                    <h4 class="box-title" id="Ruc_Empresa"><strong> R.U.C. 20442625256 </strong></h4>\n                                </div>\n                                <div class="row">\n                                    <h4><strong>RECIBO DE EGRESO</strong></h4>\n                                </div> \n                                \n                                <div class="row">\n                                    <div class="col-md-5">\n                                        <div class="form-group">\n                                            <select class="form-control" id="Serie">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-7">\n                                        <div class="form-group">\n                                            <input type="text" class="form-control required"  id="Numero" value="00000000', '">\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-6">\n                    </div>\n                    <div class="col-sm-3">\n                        <div class="form-group">\n                            <b>Moneda: </b>\n                            <select id="Cod_Moneda" id="" class="form-control">\n                                ', '\n                            </select>\n                        </div>\n                    </div>\n                    <div class="col-sm-3">\n                        <div class="form-group">\n                            <b>Fecha: </b>\n                            <input type="date" class="form-control" id="Fecha" value="', '">\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-12">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <p>Detalles</p>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-sm-9">\n                                        <div class="form-group">\n                                            <label for="">Cuenta</label>\n                                            <select id="Id_Concepto" class="form-control" id="">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-sm-9">\n                                        <div class="form-group">\n                                            <label for="">Concepto:</label>\n                                            <textarea class="form-control" id="Des_Movimiento"></textarea>\n                                        </div>\n                                    </div>\n                                    <div class="col-sm-3">\n                                        <div class="form-group">\n                                            <label for="">Importe :</label>\n                                            <input class="form-control required" type="number" id="Monto" value="0.00">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="box-footer">\n                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    \n            <div class="modal-footer">\n                <button onclick="', '" class="btn btn-primary">Guardar</button>\n                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar</button>\n            </div>\n        </div>\n    </div>']),
    _templateObject2 = _taggedTemplateLiteral(['\n                                                    <option value="', '">', '</option>\n                                                    '], ['\n                                                    <option value="', '">', '</option>\n                                                    ']),
    _templateObject3 = _taggedTemplateLiteral(['<option value="', '">', '</option>'], ['<option value="', '">', '</option>']),
    _templateObject4 = _taggedTemplateLiteral(['\n                                    <option value="', '">', '</option>\n                                    '], ['\n                                    <option value="', '">', '</option>\n                                    ']),
    _templateObject5 = _taggedTemplateLiteral(['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Buscar Cliente - Proveedor</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="radio">\n                                <label>\n                                    <input type="radio" id="optionsRadiosBuscar" name="optionsRadiosBuscar" value="nro"> Por Nro. Documento\n                                </label>\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="radio">\n                                <label>\n                                    <input type="radio" id="optionsRadiosBuscar" name="optionsRadiosBuscar" checked="checked" value="nombre"> Por Nombre o Cliente\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <div class="input-group">\n                                <input type="text" class="form-control" id="txtBuscarCliente">\n                                <div class="input-group-btn">\n                                    <button type="button" id="BuscarClienteModal" class="btn btn-success" onclick=', '><i class="fa fa-search"></i> Buscar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="table-responsive" id="contenedorTablaClientes">\n\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnGuardar" data-dismiss="modal">Aceptar</button>\n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Buscar Cliente - Proveedor</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="radio">\n                                <label>\n                                    <input type="radio" id="optionsRadiosBuscar" name="optionsRadiosBuscar" value="nro"> Por Nro. Documento\n                                </label>\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="radio">\n                                <label>\n                                    <input type="radio" id="optionsRadiosBuscar" name="optionsRadiosBuscar" checked="checked" value="nombre"> Por Nombre o Cliente\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <div class="input-group">\n                                <input type="text" class="form-control" id="txtBuscarCliente">\n                                <div class="input-group-btn">\n                                    <button type="button" id="BuscarClienteModal" class="btn btn-success" onclick=', '><i class="fa fa-search"></i> Buscar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="table-responsive" id="contenedorTablaClientes">\n\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnGuardar" data-dismiss="modal">Aceptar</button>\n                </div>\n            </div>\n        </div>']),
    _templateObject6 = _taggedTemplateLiteral(['<table id="example1" class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Documento</th>\n            <th>Cliente</th> \n            <th>Acciones</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>'], ['<table id="example1" class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Documento</th>\n            <th>Cliente</th> \n            <th>Acciones</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>']),
    _templateObject7 = _taggedTemplateLiteral(['\n        <tr>\n            <td>', '</td>\n            <td>', '</td> \n            <td><button class="btn btn-xs btn-primary" data-dismiss="modal" onclick="', '"><i class="fa fa-check"></i> Elegir</button></td>\n        </tr>'], ['\n        <tr>\n            <td>', '</td>\n            <td>', '</td> \n            <td><button class="btn btn-xs btn-primary" data-dismiss="modal" onclick="', '"><i class="fa fa-check"></i> Elegir</button></td>\n        </tr>']),
    _templateObject8 = _taggedTemplateLiteral(['<div>\n    <div class="modal-body">\n        ', '\n    </div>\n    <div class="modal-footer">\n        <button onclick="', '" class="btn btn-primary">Guardar</button>\n    </div></div>'], ['<div>\n    <div class="modal-body">\n        ', '\n    </div>\n    <div class="modal-footer">\n        <button onclick="', '" class="btn btn-primary">Guardar</button>\n    </div></div>']),
    _templateObject9 = _taggedTemplateLiteral(['\n        <div class="row">\n            <div class="col-sm-12">\n                <div class="form-group">\n                    <label for="">', '</label>\n                    <input id="', '"\n                    value=', '\n                    class="form-control" />\n                </div>\n            </div>\n        </div>'], ['\n        <div class="row">\n            <div class="col-sm-12">\n                <div class="form-group">\n                    <label for="">', '</label>\n                    <input id="', '"\n                    value=', '\n                    class="form-control" />\n                </div>\n            </div>\n        </div>']);

var _constantes = require('../../../constantes_entorno/constantes');

var _movimientos_caja = require('../../movimientos_caja');

var _modales = require('../../modales');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');


function CargarFormulario(variables, fecha_actual) {
    var el = yo(_templateObject, variables.documentos.map(function (e) {
        return yo(_templateObject2, e.Cod_TipoDoc, e.Nom_TipoDoc);
    }), function () {
        return BuscarCliente();
    }, function () {
        return AbrirModalObs(variables.diagrama);
    }, function () {
        return (0, _modales.NuevoCliente)(variables.documentos);
    }, function () {
        return VerBuscarCliente(variables);
    }, variables.Serie.map(function (e) {
        return yo(_templateObject3, e.Serie, e.Serie);
    }), variables.Numero, variables.monedas.map(function (e) {
        return yo(_templateObject4, e.Cod_Moneda, e.Nom_Moneda);
    }), fecha_actual, variables.conceptos.map(function (e) {
        return yo(_templateObject2, e.Id_Concepto, e.Des_Concepto);
    }), function () {
        return Guardar();
    });

    var ingreso = document.getElementById('modal-proceso');
    empty(ingreso).appendChild(el);
    $('#modal-proceso').modal();
}

function VerBuscarCliente(variables) {
    var el = yo(_templateObject5, function () {
        return BusquedaClienteModal();
    });

    var modal_proceso = document.getElementById('modal-superior');
    empty(modal_proceso).appendChild(el);
    $('#modal-superior').modal();
    $("#txtBuscarCliente").val($("#Cliente").val());
}

var Id_ClienteProveedor = null;
var Obs_Recibo = null;

function SeleccionarCliente(cliente) {
    $("#Nro_DocumentoBuscar").val(cliente.Nro_Documento);
    $("#Cliente").val(cliente.Cliente);
    $("#Cod_TipoDoc").val(cliente.Cod_TipoDocumento);
    Id_ClienteProveedor = cliente.Id_ClienteProveedor;
}

function AgregarTabla(clientes) {
    var el = yo(_templateObject6, clientes.map(function (u) {
        return yo(_templateObject7, u.Nro_Documento, u.Cliente, function () {
            return SeleccionarCliente(u);
        });
    }));
    empty(document.getElementById('contenedorTablaClientes')).appendChild(el);
}

function BusquedaClienteModal(e) {
    var txtBuscarCliente = $("#txtBuscarCliente").val();
    if (txtBuscarCliente.length > 4) {
        if ($('input[name=optionsRadiosBuscar]:checked').val() == 'nombre') {
            var Cliente = txtBuscarCliente;
            var parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Cliente: Cliente
                })
            };
            fetch(_constantes.URL + '/clientes_api/get_cliente_by_nombre', parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                console.log(res);
                if (res.respuesta == 'ok') {
                    var clientes = res.data.cliente;
                    if (clientes.length > 0) AgregarTabla(clientes);else empty(document.getElementById('contenedorTablaClientes'));
                } else empty(document.getElementById('contenedorTablaClientes'));
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        } else {
            var Nro_Documento = txtBuscarCliente;
            var Cod_TipoDocumento = '';
            var _parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Nro_Documento: Nro_Documento,
                    Cod_TipoDocumento: Cod_TipoDocumento
                })
            };
            fetch(_constantes.URL + '/clientes_api/get_cliente_by_documento', _parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                if (res.respuesta == 'ok') {
                    var clientes = res.data.cliente;
                    if (clientes.length > 0) AgregarTabla(clientes);else empty(document.getElementById('contenedorTablaClientes'));
                } else empty(document.getElementById('contenedorTablaClientes'));
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        }
    }
}

function BuscarCliente() {
    run_waitMe($('#div-cliente-recibo-egreso'), 1, "ios", "Buscando cliente...");
    var Nro_Documento = document.getElementById('Nro_Documento').value;
    var Cod_TipoDocumento = document.getElementById('Cod_TipoDoc').value;
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Nro_Documento: Nro_Documento, Cod_TipoDocumento: Cod_TipoDocumento
        })
    };
    fetch(_constantes.URL + '/recibo_iegreso_api/get_cliente_by_nro_documento', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok' && res.data.cliente.length > 0) {
            $("#Cliente").val(res.data.cliente[0].Cliente);
            $("#Nro_Documento").val(res.data.cliente[0].Nro_Documento);
            Id_ClienteProveedor = res.data.cliente[0].Id_ClienteProveedor;
        }
        $('#div-cliente-recibo-egreso').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#div-cliente-recibo-egreso').waitMe('hide');
    });
}
function getValueXML(xmlDoc, TAG) {
    if (xmlDoc.getElementsByTagName(TAG).length > 0 && xmlDoc.getElementsByTagName(TAG)[0].childNodes.length > 0) {
        return xmlDoc.getElementsByTagName(TAG)[0].childNodes[0].nodeValue;
    } else {
        return '';
    }
}
function AbrirModalObs(diagrama) {
    var xml = Obs_Recibo != null ? Obs_Recibo : '';
    var parser = new DOMParser();
    var xmlDoc = parser.parseFromString(xml, "text/xml");
    var el = yo(_templateObject8, diagrama.map(function (e) {
        return yo(_templateObject9, e.Nom_Elemento, e.Cod_Elemento, getValueXML(xmlDoc, e.Cod_Elemento));
    }), function () {
        return GuardarObs_Recibo(diagrama);
    });
    var obs_xml = document.getElementById('modal_obs_body');
    empty(obs_xml).appendChild(el);
    $('#modal_observaciones').modal();
}
function GuardarObs_Recibo(diagramas) {
    var OBS = '<Registro>';
    for (var i = 0; i < diagramas.length; i++) {
        OBS += '<' + diagramas[i].Cod_Elemento + '>' + document.getElementById(diagramas[i].Cod_Elemento).value + '</' + diagramas[i].Cod_Elemento + '>';
    }
    Obs_Recibo = OBS + '</Registro>';
    $('#modal_observaciones').modal('hide');
}
function Guardar() {
    if (ValidacionCampos("modal_error_egreso", "modal_form_egreso") && !isNaN(parseInt(document.getElementById('Monto').value)) && parseInt(document.getElementById('Monto').value) > 0) {
        var Id_Concepto = document.getElementById('Id_Concepto').value;
        var Cliente = document.getElementById('Cliente').value;
        var Des_Movimiento = document.getElementById('Des_Movimiento').value;
        var Cod_TipoComprobante = 'RE';
        var Serie = document.getElementById('Serie').value;
        var Numero = document.getElementById('Numero').value;
        var Fecha = document.getElementById('Fecha').value;
        var MontoEgreso = document.getElementById('Monto').value;
        var MontoIngreso = 0;
        var Cod_Moneda = document.getElementById('Cod_Moneda').value;
        var Obs_Movimiento = Obs_Recibo;
        run_waitMe($('#modal-proceso'), 1, "ios", "");
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            credentials: 'same-origin',
            body: JSON.stringify({
                Id_Concepto: Id_Concepto, Id_ClienteProveedor: Id_ClienteProveedor, Cliente: Cliente,
                Des_Movimiento: Des_Movimiento, Cod_TipoComprobante: Cod_TipoComprobante, Serie: Serie,
                Numero: Numero, Fecha: Fecha, MontoEgreso: MontoEgreso, MontoIngreso: MontoIngreso, Cod_Moneda: Cod_Moneda, Obs_Movimiento: Obs_Movimiento
            })
        };
        console.log(parametros);
        fetch(_constantes.URL + '/recibo_iegreso_api/guardar_recibo', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == 'ok') {
                toastr.success('Se registro correctamente el egreso', 'Confirmacion', { timeOut: 5000 });
                (0, _movimientos_caja.refrescar_movimientos)();
            } else {
                toastr.error('No se pudo registrar correctamente el egreso', 'Error', { timeOut: 5000 });
            }
            $('#modal-proceso').modal('hide');
            $('#modal-proceso').waitMe('hide');
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            $('#modal-proceso').waitMe('hide');
        });
    }
}
function NuevoEgreso() {
    run_waitMe($('#main-contenido'), 1, "ios");
    var Cod_TipoComprobante = 'RE';
    var Cod_ClaseConcepto = '006';
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_TipoComprobante: Cod_TipoComprobante,
            Cod_ClaseConcepto: Cod_ClaseConcepto
        })
    };
    fetch(_constantes.URL + '/recibo_iegreso_api/get_variables_recibo_iegreso', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var fecha = new Date();
            var mes = fecha.getMonth() + 1;
            var dia = fecha.getDate();
            var fecha_format = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);
            CargarFormulario(res.data, fecha_format);
        } else CargarFormulario({});
        $('#main-contenido').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#main-contenido').waitMe('hide');
    });
}

exports.NuevoEgreso = NuevoEgreso;

},{"../../../constantes_entorno/constantes":377,"../../modales":395,"../../movimientos_caja":398,"empty-element":338,"yo-yo":375}],390:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NuevoIngreso = undefined;

var _templateObject = _taggedTemplateLiteral(['\n    <div class="modal-dialog modal-lg">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"><b>RECIBO DE INGRESO</b></h4>\n            </div>\n            <div class="modal-body" id="modal_form_ingreso">\n                <div class="modal fade" id="modal_observaciones">\n                    <div class="modal-dialog modal-sm" > \n                        <div class="modal-content" id="modal_obs_body"></div>\n                    </div> \n                </div>\n                <div class="row">\n                    <div class="callout callout-danger hidden" id="modal_error_ingreso">\n                        <p>Es necesario llenar todos los campos requeridos y el Importe mayor a cero</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-8" id="div-cliente-recibo-ingreso">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <p>A favor de :</p>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-md-3">\n                                        <div class="form-group">\n                                            <select id="Cod_TipoDoc" class="form-control">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-6">\n                                        <div class="input-group">\n                                            <input type="text" id="Nro_Documento" onblur="', '" class="form-control required">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modal-buscar-doc-proveedor" id="BuscarDoc">\n                                                    <i class="fa fa-globe"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-3">\n                                        <div class="form-group">\n                                            <button class="btn btn-info" onclick="', '">Mas Detalles</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <div class="input-group">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-success" id="AgregarCliente" onclick=', '>\n                                                    <i class="fa fa-plus"></i>\n                                                </button>\n                                            </div>\n                                            <input type="text" id="Cliente" class="form-control required">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-info" id="BuscarCliente" onclick=', '>\n                                                    <i class="fa fa-search"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="box-footer">\n                                \n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-md-4">\n                        <div class="panel panel-default">\n\n\n                            <div class="panel-heading text-center">\n                                <div class="row">\n                                    <h4 class="box-title" id="Ruc_Empresa"><strong> R.U.C. 20442625256 </strong></h4>\n                                </div>\n                                <div class="row">\n                                    <h4><strong>RECIBO DE INGRESO</strong></h4>\n                                </div> \n                                \n                                <div class="row">\n                                    <div class="col-md-5">\n                                        <div class="form-group">\n                                            <select class="form-control" id="Serie">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-7">\n                                        <div class="form-group">\n                                            <input type="text" class="form-control required" id="Numero"  value="00000000', '">\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-6">\n                    </div>\n                    <div class="col-sm-3">\n                        <div class="form-group">\n                            <b>Moneda: </b>\n                            <select id="Cod_Moneda" id="" class="form-control">\n                                ', '\n                            </select>\n                        </div>\n                    </div>\n                    <div class="col-sm-3">\n                        <div class="form-group">\n                            <b>Fecha: </b>\n                            <input type="date" class="form-control" id="Fecha" value="', '">\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-12">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <p>Detalles</p>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-sm-9">\n                                        <div class="form-group">\n                                            <label for="">Cuenta</label>\n                                            <select id="Id_Concepto" class="form-control" id="">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-sm-9">\n                                        <div class="form-group">\n                                            <label for="">Concepto:</label>\n                                            <textarea class="form-control" id="Des_Movimiento"></textarea>\n                                        </div>\n                                    </div>\n                                    <div class="col-sm-3">\n                                        <div class="form-group">\n                                            <label for="">Importe :</label>\n                                            <input class="form-control required" type="number" id="Monto" value="0.00">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="box-footer">\n                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    \n            <div class="modal-footer">\n                <button onclick="', '" class="btn btn-primary">Guardar</button>\n                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar</button>\n            </div>\n        </div>\n    </div>'], ['\n    <div class="modal-dialog modal-lg">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"><b>RECIBO DE INGRESO</b></h4>\n            </div>\n            <div class="modal-body" id="modal_form_ingreso">\n                <div class="modal fade" id="modal_observaciones">\n                    <div class="modal-dialog modal-sm" > \n                        <div class="modal-content" id="modal_obs_body"></div>\n                    </div> \n                </div>\n                <div class="row">\n                    <div class="callout callout-danger hidden" id="modal_error_ingreso">\n                        <p>Es necesario llenar todos los campos requeridos y el Importe mayor a cero</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-8" id="div-cliente-recibo-ingreso">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <p>A favor de :</p>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-md-3">\n                                        <div class="form-group">\n                                            <select id="Cod_TipoDoc" class="form-control">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-6">\n                                        <div class="input-group">\n                                            <input type="text" id="Nro_Documento" onblur="', '" class="form-control required">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modal-buscar-doc-proveedor" id="BuscarDoc">\n                                                    <i class="fa fa-globe"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-3">\n                                        <div class="form-group">\n                                            <button class="btn btn-info" onclick="', '">Mas Detalles</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <div class="input-group">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-success" id="AgregarCliente" onclick=', '>\n                                                    <i class="fa fa-plus"></i>\n                                                </button>\n                                            </div>\n                                            <input type="text" id="Cliente" class="form-control required">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn btn-info" id="BuscarCliente" onclick=', '>\n                                                    <i class="fa fa-search"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="box-footer">\n                                \n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-md-4">\n                        <div class="panel panel-default">\n\n\n                            <div class="panel-heading text-center">\n                                <div class="row">\n                                    <h4 class="box-title" id="Ruc_Empresa"><strong> R.U.C. 20442625256 </strong></h4>\n                                </div>\n                                <div class="row">\n                                    <h4><strong>RECIBO DE INGRESO</strong></h4>\n                                </div> \n                                \n                                <div class="row">\n                                    <div class="col-md-5">\n                                        <div class="form-group">\n                                            <select class="form-control" id="Serie">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-7">\n                                        <div class="form-group">\n                                            <input type="text" class="form-control required" id="Numero"  value="00000000', '">\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-6">\n                    </div>\n                    <div class="col-sm-3">\n                        <div class="form-group">\n                            <b>Moneda: </b>\n                            <select id="Cod_Moneda" id="" class="form-control">\n                                ', '\n                            </select>\n                        </div>\n                    </div>\n                    <div class="col-sm-3">\n                        <div class="form-group">\n                            <b>Fecha: </b>\n                            <input type="date" class="form-control" id="Fecha" value="', '">\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-sm-12">\n                        <div class="panel panel-default">\n                            <div class="panel-heading">\n                                <p>Detalles</p>\n                            </div>\n                            <div class="panel-body">\n                                <div class="row">\n                                    <div class="col-sm-9">\n                                        <div class="form-group">\n                                            <label for="">Cuenta</label>\n                                            <select id="Id_Concepto" class="form-control" id="">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-sm-9">\n                                        <div class="form-group">\n                                            <label for="">Concepto:</label>\n                                            <textarea class="form-control" id="Des_Movimiento"></textarea>\n                                        </div>\n                                    </div>\n                                    <div class="col-sm-3">\n                                        <div class="form-group">\n                                            <label for="">Importe :</label>\n                                            <input class="form-control required" type="number" id="Monto" value="0.00">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="box-footer">\n                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    \n            <div class="modal-footer">\n                <button onclick="', '" class="btn btn-primary">Guardar</button>\n                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar</button>\n            </div>\n        </div>\n    </div>']),
    _templateObject2 = _taggedTemplateLiteral(['\n                                                    <option value="', '">', '</option>\n                                                    '], ['\n                                                    <option value="', '">', '</option>\n                                                    ']),
    _templateObject3 = _taggedTemplateLiteral(['<option value="', '">', '</option>'], ['<option value="', '">', '</option>']),
    _templateObject4 = _taggedTemplateLiteral(['\n                                    <option value="', '">', '</option>\n                                    '], ['\n                                    <option value="', '">', '</option>\n                                    ']),
    _templateObject5 = _taggedTemplateLiteral(['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Buscar Cliente - Proveedor</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="radio">\n                                <label>\n                                    <input type="radio" id="optionsRadiosBuscar" name="optionsRadiosBuscar" value="nro"> Por Nro. Documento\n                                </label>\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="radio">\n                                <label>\n                                    <input type="radio" id="optionsRadiosBuscar" name="optionsRadiosBuscar" checked="checked" value="nombre"> Por Nombre o Cliente\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <div class="input-group">\n                                <input type="text" class="form-control" id="txtBuscarCliente">\n                                <div class="input-group-btn">\n                                    <button type="button" id="BuscarClienteModal" class="btn btn-success" onclick=', '><i class="fa fa-search"></i> Buscar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="table-responsive" id="contenedorTablaClientes">\n\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnGuardar" data-dismiss="modal">Aceptar</button>\n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Buscar Cliente - Proveedor</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="radio">\n                                <label>\n                                    <input type="radio" id="optionsRadiosBuscar" name="optionsRadiosBuscar" value="nro"> Por Nro. Documento\n                                </label>\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="radio">\n                                <label>\n                                    <input type="radio" id="optionsRadiosBuscar" name="optionsRadiosBuscar" checked="checked" value="nombre"> Por Nombre o Cliente\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <div class="input-group">\n                                <input type="text" class="form-control" id="txtBuscarCliente">\n                                <div class="input-group-btn">\n                                    <button type="button" id="BuscarClienteModal" class="btn btn-success" onclick=', '><i class="fa fa-search"></i> Buscar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="table-responsive" id="contenedorTablaClientes">\n\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnGuardar" data-dismiss="modal">Aceptar</button>\n                </div>\n            </div>\n        </div>']),
    _templateObject6 = _taggedTemplateLiteral(['<table id="example1" class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Documento</th>\n            <th>Cliente</th> \n            <th>Acciones</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>'], ['<table id="example1" class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Documento</th>\n            <th>Cliente</th> \n            <th>Acciones</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>']),
    _templateObject7 = _taggedTemplateLiteral(['\n        <tr>\n            <td>', '</td>\n            <td>', '</td> \n            <td><button class="btn btn-xs btn-primary" data-dismiss="modal" onclick="', '"><i class="fa fa-check"></i> Elegir</button></td>\n        </tr>'], ['\n        <tr>\n            <td>', '</td>\n            <td>', '</td> \n            <td><button class="btn btn-xs btn-primary" data-dismiss="modal" onclick="', '"><i class="fa fa-check"></i> Elegir</button></td>\n        </tr>']),
    _templateObject8 = _taggedTemplateLiteral(['<div>\n    <div class="modal-body">\n        ', '\n    </div>\n    <div class="modal-footer">\n        <button onclick="', '" class="btn btn-primary">Guardar</button>\n    </div></div>'], ['<div>\n    <div class="modal-body">\n        ', '\n    </div>\n    <div class="modal-footer">\n        <button onclick="', '" class="btn btn-primary">Guardar</button>\n    </div></div>']),
    _templateObject9 = _taggedTemplateLiteral(['\n        <div class="row">\n            <div class="col-sm-12">\n                <div class="form-group">\n                    <label for="">', '</label>\n                    <input id="', '"\n                    value=', '\n                    class="form-control" />\n                </div>\n            </div>\n        </div>'], ['\n        <div class="row">\n            <div class="col-sm-12">\n                <div class="form-group">\n                    <label for="">', '</label>\n                    <input id="', '"\n                    value=', '\n                    class="form-control" />\n                </div>\n            </div>\n        </div>']);

var _constantes = require('../../../constantes_entorno/constantes');

var _movimientos_caja = require('../../movimientos_caja');

var _modales = require('../../modales');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');


function CargarFormulario(variables, fecha_actual) {
    var el = yo(_templateObject, variables.documentos.map(function (e) {
        return yo(_templateObject2, e.Cod_TipoDoc, e.Nom_TipoDoc);
    }), function () {
        return BuscarCliente();
    }, function () {
        return AbrirModalObs(variables.diagrama);
    }, function () {
        return (0, _modales.NuevoCliente)(variables.documentos);
    }, function () {
        return VerBuscarCliente(variables);
    }, variables.Serie.map(function (e) {
        return yo(_templateObject3, e.Serie, e.Serie);
    }), variables.Numero, variables.monedas.map(function (e) {
        return yo(_templateObject4, e.Cod_Moneda, e.Nom_Moneda);
    }), fecha_actual, variables.conceptos.map(function (e) {
        return yo(_templateObject2, e.Id_Concepto, e.Des_Concepto);
    }), function () {
        return Guardar();
    });

    var ingreso = document.getElementById('modal-proceso');
    empty(ingreso).appendChild(el);
    $('#modal-proceso').modal();
}

function VerBuscarCliente(variables) {
    var el = yo(_templateObject5, function () {
        return BusquedaClienteModal();
    });

    var modal_proceso = document.getElementById('modal-superior');
    empty(modal_proceso).appendChild(el);
    $('#modal-superior').modal();
    $("#txtBuscarCliente").val($("#Cliente").val());
}

function AgregarTabla(clientes) {
    var el = yo(_templateObject6, clientes.map(function (u) {
        return yo(_templateObject7, u.Nro_Documento, u.Cliente, function () {
            return SeleccionarCliente(u);
        });
    }));
    empty(document.getElementById('contenedorTablaClientes')).appendChild(el);
}

var Id_ClienteProveedor = null;
var Obs_Recibo = null;

function SeleccionarCliente(cliente) {
    $("#Nro_DocumentoBuscar").val(cliente.Nro_Documento);
    $("#Cliente").val(cliente.Cliente);
    $("#Cod_TipoDoc").val(cliente.Cod_TipoDocumento);
    Id_ClienteProveedor = cliente.Id_ClienteProveedor;
}

function BuscarCliente() {
    run_waitMe($('#div-cliente-recibo-ingreso'), 1, "ios", "Buscando cliente...");
    var Nro_Documento = document.getElementById('Nro_Documento').value;
    var Cod_TipoDocumento = document.getElementById('Cod_TipoDoc').value;
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Nro_Documento: Nro_Documento, Cod_TipoDocumento: Cod_TipoDocumento
        })
    };
    fetch(_constantes.URL + '/recibo_iegreso_api/get_cliente_by_nro_documento', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        console.log(res);
        if (res.respuesta == 'ok' && res.data.cliente.length > 0) {
            $("#Cliente").val(res.data.cliente[0].Cliente);
            $("#Nro_Documento").val(res.data.cliente[0].Nro_Documento);
            Id_ClienteProveedor = res.data.cliente[0].Id_ClienteProveedor;
        }
        $('#div-cliente-recibo-ingreso').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#div-cliente-recibo-ingreso').waitMe('hide');
    });
}
function getValueXML(xmlDoc, TAG) {
    if (xmlDoc.getElementsByTagName(TAG).length > 0 && xmlDoc.getElementsByTagName(TAG)[0].childNodes.length > 0) {
        return xmlDoc.getElementsByTagName(TAG)[0].childNodes[0].nodeValue;
    } else {
        return '';
    }
}

function BusquedaClienteModal(e) {
    var txtBuscarCliente = $("#txtBuscarCliente").val();
    if (txtBuscarCliente.length > 4) {
        if ($('input[name=optionsRadiosBuscar]:checked').val() == 'nombre') {
            var Cliente = txtBuscarCliente;
            var parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Cliente: Cliente
                })
            };
            fetch(_constantes.URL + '/clientes_api/get_cliente_by_nombre', parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                console.log(res);
                if (res.respuesta == 'ok') {
                    var clientes = res.data.cliente;
                    if (clientes.length > 0) AgregarTabla(clientes);else empty(document.getElementById('contenedorTablaClientes'));
                } else empty(document.getElementById('contenedorTablaClientes'));
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        } else {
            var Nro_Documento = txtBuscarCliente;
            var Cod_TipoDocumento = '';
            var _parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Nro_Documento: Nro_Documento,
                    Cod_TipoDocumento: Cod_TipoDocumento
                })
            };
            fetch(_constantes.URL + '/clientes_api/get_cliente_by_documento', _parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                if (res.respuesta == 'ok') {
                    var clientes = res.data.cliente;
                    if (clientes.length > 0) AgregarTabla(clientes);else empty(document.getElementById('contenedorTablaClientes'));
                } else empty(document.getElementById('contenedorTablaClientes'));
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        }
    }
}

function AbrirModalObs(diagrama) {
    var xml = Obs_Recibo != null ? Obs_Recibo : '';
    var parser = new DOMParser();
    var xmlDoc = parser.parseFromString(xml, "text/xml");
    var el = yo(_templateObject8, diagrama.map(function (e) {
        return yo(_templateObject9, e.Nom_Elemento, e.Cod_Elemento, getValueXML(xmlDoc, e.Cod_Elemento));
    }), function () {
        return GuardarObs_Recibo(diagrama);
    });
    var obs_xml = document.getElementById('modal_obs_body');
    empty(obs_xml).appendChild(el);
    $('#modal_observaciones').modal();
}
function GuardarObs_Recibo(diagramas) {
    var OBS = '<Registro>';
    for (var i = 0; i < diagramas.length; i++) {
        OBS += '<' + diagramas[i].Cod_Elemento + '>' + document.getElementById(diagramas[i].Cod_Elemento).value + '</' + diagramas[i].Cod_Elemento + '>';
    }
    Obs_Recibo = OBS + '</Registro>';
    $('#modal_observaciones').modal('hide');
}
function Guardar() {
    if (ValidacionCampos("modal_error_ingreso", "modal_form_ingreso") && !isNaN(parseInt(document.getElementById('Monto').value)) && parseInt(document.getElementById('Monto').value) > 0) {
        var Id_Concepto = document.getElementById('Id_Concepto').value;
        var Cliente = document.getElementById('Cliente').value;
        var Des_Movimiento = document.getElementById('Des_Movimiento').value;
        var Cod_TipoComprobante = 'RI';
        var Serie = document.getElementById('Serie').value;
        var Numero = document.getElementById('Numero').value;
        var Fecha = document.getElementById('Fecha').value;
        var MontoIngreso = document.getElementById('Monto').value;
        var MontoEgreso = 0;
        var Cod_Moneda = document.getElementById('Cod_Moneda').value;
        var Obs_Movimiento = Obs_Recibo;
        run_waitMe($('#modal-proceso'), 1, "ios", "Registrando operaciÃ³n...");
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            credentials: 'same-origin',
            body: JSON.stringify({
                Id_Concepto: Id_Concepto, Id_ClienteProveedor: Id_ClienteProveedor, Cliente: Cliente,
                Des_Movimiento: Des_Movimiento, Cod_TipoComprobante: Cod_TipoComprobante, Serie: Serie,
                Numero: Numero, Fecha: Fecha, MontoIngreso: MontoIngreso, MontoEgreso: MontoEgreso, Cod_Moneda: Cod_Moneda, Obs_Movimiento: Obs_Movimiento
            })
        };
        console.log(parametros);
        fetch(_constantes.URL + '/recibo_iegreso_api/guardar_recibo', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            $('#modal-proceso').modal('hide');
            $('#modal-proceso').waitMe('hide');
            if (res.respuesta == 'ok') {
                toastr.success('Se registro correctamente el ingreso', 'Confirmacion', { timeOut: 5000 });
                (0, _movimientos_caja.refrescar_movimientos)();
            } else {
                toastr.error('No se pudo registrar correctamente el ingreso', 'Error', { timeOut: 5000 });
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            $('#modal-proceso').waitMe('hide');
        });
    }
}
function NuevoIngreso() {
    run_waitMe($('#main-contenido'), 1, "ios");
    var Cod_TipoComprobante = 'RI';
    var Cod_ClaseConcepto = '007';
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_TipoComprobante: Cod_TipoComprobante,
            Cod_ClaseConcepto: Cod_ClaseConcepto
        })
    };
    fetch(_constantes.URL + '/recibo_iegreso_api/get_variables_recibo_iegreso', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var fecha = new Date();
            var mes = fecha.getMonth() + 1;
            var dia = fecha.getDate();
            var fecha_format = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);
            CargarFormulario(res.data, fecha_format);
        } else CargarFormulario({});
        $('#main-contenido').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#main-contenido').waitMe('hide');
    });
}

exports.NuevoIngreso = NuevoIngreso;

},{"../../../constantes_entorno/constantes":377,"../../modales":395,"../../movimientos_caja":398,"empty-element":338,"yo-yo":375}],391:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NuevoEnvioEfectivo = undefined;

var _templateObject = _taggedTemplateLiteral(['\n        <div class="modal-dialog ">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Transferencias entre cajas</strong></h4>\n                </div>\n                <div class="modal-body"  id="modal_form">\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="row">\n                                <div id="modal_error" class="callout callout-danger hidden">\n                                    <p> Es necesario llenar los campos marcados con rojo</p>\n                                </div>\n                            </div>\n\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="form-group">\n                                        <label for="Cajero">Cajero</label>\n                                        <h4 type="text" class="form-control" id="Cajero"></h4>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="form-group">\n                                        <label for="Cod_CajaOrigen">Caja</label>\n                                        <select class="form-control" id="Cod_CajaOrigen" disabled>\n                                            ', '\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="form-group">\n                                        <label for="Fecha">Fecha</label>\n                                        <input type="date" class="form-control required" id="Fecha" placeholder=\'dd/mm/aaaa\' value=', '>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="row">\n                                <div class="panel panel-default">\n                                    <div class="panel-heading">Destino y Monto</div>\n                                    <div class="panel-body">\n                                        <div class="row">\n                                            <div class="col-md-3">\n                                                <div class="radio">\n                                                    <label>\n                                                        <input type="radio" value="b" id="optEnvios" name="optEnvios" onclick=', '> Banco\n                                                    </label>\n                                                </div>\n                                            </div>\n\n                                            <div class="col-md-9" id="formBanco" style="display:none"> \n                                                <div class="col-md-6">\n                                                    <div class="form-group">\n                                                        <select class="form-control" id="Cod_Cuenta_Bancaria">\n                                                            ', '\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                \n                                                <div class="col-md-6">\n                                                    <div class="form-group">\n                                                        <label class="sr-only" for="NroOperacion">Nro Op.</label>\n                                                        <input type="text" class="form-control" id="NroOperacion">\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class="row">\n                                            <div class="col-md-3">\n                                                <div class="radio">\n                                                    <label>\n                                                        <input type="radio" value="c" id="optEnvios" name="optEnvios" checked onclick=', '> Caja\n                                                    </label>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-9" id="formCaja">\n                                                <div class="form-group">\n                                                    <select class="form-control required" id="Cod_CajaDestino">\n                                                        ', '\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                            \n                                        <div class="row">\n                                            <div class="col-md-3">\n                                                <div class="form-group">\n                                                    <label for="Cod_Producto">Moneda</label>\n                                                    <select class="form-control" id="Cod_Moneda">                                                        ', '\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-6">\n                                                <div class="form-group">\n                                                    <label for="Cod_Producto">Monto</label>\n                                                    <input type="number" class="form-control required" id="Monto" onkeypress=', '>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-3 text-center" id="formBancoITF" style="display:none">\n                                                <div class="checkbox">\n                                                    <label>\n                                                        <input type="checkbox" id="optITF" name="optITF" onclick=', '> Con ITF? 0.005%\n                                                    </label>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                        \n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <div class="form-group">\n                                                    <label for="Comentario">Comentario</label>\n                                                    <textarea type="text" style="text-transform:uppercase" class="form-control" id="Comentario" placeholder="Ingrese un comentario"></textarea>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnGuardar" onclick=', '>Guardar</button>\n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog ">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Transferencias entre cajas</strong></h4>\n                </div>\n                <div class="modal-body"  id="modal_form">\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="row">\n                                <div id="modal_error" class="callout callout-danger hidden">\n                                    <p> Es necesario llenar los campos marcados con rojo</p>\n                                </div>\n                            </div>\n\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="form-group">\n                                        <label for="Cajero">Cajero</label>\n                                        <h4 type="text" class="form-control" id="Cajero"></h4>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="form-group">\n                                        <label for="Cod_CajaOrigen">Caja</label>\n                                        <select class="form-control" id="Cod_CajaOrigen" disabled>\n                                            ', '\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="form-group">\n                                        <label for="Fecha">Fecha</label>\n                                        <input type="date" class="form-control required" id="Fecha" placeholder=\'dd/mm/aaaa\' value=', '>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="row">\n                                <div class="panel panel-default">\n                                    <div class="panel-heading">Destino y Monto</div>\n                                    <div class="panel-body">\n                                        <div class="row">\n                                            <div class="col-md-3">\n                                                <div class="radio">\n                                                    <label>\n                                                        <input type="radio" value="b" id="optEnvios" name="optEnvios" onclick=', '> Banco\n                                                    </label>\n                                                </div>\n                                            </div>\n\n                                            <div class="col-md-9" id="formBanco" style="display:none"> \n                                                <div class="col-md-6">\n                                                    <div class="form-group">\n                                                        <select class="form-control" id="Cod_Cuenta_Bancaria">\n                                                            ', '\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                \n                                                <div class="col-md-6">\n                                                    <div class="form-group">\n                                                        <label class="sr-only" for="NroOperacion">Nro Op.</label>\n                                                        <input type="text" class="form-control" id="NroOperacion">\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class="row">\n                                            <div class="col-md-3">\n                                                <div class="radio">\n                                                    <label>\n                                                        <input type="radio" value="c" id="optEnvios" name="optEnvios" checked onclick=', '> Caja\n                                                    </label>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-9" id="formCaja">\n                                                <div class="form-group">\n                                                    <select class="form-control required" id="Cod_CajaDestino">\n                                                        ', '\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                            \n                                        <div class="row">\n                                            <div class="col-md-3">\n                                                <div class="form-group">\n                                                    <label for="Cod_Producto">Moneda</label>\n                                                    <select class="form-control" id="Cod_Moneda">\\\n                                                        ', '\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-6">\n                                                <div class="form-group">\n                                                    <label for="Cod_Producto">Monto</label>\n                                                    <input type="number" class="form-control required" id="Monto" onkeypress=', '>\n                                                </div>\n                                            </div>\n                                            <div class="col-md-3 text-center" id="formBancoITF" style="display:none">\n                                                <div class="checkbox">\n                                                    <label>\n                                                        <input type="checkbox" id="optITF" name="optITF" onclick=', '> Con ITF? 0.005%\n                                                    </label>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                        \n                                        <div class="row">\n                                            <div class="col-md-12">\n                                                <div class="form-group">\n                                                    <label for="Comentario">Comentario</label>\n                                                    <textarea type="text" style="text-transform:uppercase" class="form-control" id="Comentario" placeholder="Ingrese un comentario"></textarea>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnGuardar" onclick=', '>Guardar</button>\n                </div>\n            </div>\n        </div>']),
    _templateObject2 = _taggedTemplateLiteral(['\n                                                <option value="', '" ', '>', '</option>\n                                            '], ['\n                                                <option value="', '" ', '>', '</option>\n                                            ']),
    _templateObject3 = _taggedTemplateLiteral(['<option style="text-transform:uppercase" value="', '">', '</option>'], ['<option style="text-transform:uppercase" value="', '">', '</option>']);

var _constantes = require('../../../constantes_entorno/constantes');

var _movimientos_caja = require('../../movimientos_caja');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');

function Ver(_escritura, variables, fecha_actual, caja_actual) {
    var el = yo(_templateObject, variables.cajas.map(function (e) {
        return yo(_templateObject2, e.Cod_Caja, e.Cod_Caja == caja_actual.Cod_Caja ? 'selected' : '', e.Des_Caja);
    }), fecha_actual, function () {
        return CambioRadios();
    }, variables.cuentas_bancarias.map(function (e) {
        return yo(_templateObject3, e.Cod_CuentaBancaria, e.Des_CuentaBancaria);
    }), function () {
        return CambioRadios();
    }, variables.cajas_diferentes.map(function (e) {
        return yo(_templateObject3, e.Cod_Caja, e.Des_Caja);
    }), variables.monedas.map(function (e) {
        return yo(_templateObject3, e.Cod_Moneda, e.Nom_Moneda);
    }), function () {
        return CalcularITF();
    }, function () {
        return CalcularITF();
    }, function () {
        return GuardarEnvio(variables);
    });

    var modal_proceso = document.getElementById('modal-proceso');
    empty(modal_proceso).appendChild(el);
    $('#modal-proceso').modal();
    $('#Cajero').text($('p#nick').text());
}

function CalcularITF() {
    $("#optITF").attr("data-value", "");
    if ($("#optITF").is(":checked")) {
        if ($.trim($("#Monto").val()).length > 0) {
            var ITF = parseFloat($("#Monto").val()) * 0.00005;
            $("#optITF").attr("data-value", ITF.toString() + ".000");
            if (parseInt($("#optITF").attr("data-value").substring($("#optITF").attr("data-value").length - 2, 1)) >= 5) {
                $("#optITF").attr("data-value", $("#optITF").attr("data-value").substring(0, $("#optITF").attr("data-value").length - 2) + "5");
            } else {
                $("#optITF").attr("data-value", $("#optITF").attr("data-value").substring(0, $("#optITF").attr("data-value").length - 2) + "0");
            }
        }
    }
}

function CambioRadios() {
    if ($('input[name=optEnvios]:checked').val() == 'b') {
        $("#formBanco").show();
        $("#formBancoITF").show();
        $("#formCaja").hide();
        $("#Cod_CajaDestino").removeClass("required");
        $("#Cod_Cuenta_Bancaria").addClass("required");
        $("#NroOperacion").addClass("required");
    } else {
        $("#formBanco").hide();
        $("#formBancoITF").hide();
        $("#formCaja").show();
        $("#Cod_CajaDestino").addClass("required");
        $("#Cod_Cuenta_Bancaria").removeClass("required");
        $("#NroOperacion").removeClass("required");
    }
}

function GuardarEnvio(variables) {
    if (ValidacionCampos("modal_error", "modal_form")) {

        run_waitMe($('#modal-proceso'), 1, "ios", "Registrando operaciÃ³n...");
        var Cod_Caja = '100'; //caja.Cod_Caja
        var Cod_Turno = 'T0002';
        var Id_Concepto = 11000;
        var Id_ClienteProveedor = 0;
        var Cliente = null;
        var ClienteMov = null;
        if ($('input[name=optEnvios]:checked').val() == "b") {
            Cliente = $("#Cod_Cuenta_Bancaria option:selected").text();
            ClienteMov = "PARA : " + $("#Cod_Cuenta_Bancaria option:selected").val() + " : " + $("#NroOperacion").val() + " , " + $("#Comentario").val();
        } else {
            Cliente = $("#Cod_CajaDestino option:selected").text();
            ClienteMov = "PARA : " + $("#Cod_CajaDestino option:selected").text() + " , " + $("#Comentario").val();
        }
        var Des_Movimiento = ClienteMov;
        var Fecha = $("#Fecha").val();
        var Cod_MonedaEgr = $("#Cod_Moneda").val();
        var Cod_MonedaIng = $("#Cod_Moneda").val();
        var Fecha_Aut = $("#Fecha").val();
        var Serie = variables.serie[0].Serie;
        var Tipo_Cambio = 1;
        var Ingreso = 0;
        var Egreso = $("#Monto").val();
        var Flag_Extornado = 0;
        var Id_MovimientoRef = 0;

        if ($('input[name=optEnvios]:checked').val() == 'c') {

            GuardarMovEgresoCaja(Cod_Caja, Cod_Turno, Id_Concepto, Id_ClienteProveedor, Cliente, Des_Movimiento, Fecha, Cod_MonedaEgr, Cod_MonedaIng, Fecha_Aut, Serie, Tipo_Cambio, Ingreso, Egreso, Flag_Extornado, Id_MovimientoRef, variables);
        } else {

            GuardarMovEgresoBanco(Cod_Caja, Cod_Turno, Id_Concepto, Id_ClienteProveedor, Cliente, Des_Movimiento, Fecha, Cod_MonedaEgr, Cod_MonedaIng, Fecha_Aut, Serie, Tipo_Cambio, Ingreso, Egreso, Flag_Extornado, Id_MovimientoRef, variables);
        }
    }
}

function GuardarMovEgresoBanco(Cod_Caja, Cod_Turno, Id_Concepto, Id_ClienteProveedor, Cliente, Des_Movimiento, Fecha, Cod_MonedaEgr, Cod_MonedaIng, Fecha_Aut, Serie, Tipo_Cambio, Ingreso, Egreso, Flag_Extornado, Id_MovimientoRef, variables) {

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Cod_Caja: Cod_Caja,
            Cod_Turno: Cod_Turno,
            Id_Concepto: Id_Concepto,
            Id_ClienteProveedor: Id_ClienteProveedor,
            Cliente: Cliente,
            Des_Movimiento: Des_Movimiento,
            Fecha: Fecha,
            Cod_MonedaIng: Cod_MonedaIng,
            Cod_MonedaEgr: Cod_MonedaEgr,
            Fecha_Aut: Fecha_Aut,
            Serie: Serie,
            Tipo_Cambio: Tipo_Cambio,
            Ingreso: Ingreso,
            Egreso: Egreso,
            Flag_Extornado: Flag_Extornado
        })
    };
    fetch(_constantes.URL + '/envios_api/guardar_movimientos_egreso_caja', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            GuardarMovCuentaBancaria(variables);
        } else {
            $('#modal-proceso').waitMe('hide');
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#modal-proceso').waitMe('hide');
    });
}

function GuardarMovCuentaBancaria(variables) {
    var Id_MovimientoCuenta = -1;
    var Cod_CuentaBancaria = $("#Cod_Cuenta_Bancaria").val();
    var Nro_Operacion = $("#NroOperacion").val();
    var Des_Movimiento = 'DEPOSITO EN EFECTIVO';
    var Cod_TipoOperacionBancaria = '001';
    var Fecha = $("#Fecha").val();
    var Monto = $("#Monto").val();
    var TipoCambio = 1;
    var Cod_Caja = '100';
    var Cod_Turno = 'T0002';
    var Nro_Cheque = '';
    var Beneficiario = '';
    var Id_ComprobantePago = 0;
    var Obs_Movimiento = $("#Comentario").val();
    var Cod_Plantilla = null;
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Id_MovimientoCuenta: Id_MovimientoCuenta,
            Cod_CuentaBancaria: Cod_CuentaBancaria,
            Nro_Operacion: Nro_Operacion,
            Des_Movimiento: Des_Movimiento,
            Cod_TipoOperacionBancaria: Cod_TipoOperacionBancaria,
            Fecha: Fecha,
            Monto: Monto,
            TipoCambio: TipoCambio,
            Cod_Caja: Cod_Caja,
            Cod_Turno: Cod_Turno,
            Cod_Plantilla: Cod_Plantilla,
            Nro_Cheque: Nro_Cheque,
            Beneficiario: Beneficiario,
            Id_ComprobantePago: Id_ComprobantePago,
            Obs_Movimiento: Obs_Movimiento
        })
    };
    fetch(_constantes.URL + '/envios_api/guardar_movimientos_cuenta_bancaria', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            if ($("#optITF").is(":checked")) {
                Id_MovimientoCuenta = 0;
                Des_Movimiento = 'IMPUESTO ITF';
                Monto = -1 * parseFloat($("#optITF").attr("data-value"));
                Cod_TipoOperacionBancaria = '004';
                Nro_Operacion = parseInt($("#NroOperacion").val()) + 1;

                var _parametros = {
                    method: 'POST',
                    headers: {
                        Accept: 'application/json',
                        'Content-Type': 'application/json'
                    },
                    credentials: 'same-origin',
                    body: JSON.stringify({
                        Id_MovimientoCuenta: Id_MovimientoCuenta,
                        Cod_CuentaBancaria: Cod_CuentaBancaria,
                        Nro_Operacion: Nro_Operacion,
                        Des_Movimiento: Des_Movimiento,
                        Cod_TipoOperacionBancaria: Cod_TipoOperacionBancaria,
                        Fecha: Fecha,
                        Monto: Monto,
                        TipoCambio: TipoCambio,
                        Cod_Caja: Cod_Caja,
                        Cod_Turno: Cod_Turno,
                        Cod_Plantilla: Cod_Plantilla,
                        Nro_Cheque: Nro_Cheque,
                        Beneficiario: Beneficiario,
                        Id_ComprobantePago: Id_ComprobantePago,
                        Obs_Movimiento: Obs_Movimiento
                    })
                };

                fetch(_constantes.URL + '/envios_api/guardar_movimientos_cuenta_bancaria', _parametros).then(function (req) {
                    return req.json();
                }).then(function (res) {
                    $('#modal-proceso').modal('hide');
                    $('#modal-proceso').waitMe('hide');
                    if (res.respuesta == 'ok') {
                        toastr.success('Se registro correctamente el movimiento', 'Confirmacion', { timeOut: 5000 });
                        (0, _movimientos_caja.refrescar_movimientos)();
                    } else {
                        toastr.error('No se pudo registrar correctamente el movimiento', 'Error', { timeOut: 5000 });
                    }
                }).catch(function (e) {
                    console.log(e);
                    toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                    $('#modal-proceso').waitMe('hide');
                });
            } else {
                $('#modal-proceso').modal('hide');
                $('#modal-proceso').waitMe('hide');
            }
        } else {
            toastr.error('No se pudo registrar correctamente el movimiento', 'Error', { timeOut: 5000 });
            $('#modal-proceso').waitMe('hide');
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#modal-proceso').waitMe('hide');
    });
}

function GuardarMovEgresoCaja(Cod_Caja, Cod_Turno, Id_Concepto, Id_ClienteProveedor, Cliente, Des_Movimiento, Fecha, Cod_MonedaEgr, Cod_MonedaIng, Fecha_Aut, Serie, Tipo_Cambio, Ingreso, Egreso, Flag_Extornado, Id_MovimientoRef, variables) {

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Cod_Caja: Cod_Caja,
            Cod_Turno: Cod_Turno,
            Id_Concepto: Id_Concepto,
            Id_ClienteProveedor: Id_ClienteProveedor,
            Cliente: Cliente,
            Des_Movimiento: Des_Movimiento,
            Fecha: Fecha,
            Cod_MonedaIng: Cod_MonedaIng,
            Cod_MonedaEgr: Cod_MonedaEgr,
            Fecha_Aut: Fecha_Aut,
            Serie: Serie,
            Tipo_Cambio: Tipo_Cambio,
            Ingreso: Ingreso,
            Egreso: Egreso,
            Flag_Extornado: Flag_Extornado,
            Obs_Movimiento: null
        })
    };
    fetch(_constantes.URL + '/envios_api/guardar_movimientos_egreso_caja', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            Cod_Caja = $("#Cod_CajaDestino").val();
            Cod_Turno = null;
            Id_Concepto = 11000;
            Id_ClienteProveedor = 0;
            Cliente = $("#Cod_CajaOrigen option:selected").text();
            Des_Movimiento = "DE : " + $("#Cod_CajaOrigen option:selected").text() + "," + $("#Comentario").val();
            Fecha = $("#Fecha").val();
            Cod_MonedaEgr = $("#Cod_Moneda").val();
            Cod_MonedaIng = $("#Cod_Moneda").val();
            Fecha_Aut = $("#Fecha").val();
            Serie = variables.serie[0].Serie;
            Tipo_Cambio = 1;
            Ingreso = $("#Monto").val();
            Egreso = 0;
            Flag_Extornado = 0;
            Id_MovimientoRef = res.data;
            GuardarMovIngresoOtraCaja(Cod_Caja, Cod_Turno, Id_Concepto, Id_ClienteProveedor, Cliente, Des_Movimiento, Fecha, Cod_MonedaEgr, Cod_MonedaIng, Fecha_Aut, Serie, Tipo_Cambio, Ingreso, Egreso, Flag_Extornado, Id_MovimientoRef, variables);
        } else {
            toastr.error('No se pudo registrar correctamente el movimiento', 'Error', { timeOut: 5000 });
            $('#modal-proceso').waitMe('hide');
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#modal-proceso').waitMe('hide');
    });
}

function GuardarMovIngresoOtraCaja(Cod_Caja, Cod_Turno, Id_Concepto, Id_ClienteProveedor, Cliente, Des_Movimiento, Fecha, Cod_MonedaEgr, Cod_MonedaIng, Fecha_Aut, Serie, Tipo_Cambio, Ingreso, Egreso, Flag_Extornado, Id_MovimientoRef, variables) {

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Cod_Caja: Cod_Caja,
            Cod_Turno: Cod_Turno,
            Id_Concepto: Id_Concepto,
            Id_ClienteProveedor: Id_ClienteProveedor,
            Cliente: Cliente,
            Des_Movimiento: Des_Movimiento,
            Fecha: Fecha,
            Cod_MonedaIng: Cod_MonedaIng,
            Cod_MonedaEgr: Cod_MonedaEgr,
            Fecha_Aut: Fecha_Aut,
            Serie: Serie,
            Tipo_Cambio: Tipo_Cambio,
            Ingreso: Ingreso,
            Egreso: Egreso,
            Flag_Extornado: Flag_Extornado,
            Id_MovimientoRef: Id_MovimientoRef
        })
    };
    fetch(_constantes.URL + '/envios_api/guardar_movimientos_ingreso_otra_caja', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        $('#modal-proceso').modal('hide');
        $('#modal-proceso').waitMe('hide');
        if (res.respuesta == 'ok') {
            toastr.success('Se registro correctamente el movimiento', 'Confirmacion', { timeOut: 5000 });
            (0, _movimientos_caja.refrescar_movimientos)();
        } else {
            toastr.error('No se pudo registrar correctamente el movimiento', 'Error', { timeOut: 5000 });
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#modal-proceso').waitMe('hide');
    });
}

function NuevoEnvioEfectivo(_escritura, caja) {
    run_waitMe($('#main-contenido'), 1, "ios");
    var Cod_Caja = '100'; //caja.Cod_Caja
    var Cod_Sucursal = '0001';
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_Caja: Cod_Caja,
            Cod_Sucursal: Cod_Sucursal
        })
    };
    fetch(_constantes.URL + '/envios_api/get_cajas_envios', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        var variables = res.data;
        if (res.respuesta == 'ok') {
            var fecha = new Date();
            var mes = fecha.getMonth() + 1;
            var dia = fecha.getDate();
            var fecha_format = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);
            Ver(_escritura, variables, fecha_format, res.caja);
        } else {}
        $('#main-contenido').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#main-contenido').waitMe('hide');
    });
}

exports.NuevoEnvioEfectivo = NuevoEnvioEfectivo;

},{"../../../constantes_entorno/constantes":377,"../../movimientos_caja":398,"empty-element":338,"yo-yo":375}],392:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.VentaCompleta = exports.VentaSimple = exports.NuevaVenta = undefined;

var _templateObject = _taggedTemplateLiteral(['\n        <li class="" onclick=', '><a href="#tab_', '" data-toggle="tab" aria-expanded="false" id="id_', '">Ventas <button style="padding-left: 10px;" type="button" class="close" onclick=', '><span aria-hidden="true"> \xD7</span></button></a></li>'], ['\n        <li class="" onclick=', '><a href="#tab_', '" data-toggle="tab" aria-expanded="false" id="id_', '">Ventas <button style="padding-left: 10px;" type="button" class="close" onclick=', '><span aria-hidden="true"> \xD7</span></button></a></li>']),
    _templateObject2 = _taggedTemplateLiteral(['\n        <div class="tab-pane" id="tab_', '">\n            <div class="row">\n                <div class="col-md-9">\n                    <span class="badge bg-red" style="margin-bottom:  4px;"> Favoritos</span>\n                    <div class="scroll-horizontal">\n                        ', ' \n                    </div>\n                </div>\n                <div class="col-md-3">\n                    <div class="btn-group-horizontal pull-right" style="padding-top:  20px;">\n                        <button type="button" class="btn bg-green" onclick=', '>Venta Simple</button>\n                        <button type="button" class="btn bg-olive" onclick=', '>Venta Completa</button>\n                    </div>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-md-3">\n                    <div class="box box-success box-solid" id="div-cliente">\n                        <div class="box-header with-border text-center">\n                            <h4>Datos del cliente</h4>\n                        </div>\n                        <div class="box-body">\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="form-group">\n                                        <select class="form-control" id="Cod_TipoDoc_', '">\n                                            ', '\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="form-group">\n                                        <input type="text" id="Nro_Documento_', '" onblur="', '" class="form-control">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="form-group">\n                                        <label>Nombres completos</label>\n                                        <div class="input-group">\n                                            <div class="input-group-btn">\n                                                <button type="button" id="AgregarCliente" class="btn btn-success" onclick=', '>\n                                                    <i class="fa fa-plus"></i>\n                                                </button>\n                                            </div>\n                                            <input type="text" id="Cliente_', '" class="form-control" data-id=null>\n                                            <div class="input-group-btn">\n                                                <button type="button" id="BuscarCliente" class="btn btn-info" onclick=', '>\n                                                    <i class="fa fa-search"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <p></p>\n                            <div class="row">\n                                <div class="col-md-12"> \n                                    <div class="form-group">\n                                        <label>Direccion</label>\n                                        <input type="text" class="form-control" id="Direccion_', '">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="box-footer">\n\n                            <div class="row">\n                                <div class="col-sm-6">\n                                    \n                                    <div class="row">\n                                        <div class="col-md-12"> \n                                                ', '\n                                             \n                                        </div>\n                                    </div>\n\n                                    ', '\n                                                \n                                </div>\n                                <div class="col-sm-6">\n                                   \n                                    <div class="row">\n                                         \n                                        <div class="cc-selector-2 text-center row" id="divTarjetas_', '"> \n                                            <label> Tarjetas </label>\n                                            ', '\n                                                \n                                        </div>\n\n                                        ', '\n                                            \n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-md-9">\n                    <div class="box box-success box-solid">\n                        <div class="box-header with-border text-center">\n                            <h4>Detalle de la venta</h4>\n                        </div>\n                        <div class="box-body">\n\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="col-md-8">\n                                        <div class="form-group">\n                                            <label>Codigo/Nombres Producto</label>\n                                            <input type="text" class="form-control" id="txtBusqueda_', '" onblur=', ' onkeypress=', '>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-2">\n                                        <div class="form-group">\n                                            <label>Precio</label>\n                                            <select class="form-control" id="Cod_Precio_', '">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-2">\n                                        <div class="form-group">\n                                            <label>Almacen</label>\n                                            <select class="form-control" id="Cod_Almacen_', '">\n                                                <option value="">Seleccione un almacen</option>\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div> \n                                </div>\n                            </div> \n                            \n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="table-responsive">\n                                        <table class="table table-bordered table-hover">\n                                            <thead>\n                                                <tr> \n                                                    <th>Codigo</th>\n                                                    <th>Producto</th>\n                                                    <th>Cantidad</th>\n                                                    <th>Precio Unitario</th>\n                                                    <th>Descuento(%)</th>\n                                                    <th>SubTotal</th>\n                                                    <th>Acciones</th>\n                                                </tr>\n                                            </thead>\n                                            \n                                            <tfoot>\n                                                <tr>\n                                                    <td></td>\n                                                    <td></td>\n                                                    <td></td>\n                                                    <td></td>\n                                                    <td><button class="btn btn-default btn-lg" id="btnDescuentos_', '" style="display:none"><i class="fa fa-arrow-circle-down text-red"></i>TOTAL DESCUENTOS: 0.00</button></td>\n                                                    <td><button class="btn btn-default btn-lg" id="btnTotal_', '" data-toggle="button" aria-pressed="false" autocomplete="off" onclick=', '><i class="fa fa-money text-green"></i></button></td>\n                                                    <td><button class="btn btn-default btn-lg" id="btnConversion_', '" style="display:none"><i class="fa fa-refresh text-green"></i></button></td>\n                                                </tr>\n                                            </tfoot>\n\n                                            <tbody id="tablaBodyProductosVentas_', '">\n                                            </tbody> \n                                        </table>\n                                    </div>\n                                </div>\n                                                        \n                            </div>\n                            \n\n                        </div>\n                        <div class="box-footer" id="divFooter_', '">\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="box box-warning">\n                                        <div class="box-header with-border">\n                                            <h3 class="box-title" style="margin-left:20px">Productos</h3>\n                                            \n                                            <div class="box-tools" style="left: 10px;display:none" id="divTools_', '">\n                                                <button type="button" class="btn btn-box-tool" onclick=', '><i class="fa fa-arrow-left"></i></button>\n                                            </div>\n\n                                        </div>\n                                        <div class="box-body" id="divProductos_', '">\n                                            ', '\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>'], ['\n        <div class="tab-pane" id="tab_', '">\n            <div class="row">\n                <div class="col-md-9">\n                    <span class="badge bg-red" style="margin-bottom:  4px;"> Favoritos</span>\n                    <div class="scroll-horizontal">\n                        ', ' \n                    </div>\n                </div>\n                <div class="col-md-3">\n                    <div class="btn-group-horizontal pull-right" style="padding-top:  20px;">\n                        <button type="button" class="btn bg-green" onclick=', '>Venta Simple</button>\n                        <button type="button" class="btn bg-olive" onclick=', '>Venta Completa</button>\n                    </div>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-md-3">\n                    <div class="box box-success box-solid" id="div-cliente">\n                        <div class="box-header with-border text-center">\n                            <h4>Datos del cliente</h4>\n                        </div>\n                        <div class="box-body">\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="form-group">\n                                        <select class="form-control" id="Cod_TipoDoc_', '">\n                                            ', '\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="form-group">\n                                        <input type="text" id="Nro_Documento_', '" onblur="', '" class="form-control">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="form-group">\n                                        <label>Nombres completos</label>\n                                        <div class="input-group">\n                                            <div class="input-group-btn">\n                                                <button type="button" id="AgregarCliente" class="btn btn-success" onclick=', '>\n                                                    <i class="fa fa-plus"></i>\n                                                </button>\n                                            </div>\n                                            <input type="text" id="Cliente_', '" class="form-control" data-id=null>\n                                            <div class="input-group-btn">\n                                                <button type="button" id="BuscarCliente" class="btn btn-info" onclick=', '>\n                                                    <i class="fa fa-search"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <p></p>\n                            <div class="row">\n                                <div class="col-md-12"> \n                                    <div class="form-group">\n                                        <label>Direccion</label>\n                                        <input type="text" class="form-control" id="Direccion_', '">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="box-footer">\n\n                            <div class="row">\n                                <div class="col-sm-6">\n                                    \n                                    <div class="row">\n                                        <div class="col-md-12"> \n                                                ', '\n                                             \n                                        </div>\n                                    </div>\n\n                                    ', '\n                                                \n                                </div>\n                                <div class="col-sm-6">\n                                   \n                                    <div class="row">\n                                         \n                                        <div class="cc-selector-2 text-center row" id="divTarjetas_', '"> \n                                            <label> Tarjetas </label>\n                                            ', '\n                                                \n                                        </div>\n\n                                        ', '\n                                            \n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-md-9">\n                    <div class="box box-success box-solid">\n                        <div class="box-header with-border text-center">\n                            <h4>Detalle de la venta</h4>\n                        </div>\n                        <div class="box-body">\n\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="col-md-8">\n                                        <div class="form-group">\n                                            <label>Codigo/Nombres Producto</label>\n                                            <input type="text" class="form-control" id="txtBusqueda_', '" onblur=', ' onkeypress=', '>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-2">\n                                        <div class="form-group">\n                                            <label>Precio</label>\n                                            <select class="form-control" id="Cod_Precio_', '">\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class="col-md-2">\n                                        <div class="form-group">\n                                            <label>Almacen</label>\n                                            <select class="form-control" id="Cod_Almacen_', '">\n                                                <option value="">Seleccione un almacen</option>\n                                                ', '\n                                            </select>\n                                        </div>\n                                    </div> \n                                </div>\n                            </div> \n                            \n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="table-responsive">\n                                        <table class="table table-bordered table-hover">\n                                            <thead>\n                                                <tr> \n                                                    <th>Codigo</th>\n                                                    <th>Producto</th>\n                                                    <th>Cantidad</th>\n                                                    <th>Precio Unitario</th>\n                                                    <th>Descuento(%)</th>\n                                                    <th>SubTotal</th>\n                                                    <th>Acciones</th>\n                                                </tr>\n                                            </thead>\n                                            \n                                            <tfoot>\n                                                <tr>\n                                                    <td></td>\n                                                    <td></td>\n                                                    <td></td>\n                                                    <td></td>\n                                                    <td><button class="btn btn-default btn-lg" id="btnDescuentos_', '" style="display:none"><i class="fa fa-arrow-circle-down text-red"></i>TOTAL DESCUENTOS: 0.00</button></td>\n                                                    <td><button class="btn btn-default btn-lg" id="btnTotal_', '" data-toggle="button" aria-pressed="false" autocomplete="off" onclick=', '><i class="fa fa-money text-green"></i></button></td>\n                                                    <td><button class="btn btn-default btn-lg" id="btnConversion_', '" style="display:none"><i class="fa fa-refresh text-green"></i></button></td>\n                                                </tr>\n                                            </tfoot>\n\n                                            <tbody id="tablaBodyProductosVentas_', '">\n                                            </tbody> \n                                        </table>\n                                    </div>\n                                </div>\n                                                        \n                            </div>\n                            \n\n                        </div>\n                        <div class="box-footer" id="divFooter_', '">\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <div class="box box-warning">\n                                        <div class="box-header with-border">\n                                            <h3 class="box-title" style="margin-left:20px">Productos</h3>\n                                            \n                                            <div class="box-tools" style="left: 10px;display:none" id="divTools_', '">\n                                                <button type="button" class="btn btn-box-tool" onclick=', '><i class="fa fa-arrow-left"></i></button>\n                                            </div>\n\n                                        </div>\n                                        <div class="box-body" id="divProductos_', '">\n                                            ', '\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>']),
    _templateObject3 = _taggedTemplateLiteral(['<option style="text-transform:uppercase" value="', '">', '</option>'], ['<option style="text-transform:uppercase" value="', '">', '</option>']),
    _templateObject4 = _taggedTemplateLiteral(['\n                                                    ', '\n                                                '], ['\n                                                    ', '\n                                                ']),
    _templateObject5 = _taggedTemplateLiteral(['<div class="form-group">\n                                                                <label>Moneda</label> \n                                                                <select id=\'Cod_Moneda_Forma_Pago_', '\' class="form-control" onchange=', '>\n                                                                    ', '\n                                                                </select>\n                                                            </div>'], ['<div class="form-group">\n                                                                <label>Moneda</label> \n                                                                <select id=\'Cod_Moneda_Forma_Pago_', '\' class="form-control" onchange=', '>\n                                                                    ', '\n                                                                </select>\n                                                            </div>']),
    _templateObject6 = _taggedTemplateLiteral(['<option value=', '>', '</option>'], ['<option value=', '>', '</option>']),
    _templateObject7 = _taggedTemplateLiteral([''], ['']),
    _templateObject8 = _taggedTemplateLiteral(['\n                                                ', '\n                                            '], ['\n                                                ', '\n                                            ']),
    _templateObject9 = _taggedTemplateLiteral(['\n                                                    <div class="row">\n                                                        <div class="col-md-12">\n                                                            <input  checked="checked" id="Cod_FormaPago_MasterCard_', '" type="radio" name="Cod_FormaPago_Modal_', '" value="mastercard"  onchange=', '/>\n                                                            <label class="drinkcard-cc mastercard" for="Cod_FormaPago_Modal_', '"></label>\n                                                        </div>\n                                                    </div>'], ['\n                                                    <div class="row">\n                                                        <div class="col-md-12">\n                                                            <input  checked="checked" id="Cod_FormaPago_MasterCard_', '" type="radio" name="Cod_FormaPago_Modal_', '" value="mastercard"  onchange=', '/>\n                                                            <label class="drinkcard-cc mastercard" for="Cod_FormaPago_Modal_', '"></label>\n                                                        </div>\n                                                    </div>']),
    _templateObject10 = _taggedTemplateLiteral(['\n                                                    <div class="row">\n                                                        <div class="col-md-12">\n                                                            <input  checked="checked" id="Cod_FormaPago_Visa_', '" type="radio" name="Cod_FormaPago_Modal_', '" value="visa" onchange=', '/>\n                                                            <label class="drinkcard-cc visa" for="Cod_FormaPago_Modal_', '"></label>\n                                                        </div>\n                                                    </div>'], ['\n                                                    <div class="row">\n                                                        <div class="col-md-12">\n                                                            <input  checked="checked" id="Cod_FormaPago_Visa_', '" type="radio" name="Cod_FormaPago_Modal_', '" value="visa" onchange=', '/>\n                                                            <label class="drinkcard-cc visa" for="Cod_FormaPago_Modal_', '"></label>\n                                                        </div>\n                                                    </div>']),
    _templateObject11 = _taggedTemplateLiteral(['\n                            <tr id="', '">\n                                <td class="Cod_Producto">', '</td> \n                                <td class="Flag_Stock hidden">', '</td> \n                                <td class="Nom_Producto" style="width: 30%;">', '</td> \n                                <td class="Cantidad"><input type="number" class="form-control input-sm" value="1.0000" onblur=', ' onchange=', '></td>\n                                <td class="Unitario hidden">', '</td>\n                                <td class="UnitarioBase"><input type="number" class="form-control input-sm" value=', ' onchange=', '></td> \n                                <td class="Descuentos"><input type="number" class="form-control input-sm" value="0.00" onchange=', '></td>\n                                <td class="DescuentoUnitario hidden">0</td> \n                                <td class="DescuentoTotal hidden">0</td> \n                                <td class="Precio">', '</td>\n                                <td>\n                                    <div style="display:flex;"> \n                                        <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n                                    </div>\n                                </td>\n                            </tr>'], ['\n                            <tr id="', '">\n                                <td class="Cod_Producto">', '</td> \n                                <td class="Flag_Stock hidden">', '</td> \n                                <td class="Nom_Producto" style="width: 30%;">', '</td> \n                                <td class="Cantidad"><input type="number" class="form-control input-sm" value="1.0000" onblur=', ' onchange=', '></td>\n                                <td class="Unitario hidden">', '</td>\n                                <td class="UnitarioBase"><input type="number" class="form-control input-sm" value=', ' onchange=', '></td> \n                                <td class="Descuentos"><input type="number" class="form-control input-sm" value="0.00" onchange=', '></td>\n                                <td class="DescuentoUnitario hidden">0</td> \n                                <td class="DescuentoTotal hidden">0</td> \n                                <td class="Precio">', '</td>\n                                <td>\n                                    <div style="display:flex;"> \n                                        <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n                                    </div>\n                                </td>\n                            </tr>']),
    _templateObject12 = _taggedTemplateLiteral([' \n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="box box-warning">\n                                <div class="box-header with-border">\n                                    <h3 class="box-title" style="margin-left:20px">Productos</h3>\n                                    \n                                    <div class="box-tools" style="left: 10px;display:none" id="divTools_', '">\n                                        <button type="button" class="btn btn-box-tool" onclick=', '><i class="fa fa-arrow-left"></i></button>\n                                    </div>\n\n                                </div>\n                                <div class="box-body" id="divProductos_', '">\n                                    ', '\n                                </div>\n                            </div>\n                        </div>\n                    </div> '], [' \n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="box box-warning">\n                                <div class="box-header with-border">\n                                    <h3 class="box-title" style="margin-left:20px">Productos</h3>\n                                    \n                                    <div class="box-tools" style="left: 10px;display:none" id="divTools_', '">\n                                        <button type="button" class="btn btn-box-tool" onclick=', '><i class="fa fa-arrow-left"></i></button>\n                                    </div>\n\n                                </div>\n                                <div class="box-body" id="divProductos_', '">\n                                    ', '\n                                </div>\n                            </div>\n                        </div>\n                    </div> ']),
    _templateObject13 = _taggedTemplateLiteral([' \n                    <div class="row">              \n                        <div class="col-md-4 col-md-offset-4">\n                            <div class="box box-success">\n                                <div class="box-header with-border">\n                                    <h3 class="box-title">Vuelto Ideal</h3>\n                                </div>\n                                <div class="box-body">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <div class="form-group">\n                                                <label><h4 id="lbVuelto_', '" style="font-weight: bold;">Vuelto</h4></label>\n                                                <input type="number" style="color: #dd4b39;font-weight: bold;font-size: 25px;" id="Vuelto_', '" value="0.00" class="form-control" onblur=', '>\n                                            </div>\n                                        </div> \n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <div class="col-md-4" id="divUSD_', '">\n                                                <div class="form-group">\n                                                    <label style="font-weight: bold;" id="lbUSD_', '">USD:</label>\n                                                    <input type="text" style="color: #dd4b39;font-weight: bold;font-size: 25px;" value="0.00" id="USD_', '" class="form-control" onkeypress=', ' >\n                                                </div> \n                                            </div>\n                                            <div class="col-md-4" id="divTC_', '"> \n                                                <label id="laCambio_', '" style="margin-top: 30px;margin-left: -20px;">x T/C</label>\n                                            </div>\n                                            <div class="col-md-4" id="divPEN_', '">\n                                                <div class="form-group">\n                                                    <label style="font-weight: bold;" id="lbPEN_', '">PEN:</label>\n                                                    <input type="text" style="color: #dd4b39;font-weight: bold;font-size: 25px;" value="0.00" id="PEN_', '" class="form-control"  onkeypress=', ' >\n                                                </div> \n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-md-4">\n                            <div class="box box-success">\n                                <div class="box-body">\n                                    <div class="form-group">\n                                        <label id="lbTotalCobrar_', '" style="font-weight: bold;">Total a Cobrar</label>\n                                        <input type="number" id="TotalCobrar_', '" style="color: #1a2226;font-weight: bold;font-size: 25px;" value="0.00" class="form-control">\n                                    </div> \n                                    <div class="form-group">\n                                        <label id="lbTotalRecibidos_', '" style="font-weight: bold;">Total Recibidos</label>\n                                        <input type="number" id="TotalRecibidos_', '"  style="color: #1a2226;font-weight: bold;font-size: 25px;" value="0.00" class="form-control" onblur=', ' onkeypress=', '>\n                                    </div>\n                                    <div style="height: 1px;background: #00a65a;"></div> \n                                    <p></p>\n                                    <div class="form-group">\n                                        <label id="lbVueltoCalculado_', '" style="font-weight: bold;">Vuelto calculado</label>\n                                        <input type="text" id="VueltoCalculado_', '"  style="color: #1a2226;font-weight: bold;font-size: 25px;" value="0.00" class="form-control"  onkeypress=', ' >\n                                    </div>\n                                    <div class="form-group">\n                                        <button type="button" class="btn btn-success btn-xs" onclick=', '>Calcular</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div> '], [' \n                    <div class="row">              \n                        <div class="col-md-4 col-md-offset-4">\n                            <div class="box box-success">\n                                <div class="box-header with-border">\n                                    <h3 class="box-title">Vuelto Ideal</h3>\n                                </div>\n                                <div class="box-body">\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <div class="form-group">\n                                                <label><h4 id="lbVuelto_', '" style="font-weight: bold;">Vuelto</h4></label>\n                                                <input type="number" style="color: #dd4b39;font-weight: bold;font-size: 25px;" id="Vuelto_', '" value="0.00" class="form-control" onblur=', '>\n                                            </div>\n                                        </div> \n                                    </div>\n                                    <div class="row">\n                                        <div class="col-md-12">\n                                            <div class="col-md-4" id="divUSD_', '">\n                                                <div class="form-group">\n                                                    <label style="font-weight: bold;" id="lbUSD_', '">USD:</label>\n                                                    <input type="text" style="color: #dd4b39;font-weight: bold;font-size: 25px;" value="0.00" id="USD_', '" class="form-control" onkeypress=', ' >\n                                                </div> \n                                            </div>\n                                            <div class="col-md-4" id="divTC_', '"> \n                                                <label id="laCambio_', '" style="margin-top: 30px;margin-left: -20px;">x T/C</label>\n                                            </div>\n                                            <div class="col-md-4" id="divPEN_', '">\n                                                <div class="form-group">\n                                                    <label style="font-weight: bold;" id="lbPEN_', '">PEN:</label>\n                                                    <input type="text" style="color: #dd4b39;font-weight: bold;font-size: 25px;" value="0.00" id="PEN_', '" class="form-control"  onkeypress=', ' >\n                                                </div> \n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-md-4">\n                            <div class="box box-success">\n                                <div class="box-body">\n                                    <div class="form-group">\n                                        <label id="lbTotalCobrar_', '" style="font-weight: bold;">Total a Cobrar</label>\n                                        <input type="number" id="TotalCobrar_', '" style="color: #1a2226;font-weight: bold;font-size: 25px;" value="0.00" class="form-control">\n                                    </div> \n                                    <div class="form-group">\n                                        <label id="lbTotalRecibidos_', '" style="font-weight: bold;">Total Recibidos</label>\n                                        <input type="number" id="TotalRecibidos_', '"  style="color: #1a2226;font-weight: bold;font-size: 25px;" value="0.00" class="form-control" onblur=', ' onkeypress=', '>\n                                    </div>\n                                    <div style="height: 1px;background: #00a65a;"></div> \n                                    <p></p>\n                                    <div class="form-group">\n                                        <label id="lbVueltoCalculado_', '" style="font-weight: bold;">Vuelto calculado</label>\n                                        <input type="text" id="VueltoCalculado_', '"  style="color: #1a2226;font-weight: bold;font-size: 25px;" value="0.00" class="form-control"  onkeypress=', ' >\n                                    </div>\n                                    <div class="form-group">\n                                        <button type="button" class="btn btn-success btn-xs" onclick=', '>Calcular</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div> ']),
    _templateObject14 = _taggedTemplateLiteral(['\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"> Confirmacion </h4>\n            </div>\n            <div class="modal-body">\n                <p>Se ha introducido moneda extranjera pero\n\nno introdujo un total recibido.Desea continuar sin comprar moneda extranjera?</p>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                <button type="button" class="btn btn-primary" id="btnConfirmacion" onclick=', '>Aceptar</button>\n            </div>\n        </div>\n        <!-- /.modal-content -->\n    </div>'], ['\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title"> Confirmacion </h4>\n            </div>\n            <div class="modal-body">\n                <p>Se ha introducido moneda extranjera pero\\n\\nno introdujo un total recibido.Desea continuar sin comprar moneda extranjera?</p>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                <button type="button" class="btn btn-primary" id="btnConfirmacion" onclick=', '>Aceptar</button>\n            </div>\n        </div>\n        <!-- /.modal-content -->\n    </div>']),
    _templateObject15 = _taggedTemplateLiteral(['\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="form-group">\n                                <label>Tipo Cambio</label>\n                                <input type="number" class="form-control" value="1.00" id="Tipo_Cambio_Venta_', '" name="Tipo_Cambio_Venta_', '" onkeypress=', '>\n                            </div> \n                        </div>\n                    </div>'], ['\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="form-group">\n                                <label>Tipo Cambio</label>\n                                <input type="number" class="form-control" value="1.00" id="Tipo_Cambio_Venta_', '" name="Tipo_Cambio_Venta_', '" onkeypress=', '>\n                            </div> \n                        </div>\n                    </div>']),
    _templateObject16 = _taggedTemplateLiteral(['\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="form-group">\n                                <label>Nro Ref.</label>\n                                <input type="number" class="form-control" value="" id="Nro_Tarjeta_', '" name="Nro_Tarjeta_', '" >\n                            </div> \n                        </div>\n                    </div>'], ['\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="form-group">\n                                <label>Nro Ref.</label>\n                                <input type="number" class="form-control" value="" id="Nro_Tarjeta_', '" name="Nro_Tarjeta_', '" >\n                            </div> \n                        </div>\n                    </div>']),
    _templateObject17 = _taggedTemplateLiteral(['<div>\n            ', '\n            </div>'], ['<div>\n            ', '\n            </div>']),
    _templateObject18 = _taggedTemplateLiteral(['<a class="btn btn-app" onclick=', '>', '</a>'], ['<a class="btn btn-app" onclick=', '>', '</a>']),
    _templateObject19 = _taggedTemplateLiteral(['<ul> \n                ', '       \n            </ul>'], ['<ul> \n                ', '       \n            </ul>']),
    _templateObject20 = _taggedTemplateLiteral(['<li><a class="btn btn-block btn-social btn-default" onclick=', '><i class="fa fa-star text-orange"></i>  ', '</a></li>'], ['<li><a class="btn btn-block btn-social btn-default" onclick=', '><i class="fa fa-star text-orange"></i>  ', '</a></li>']),
    _templateObject21 = _taggedTemplateLiteral(['<div>\n                                            ', '\n                                        </div>'], ['<div>\n                                            ', '\n                                        </div>']),
    _templateObject22 = _taggedTemplateLiteral(['<a class="btn btn-app" style="height:80px">', '<p></p>', '</a>'], ['<a class="btn btn-app" style="height:80px">', '<p></p>', '</a>']),
    _templateObject23 = _taggedTemplateLiteral(['\n                                        <tr id="', '">\n                                            <td class="Cod_Producto">', '</td> \n                                            <td class="Flag_Stock hidden">', '</td> \n                                            <td class="Nom_Producto" style="width: 30%;">', '</td> \n                                            <td class="Cantidad"><input type="number" class="form-control input-sm" value="1.0000" onblur=', ' onchange=', '></td>\n                                            <td class="Unitario hidden">', '</td>\n                                            <td class="UnitarioBase"><input type="number" class="form-control input-sm" value=', ' onchange=', ' onkeypress=', '></td> \n                                            <td class="Descuentos"><input type="number" class="form-control input-sm" value="0.00" onchange=', '></td>\n                                            <td class="DescuentoUnitario hidden">0</td> \n                                            <td class="DescuentoTotal hidden">0</td> \n                                            <td class="Precio">', '</td>\n                                            <td>\n                                                <div style="display:flex;"> \n                                                    <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n                                                </div>\n                                            </td>\n                                        </tr>'], ['\n                                        <tr id="', '">\n                                            <td class="Cod_Producto">', '</td> \n                                            <td class="Flag_Stock hidden">', '</td> \n                                            <td class="Nom_Producto" style="width: 30%;">', '</td> \n                                            <td class="Cantidad"><input type="number" class="form-control input-sm" value="1.0000" onblur=', ' onchange=', '></td>\n                                            <td class="Unitario hidden">', '</td>\n                                            <td class="UnitarioBase"><input type="number" class="form-control input-sm" value=', ' onchange=', ' onkeypress=', '></td> \n                                            <td class="Descuentos"><input type="number" class="form-control input-sm" value="0.00" onchange=', '></td>\n                                            <td class="DescuentoUnitario hidden">0</td> \n                                            <td class="DescuentoTotal hidden">0</td> \n                                            <td class="Precio">', '</td>\n                                            <td>\n                                                <div style="display:flex;"> \n                                                    <button type="button" onclick="', '" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>\n                                                </div>\n                                            </td>\n                                        </tr>']);

var _constantes = require('../../../constantes_entorno/constantes');

var _modales = require('../../modales');

var _tools = require('../../../../utility/tools');

var _comprobante_pago = require('../../mod_compras/comprobante_pago');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');


var cantidad_tabs = 1;
var IdTabSeleccionado = null;
var arrayValidacion = [null, 'null', ''];

//var Total = 0
//var TotalDescuentos = 0
//var TipodeCambio = 1
//var _CantidadOriginal = null
//var SimboloMoneda = ''
//var SimboloMonedaExtra = ''

global.variablesVentas = [];

function VerNuevaVenta(variables, CodLibro) {
    cantidad_tabs++;
    var idTabVenta = cantidad_tabs;
    global.objClienteVenta = '';
    global.objProductoVentas = '';
    global.variablesVentas.push({ idTab: idTabVenta, Total: 0, TotalDescuentos: 0, TipodeCambio: 1, _CantidadOriginal: null, SimboloMoneda: '', SimboloMonedaExtra: '', Cod_FormaPago: null, Cliente: null, Detalles: [] });
    var tab = yo(_templateObject, function () {
        return TabVentaSeleccionado(idTabVenta);
    }, idTabVenta, idTabVenta, function () {
        return CerrarTabVenta(idTabVenta);
    });

    var tabContent = yo(_templateObject2, idTabVenta, CrearBotonesFavoritos(variables.favoritos, idTabVenta), function () {
        return VentaSimple();
    }, function () {
        return VentaCompleta();
    }, idTabVenta, variables.documentos.map(function (e) {
        return yo(_templateObject3, e.Cod_TipoDoc, e.Nom_TipoDoc);
    }), idTabVenta, function () {
        return BuscarClienteDoc(CodLibro, idTabVenta);
    }, function () {
        return (0, _modales.NuevoCliente)(variables.documentos);
    }, idTabVenta, function () {
        return (0, _modales.BuscarCliente)("Cliente_" + idTabVenta, "Nro_Documento_" + idTabVenta, null);
    }, idTabVenta, variables.formaspago.map(function (e) {
        return yo(_templateObject4, e.Cod_FormaPago == "008" ? yo(_templateObject5, idTabVenta, function () {
            return CambioMonedaVentas(idTabVenta);
        }, variables.monedas.map(function (m) {
            return yo(_templateObject6, m.Cod_Moneda, m.Nom_Moneda);
        })) : yo(_templateObject7));
    }), MostrarCampos(0, variables.formaspago, 1, idTabVenta), idTabVenta, variables.formaspago.map(function (e) {
        return yo(_templateObject8, e.Cod_FormaPago != "005" ? e.Cod_FormaPago != "006" ? yo(_templateObject7) : yo(_templateObject9, idTabVenta, idTabVenta, function () {
            return CambioMonedaFormaPagoMasterCard(idTabVenta);
        }, idTabVenta) : yo(_templateObject10, idTabVenta, idTabVenta, function () {
            return CambioMonedaFormaPagoVisa(idTabVenta);
        }, idTabVenta));
    }), MostrarCampos(0, variables.formaspago, 2, idTabVenta), idTabVenta, function () {
        return BuscarProductoCP(event, 'blur', idTabVenta);
    }, function () {
        return BuscarProductoCP(event, 'key', idTabVenta);
    }, idTabVenta, variables.precios.map(function (e) {
        return yo(_templateObject3, e.Cod_Precio, e.Nom_Precio);
    }), idTabVenta, variables.almacenes.map(function (e) {
        return yo(_templateObject3, e.Cod_Almacen, e.Des_Almacen);
    }), idTabVenta, idTabVenta, function () {
        return VerVuelto(variables, idTabVenta);
    }, idTabVenta, idTabVenta, idTabVenta, idTabVenta, function () {
        return CrearBotonesCategoriasXSeleccion(variables.categorias, '', idTabVenta);
    }, idTabVenta, CrearBotonesCategorias(variables.categorias, idTabVenta));

    $("#tabs").append(tab);
    $("#tabs_contents").append(tabContent);
    $("#id_" + idTabVenta).click();

    TraerSimboloSOLES(variables.monedas, 'PEN', idTabVenta);
    //CambioMonedaFormaPagoSoles(idTabVenta)
    //CambioMonedaFormaPagoDolares(idTabVenta)
    //CambioMonedaFormaPagoEuros(idTabVenta)
    CambioMonedaVentas(idTabVenta);
    CambioMonedaFormaPagoMasterCard(idTabVenta);
    CambioMonedaFormaPagoVisa(idTabVenta);

    $('#modal-superior').off('hidden.bs.modal').on('hidden.bs.modal', function () {

        if (global.objProductoVentas != '') {
            $("#txtBusqueda_" + IdTabSeleccionado).val("");

            ValidarStock(global.objProductoVentas.Stock_Act, global.objProductoVentas, IdTabSeleccionado, function (flag) {
                if (flag) {
                    ExisteProducto(global.objProductoVentas.Cod_Producto, IdTabSeleccionado, function (flag, index) {

                        if (flag) {

                            $('#tablaBodyProductosVentas_' + IdTabSeleccionado + ' tr:eq(' + index + ')').find('td.Cantidad').find('input').val((parseFloat($('#tablaBodyProductosVentas_' + IdTabSeleccionado + ' tr:eq(' + index + ')').find('td.Cantidad').find('input').val()) + 1).toFixed(2));
                            $('#tablaBodyProductosVentas_' + IdTabSeleccionado + ' tr:eq(' + index + ')').find('td.Precio').text((parseFloat($('#tablaBodyProductosVentas_' + IdTabSeleccionado + ' tr:eq(' + index + ')').find('td.Cantidad').find('input').val()) * parseFloat(global.objProductoVentas.Precio_Venta)).toFixed(2));
                            $('#tablaBodyProductosVentas_' + IdTabSeleccionado + ' tr:eq(' + index + ')').find('td.DescuentoTotal').text((parseFloat($('#tablaBodyProductosVentas_' + IdTabSeleccionado + ' tr:eq(' + index + ')').find('td.DescuentoUnitario').text()) * parseFloat($('#tablaBodyProductosVentas_' + IdTabSeleccionado + ' tr:eq(' + index + ')').find('td.Cantidad').find('input').val())).toFixed(2));

                            (0, _tools.changeDetallesArrayJsonVentas)(IdTabSeleccionado, $('#tablaBodyProductosVentas_' + IdTabSeleccionado + ' tr:eq(' + index + ')').find('td.Cod_Producto').text(), [null, null, null, null, null, null, null, null, $('#tablaBodyProductosVentas_' + IdTabSeleccionado + ' tr:eq(' + index + ')').find('td.Cantidad').find('input').val(), null, null, null, $('#tablaBodyProductosVentas_' + IdTabSeleccionado + ' tr:eq(' + index + ')').find('td.Precio').text(), null, null, null, null]);
                        } else {
                            //console.log(global.objProductoVentas)
                            var idFila = $('#tablaBodyProductosVentas_' + IdTabSeleccionado + ' > tr').length;
                            var fila = yo(_templateObject11, idFila + '' + IdTabSeleccionado, global.objProductoVentas.Cod_Producto, global.objProductoVentas.Flag_Stock, global.objProductoVentas.Nom_Producto, function () {
                                return FocusInOutCantidadVenta(idFila + '' + IdTabSeleccionado, IdTabSeleccionado);
                            }, function () {
                                return CambioCantidadVenta(idFila + '' + IdTabSeleccionado, IdTabSeleccionado);
                            }, global.objProductoVentas.Precio_Venta, global.objProductoVentas.Precio_Venta, function () {
                                return CambioPrecioDescuentos(idFila + '' + IdTabSeleccionado, IdTabSeleccionado);
                            }, function () {
                                return CambioPrecioDescuentos(idFila + '' + IdTabSeleccionado, IdTabSeleccionado);
                            }, global.objProductoVentas.Precio_Venta, function () {
                                return EliminarFila(idFila + '' + IdTabSeleccionado, IdTabSeleccionado);
                            });
                            $('#tablaBodyProductosVentas_' + IdTabSeleccionado).append(fila);

                            (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Detalles.push({
                                id_ComprobantePago: 0,
                                id_Detalle: 0,
                                Id_Producto: global.objProductoVentas.Id_Producto,
                                Codigo: global.objProductoVentas.Cod_Producto,
                                Descripcion: global.objProductoVentas.Nom_Producto,
                                Almacen: global.objProductoVentas.Cod_Almacen,
                                UM: global.objProductoVentas.Cod_UnidadMedida,
                                Stock: global.objProductoVentas.Stock_Act,
                                Cantidad: 1,
                                Despachado: 1,
                                PU: global.objProductoVentas.Precio_Venta,
                                Descuento: '0.00',
                                Importe: global.objProductoVentas.Precio_Venta,
                                Cod_Manguera: $("#Cod_Precio_" + IdTabSeleccionado).val(),
                                Tipo: global.objProductoVentas.Cod_TipoOperatividad,
                                Obs_ComprobanteD: '',
                                Series: [],
                                Nom_UnidadMedida: global.objProductoVentas.Nom_UnidadMedida,
                                Des_Almacen: global.objProductoVentas.Des_Almacen
                            });
                        }
                        CalcularTotal(IdTabSeleccionado);
                        CalcularTotalDescuentos(IdTabSeleccionado);
                    });
                } else {
                    toastr.error('No existe stock para dicho producto', 'Error', { timeOut: 5000 });
                }
            });
            $("#txtBusqueda_" + IdTabSeleccionado).focus();
        }

        if (global.objClienteVenta != '') {
            (0, _tools.changeArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado, [null, null, null, null, null, null, global.objClienteVenta, null]);
        }
    });

    $("#modal-superior").off('shown.bs.modal').on("shown.bs.modal", function () {

        $("#chbSoloProductoStock").prop("checked", false);
        $("#divSoloProductoStock").css("display", "none");
        $("#Cod_Categoria").css("display", "block");
        $("#lbCod_Categoria").css("display", "block");
        $("#Cod_Categoria").val("01");
        $("#Cod_Precio").val($("#Cod_Precio_" + IdTabSeleccionado).val());
        (0, _modales.Buscar)();
    });

    IdTabSeleccionado = idTabVenta;
}

function CrearDivFavoritos(variables, idTab) {
    var div = yo(_templateObject12, idTab, function () {
        return CrearBotonesCategoriasXSeleccion(variables.categorias, '', idTab);
    }, idTab, CrearBotonesCategorias(variables.categorias, idTab));
    var divFV = document.getElementById('divFooter_' + idTab);
    empty(divFV).appendChild(div);
}

function CrearDivVuelto(idTab) {
    var div = yo(_templateObject13, idTab, idTab, function () {
        return CalcularVueltoEspecial(idTab);
    }, idTab, idTab, idTab, function () {
        return (0, _tools.BloquearControles)(event);
    }, idTab, idTab, idTab, idTab, idTab, function () {
        return (0, _tools.BloquearControles)(event);
    }, idTab, idTab, idTab, idTab, function () {
        return CalcularVuelto(idTab);
    }, function () {
        return KeyCalcularVuelto(event, idTab);
    }, idTab, idTab, function () {
        return (0, _tools.BloquearControles)(event);
    }, function () {
        return CalcularVuelto(idTab);
    });
    var divFV = document.getElementById('divFooter_' + idTab);
    empty(divFV).appendChild(div);
    CalcularVuelto(idTab);
}

function CargarModalConfirmacion(idTab, _CodTipoComprobante) {
    var el = yo(_templateObject14, function () {
        return AceptarConfirmacion(idTab, _CodTipoComprobante);
    });

    var modal_proceso = document.getElementById('modal-alerta');
    empty(modal_proceso).appendChild(el);
    $('#modal-alerta').modal();
}

function AceptarConfirmacion(idTab, _CodTipoComprobante) {
    VentaSimpleSinME(idTab, _CodTipoComprobante);
}

function VerVuelto(variables, idTab) {
    if ($("#btnTotal_" + idTab).hasClass('active')) {
        CrearDivFavoritos(variables, idTab);
    } else {
        CrearDivVuelto(idTab);
    }
}

function MostrarCampos(indice, arreglo, opcion, idTab) {
    if (opcion == 1) {
        if (indice < arreglo.length) {
            if (arreglo[indice].Cod_FormaPago == '008') {
                return yo(_templateObject15, idTab, idTab, function () {
                    return CambioTipoCambioVenta(idTab);
                });
            } else {
                MostrarCampos(indice + 1, arreglo, opcion, idTab);
            }
        } else {
            return yo(_templateObject7);
        }
    } else {

        if (indice < arreglo.length) {
            if (arreglo[indice].Cod_FormaPago == '005' || arreglo[indice].Cod_FormaPago == '006') {
                return yo(_templateObject16, idTab, idTab);
            } else {
                MostrarCampos(indice + 1, arreglo, opcion, idTab);
            }
        } else {
            return yo(_templateObject7);
        }
    }
}

function CrearBotonesProductos(c, idTab, callback) {
    if (!arrayValidacion.includes($("#Cod_Almacen_" + idTab).val())) {
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                CodCategoria: c.Cod_Categoria,
                CodAlmacen: $("#Cod_Almacen_" + idTab).val()
            })
        };
        fetch(_constantes.URL + '/productos_serv_api/get_producto_by_codalm_codprec_stock', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == "ok") {
                var productos = res.data.productos;
                callback(c, productos);
            } else {
                callback(c, []);
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    } else {
        toastr.error('Es necesario seleccionar un almacen', 'Error', { timeOut: 5000 });
    }
}

function CrearBotonesCategorias(categorias, idTab) {

    return yo(_templateObject17, categorias.map(function (e) {
        return e.Cod_Padre == '' ? yo(_templateObject18, function () {
            return SeleccionarCategoria(e, categorias, idTab);
        }, e.Des_Categoria) : yo(_templateObject7);
    }));
}

function CrearBotonesCategoriasXSeleccion(categorias, CodPadre, idTab) {

    var listaProductos = yo(_templateObject17, categorias.map(function (e) {
        return e.Cod_Padre == CodPadre ? yo(_templateObject18, function () {
            return SeleccionarCategoria(e, categorias, idTab);
        }, e.Des_Categoria.toString().replace('-->', '')) : yo(_templateObject7);
    }));

    if (CodPadre == '') {
        $("#divTools_" + idTab).css("display", "none");
    } else {
        $("#divTools_" + idTab).css("display", "block");
    }

    var divProductos = document.getElementById('divProductos_' + idTab);
    empty(divProductos).appendChild(listaProductos);
}

function CrearBotonesFavoritos(favoritos, idTab) {
    return yo(_templateObject19, favoritos.map(function (e) {
        return yo(_templateObject20, function () {
            return AgregarProducto(e, favoritos, idTab);
        }, e.Nom_Producto);
    }));
    /*return  yo`<div> 
                ${favoritos.map(e=>yo`<a class="btn btn-app" onclick=${()=>AgregarProducto(e,favoritos,idTab)} style="height:80px"><i class="fa fa-star text-orange"></i> ${e.Nom_Producto}<p></p> ${parseFloat(e.Valor).toFixed(4)}</a>`)}
            </div>`*/
}

function TieneHijos(c, categorias, callback) {
    var resp = false;
    for (var i = 0; i < categorias.length; i++) {
        if (categorias[i].Cod_Padre == c.Cod_Categoria) {
            resp = true;
            break;
        }
    }
    callback(resp);
}

function ValidarStock(pStock, pCodigoProducto, idTab, callback) {
    var resp = true;
    $('#tablaBodyProductosVentas_' + idTab + ' tr').each(function () {
        var Flag_Stock = $(this).find("td").eq(1).text();
        var Cod_Producto = $(this).find("td").eq(0).text();
        var Cantidad = $(this).find("td").eq(3).find("input").val();
        if (Cod_Producto == pCodigoProducto) {
            if (Flag_Stock.toString() == "true") {
                if (parseFloat(Cantidad) >= parseFloat(pStock)) {
                    resp = false;
                }
            }
            return false;
        }
    });

    callback(resp);
}

function SeleccionarCategoria(c, categorias, idTab) {
    TieneHijos(c, categorias, function (flag) {
        if (flag) {
            CrearBotonesCategoriasXSeleccion(categorias, c.Cod_Categoria, idTab);
        } else {
            CrearBotonesProductos(c, idTab, function (categoria, productos) {
                if (productos.length > 0) {
                    var listaProductos = yo(_templateObject21, productos.map(function (e) {
                        return yo(_templateObject22, e.Nom_Producto, (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].SimboloMoneda + ' ' + parseFloat(categoria.Valor).toFixed(4));
                    }));
                    var divProductos = document.getElementById('divProductos_' + idTab);
                    empty(divProductos).appendChild(listaProductos);
                }
            });
        }
    });
}

function TraerSimboloSOLES(monedas, pCodMoneda, idTab) {
    for (var i = 0; i < monedas.length; i++) {
        if (monedas[i].Cod_Moneda == pCodMoneda) {
            (0, _tools.changeArrayJsonVentas)(global.variablesVentas, idTab, [null, null, null, null, monedas[i].Simbolo, null, null, null]);
            //SimboloMoneda = monedas[i].Simbolo
            (0, _tools.changeArrayJsonVentas)(global.variablesVentas, idTab, [null, null, null, null, null, monedas[i].Simbolo, null, null]);
            //SimboloMonedaExtra = getObjectArrayJsonVentas(global.variablesVentas,idTab)[0].SimboloMoneda
            break;
        }
    }
    $("#btnTotal_" + idTab).html('<i class="fa fa-money text-green"></i> TOTAL: ' + (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].SimboloMoneda + ' ' + parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total).toFixed(2));
}

function ExisteProducto(CodProducto, idTab, callback) {
    var flag = false;
    var posicion = -1;
    $('#tablaBodyProductosVentas_' + idTab + ' tr').each(function (index) {
        var Cod_Producto = $(this).find("td").eq(0).text();
        if (Cod_Producto == CodProducto) {
            flag = true;
            posicion = index;
            return false;
        }
    });
    callback(flag, posicion);
}

function RecuperarPrecio(favoritos, producto) {
    var pValor = '0.00';
    for (var i = 0; i < favoritos.length; i++) {
        if (favoritos[i].Cod_Producto == producto.Cod_Producto) {
            pValor = parseFloat(favoritos[i].Valor).toFixed(2);
            break;
        }
    }
    return pValor;
}

function RecalcularSubtotales(idTab) {
    $('#tablaBodyProductosVentas_' + idTab + ' tr').each(function (index) {
        var _Cantidad = parseFloat($(this).find("td").eq(3).find('input').val());
        var _PrecioUnitario = parseFloat($(this).find("td").eq(4).text());
        $(this).find("td").eq(9).text((parseFloat(_Cantidad) * parseFloat(_PrecioUnitario)).toFixed(2));
        (0, _tools.changeDetallesArrayJsonVentas)(idTab, $(this).find("td").eq(0).text(), [null, null, null, null, null, null, null, null, null, null, null, null, (parseFloat(_Cantidad) * parseFloat(_PrecioUnitario)).toFixed(2), null, null, null, null]);
    });
    CalcularTotal(idTab);
}

function RecalcularDescuentosTotales(idTab) {
    $('#tablaBodyProductosVentas_' + idTab + ' tr').each(function (index) {
        var _Cantidad = parseFloat($(this).find("td").eq(3).find('input').val());
        var _DescuentoUnitario = parseFloat($(this).find("td").eq(7).text());
        $(this).find("td").eq(8).text(_Cantidad * _DescuentoUnitario);
    });
    CalcularTotalDescuentos(idTab);
}

function CalcularVuelto(idTab) {
    //if($('input[name=Cod_Moneda_Forma_Pago_'+idTab+']:checked').val() == 'soles'){
    if ($('#Cod_Moneda_Forma_Pago_' + idTab).val() == 'PEN') {
        $("#TotalCobrar_" + idTab).val((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total);
    } else {
        $("#TotalCobrar_" + idTab).val(parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total) / parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].TipodeCambio));
    }
    $("#VueltoCalculado_" + idTab).val(parseFloat($("#TotalRecibidos_" + idTab).val()) - parseFloat($("#TotalCobrar_" + idTab).val()));

    if (parseFloat($("#TotalRecibidos_" + idTab).val()) - parseFloat($("#TotalCobrar_" + idTab).val()) > 0) {
        $("#lbVuelto_" + idTab).text("VUELTO:");
        if ($('#Cod_Moneda_Forma_Pago_' + idTab).val() == 'PEN') {
            //if($('input[name=Cod_Moneda_Forma_Pago_'+idTab+']:checked').val() == 'soles'){
            $("#Vuelto_" + idTab).val(parseFloat($("#TotalRecibidos_" + idTab).val()) - parseFloat($("#TotalCobrar_" + idTab).val()));
        } else {

            var ArregloNumero = (parseFloat($("#TotalRecibidos_" + idTab).val()) - parseFloat($("#TotalCobrar_" + idTab).val())).toString().split('.');
            var _ParteEntera = parseInt(ArregloNumero[0]);
            var _ParteDecimal = 0;
            if (ArregloNumero.length > 1) _ParteDecimal = parseFloat('0.' + ArregloNumero[1]);
            $("#Vuelto_" + idTab).val(_ParteEntera);
            $("#USD_" + idTab).val(_ParteDecimal);
            $("#PEN_" + idTab).val(parseFloat(_ParteDecimal) * parseFloat($("#Tipo_Cambio_Venta_" + idTab).val()));
        }
    } else {
        $("#lbVuelto_" + idTab).text("FALTA:");
        if ($('#Cod_Moneda_Forma_Pago_' + idTab).val() == 'PEN') {
            //if($('input[name=Cod_Moneda_Forma_Pago_'+idTab+']:checked').val() == 'soles'){
            $("#Vuelto_" + idTab).val(parseFloat($("#TotalRecibidos_" + idTab).val()) - parseFloat($("#TotalCobrar_" + idTab).val()));
        } else {
            $("#Vuelto_" + idTab).val('0.00');
            $("#USD_" + idTab).val(parseFloat($("#TotalRecibidos_" + idTab).val()) - parseFloat($("#TotalCobrar_" + idTab).val()));
            $("#PEN_" + idTab).val(parseFloat($("#USD_" + idTab).val()) * parseFloat($("#Tipo_Cambio_Venta_" + idTab).val()));
        }
    }
    //$("#txtBusqueda_"+idTab).focus()
    //$("#TotalRecibidos_"+idTab).focus() 
}

function KeyCalcularVuelto(event, idTab) {
    if (event.which == 13) {
        CalcularVuelto(idTab);
    }
}

function CalcularVueltoEspecial(idTab) {

    if (parseFloat($("#TotalRecibidos_" + idTab).val()) - parseFloat($("#TotalCobrar_" + idTab).val()) > 0) {
        //if($('input[name=Cod_Moneda_Forma_Pago_'+idTab+']:checked').val() == 'soles'){
        if ($('#Cod_Moneda_Forma_Pago_' + idTab).val() == 'PEN') {
            $("#TotalRecibidos_" + idTab).val(parseFloat($("#TotalCobrar_" + idTab).val()) + parseFloat($("#Vuelto_" + idTab)));
            CalcularVuelto(idTab);
        } else {
            $("#USD_" + idTab).val(parseFloat($("#TotalRecibidos_" + idTab).val()) - parseFloat($("#TotalCobrar_" + idTab).val()) - parseFloat($("#Vuelto_" + idTab).val()));
            $("#PEN_" + idTab).val(parseFloat($("#USD_" + idTab).val()) * parseFloat($("#Tipo_Cambio_Venta_" + idTab).val()));
        }
    }
}

function CalcularTotalDescuentos(idTab) {
    var _total = 0;
    $('#tablaBodyProductosVentas_' + idTab + ' tr').each(function (index) {
        _total = _total + parseFloat($(this).find("td").eq(8).text());
    });
    _total = parseFloat(_total.toFixed(2));
    (0, _tools.changeArrayJsonVentas)(global.variablesVentas, idTab, [null, _total, null, null, null, null, null, null]);
    //TotalDescuentos = _total
    $("#btnDescuentos_" + idTab).html('<i class="fa fa-arrow-circle-down text-red"></i> TOTAL DESCUENTOS: ' + (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].SimboloMoneda + ' ' + parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].TotalDescuentos).toFixed(2));
    if (_total != 0) {
        $("#btnDescuentos_" + idTab).css("display", "block");
    } else {
        $("#btnDescuentos_" + idTab).css("display", "none");
    }
}

function CalcularTotal(idTab) {
    var _total = 0;
    $('#tablaBodyProductosVentas_' + idTab + ' tr').each(function (index) {
        _total = _total + parseFloat($(this).find("td").eq(9).text());
    });
    _total = parseFloat(_total.toFixed(2));
    (0, _tools.changeArrayJsonVentas)(global.variablesVentas, idTab, [_total, null, null, null, null, null, null, null]);
    //Total = _total
    $("#btnTotal_" + idTab).html('<i class="fa fa-money text-green"></i> TOTAL: ' + (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].SimboloMoneda + ' ' + parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total).toFixed(2));
    if ($('#Cod_Moneda_Forma_Pago_' + idTab).val() == 'USD' || $('#Cod_Moneda_Forma_Pago_' + idTab).val() == 'EUR') {
        //if ($('input[name=Cod_Moneda_Forma_Pago_'+idTab+']:checked').val() == 'dolares' || $('input[name=Cod_Moneda_Forma_Pago_'+idTab+']:checked').val() == 'euros') {
        if ($('input[name=Cod_Moneda_Forma_Pago_' + idTab + ']:checked').val() == 'euros') {
            $("#btnConversion_" + idTab).css("display", "block");
            $("#btnConversion_" + idTab).html('<i class="fa fa-refresh text-green"></i> EN EUROS: ' + (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].SimboloMonedaExtra + ' ' + (parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total) / parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].TipodeCambio)).toFixed(2));
        } else {
            $("#btnConversion_" + idTab).css("display", "block");
            $("#btnConversion_" + idTab).html('<i class="fa fa-refresh text-green"></i> EN DOLARES: ' + (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].SimboloMonedaExtra + ' ' + (parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total) / parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].TipodeCambio)).toFixed(2));
        }
    } else {
        $("#btnConversion_" + idTab).css("display", "none");
    }
}

function LimpiarVenta(idTab) {
    $("#tablaBodyProductosVentas_" + idTab).html('');
    $("#txtBusqueda_" + idTab).val('');
    $("#txtBusqueda_" + idTab).focus();
    $("#btnConversion_" + idTab).css("display", "none");
    $("#Direccion_" + idTab).val('');
    $("#Nro_Documento_" + idTab).val('');
    $("#Cliente_" + idTab).val('');
    $("#Cliente_" + idTab).attr("data-id", null);

    (0, _tools.deleteElementArrayJsonVentas)(global.variablesVentas, idTab);
    global.variablesVentas.push({ idTab: idTab, Total: 0, TotalDescuentos: 0, TipodeCambio: 1, _CantidadOriginal: null, SimboloMoneda: '', SimboloMonedaExtra: '', Cod_FormaPago: null, Cliente: null, Detalles: [] });
    if ($("#btnTotal_" + idTab).hasClass('active')) {
        $("#btnTotal_" + idTab).click();
    }

    CalcularTotal(idTab);
    CalcularTotalDescuentos(idTab);
}

function TabVentaSeleccionado(idTab) {
    IdTabSeleccionado = idTab;
    global.objClienteVenta = '';
    global.objProductoVentas = '';
}

function CerrarTabVenta(idTab) {
    $('#tab_' + idTab).remove();
    $('#id_' + idTab).parents('li').remove();
    var tabFirst = $('#tabs a:first');
    tabFirst.tab('show');
    IdTabSeleccionado = null;
    (0, _tools.deleteElementArrayJsonVentas)(global.variablesVentas, idTab);
}

function EliminarFila(idFila, idTab) {
    (0, _tools.deleteElementArrayJsonVentas)(global.variablesVentas, idTab, $('#tablaBodyProductosVentas_' + idTab + ' tr#' + idFila).find('td.Cod_Producto').text());
    $('#' + idFila).remove();
    CalcularTotal(idTab);
    CalcularTotalDescuentos(idTab);
}

function FocusInOutCantidadVenta(idFila, idTab) {
    if ($('#' + idFila).find('td.Flag_Stock').text().toString() == "true") {
        //_CantidadOriginal = parseFloat($('#'+idFila).find('td.Cantidad').find('input').val())
        (0, _tools.changeArrayJsonVentas)(global.variablesVentas, idTab, [null, null, null, parseFloat($('#' + idFila).find('td.Cantidad').find('input').val()), null, null, null, null]);
    }
}

function CambioMonedaFormaPagoMasterCard(idTab) {
    if ($('input[name=Cod_FormaPago_Modal_' + idTab + ']:checked').val() == 'mastercard') {
        $("#Nro_Tarjeta_" + idTab).val("");
        $("#Nro_Tarjeta_" + idTab).prop("disabled", true);
        $('input[name=Cod_FormaPago_Modal_' + idTab + '][value="mastercard"]').prop("checked", false);
    } else {
        $("#Nro_Tarjeta_" + idTab).prop("disabled", false);
        $('input[name=Cod_FormaPago_Modal_' + idTab + '][value="mastercard"]').prop("checked", true);
        $('input[name=Cod_FormaPago_Modal_' + idTab + '][value="visa"]').prop("checked", false);
    }
}

function CambioMonedaFormaPagoVisa(idTab) {
    if ($('input[name=Cod_FormaPago_Modal_' + idTab + ']:checked').val() == 'visa') {
        $("#Nro_Tarjeta_" + idTab).val("");
        $("#Nro_Tarjeta_" + idTab).prop("disabled", true);
        $('input[name=Cod_FormaPago_Modal_' + idTab + '][value="visa"]').prop("checked", false);
    } else {
        $("#Nro_Tarjeta_" + idTab).prop("disabled", false);
        $('input[name=Cod_FormaPago_Modal_' + idTab + '][value="mastercard"]').prop("checked", false);
        $('input[name=Cod_FormaPago_Modal_' + idTab + '][value="visa"]').prop("checked", true);
    }
}

function CambioMonedaFormaPagoEuros(idTab) {
    var fecha = new Date();
    var mes = fecha.getMonth() + 1;
    var dia = fecha.getDate();
    var fecha_actual = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);
    var Cod_Moneda = 'EUR';
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_Moneda: Cod_Moneda,
            FechaHora: fecha_actual
        })
    };
    fetch(_constantes.URL + '/comprobantes_pago_api/get_variables_formas_pago', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == "ok") {
            var tipos_cambios = res.data.tipos_cambios;
            //TipodeCambio = parseFloat((tipos_cambios.length==0?'1':tipos_cambios[0].Venta)).toFixed(3)
            //TipodeCambio = parseFloat(TipodeCambio).toFixed(3)
            (0, _tools.changeArrayJsonVentas)(global.variablesVentas, idTab, [null, null, parseFloat(tipos_cambios.length == 0 ? '1' : tipos_cambios[0].Venta).toFixed(3), null, null, null, null, null]);
            $("#Tipo_Cambio_Venta_" + idTab).val((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].TipodeCambio);

            var parametrosMonedas = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({})
            };
            fetch(_constantes.URL + '/comprobantes_pago_api/get_monedas', parametrosMonedas).then(function (req) {
                return req.json();
            }).then(function (res) {
                if (res.respuesta == "ok") {
                    var monedas = res.data.monedas;
                    for (var i = 0; i < monedas.length; i++) {
                        if (monedas[i].Cod_Moneda == 'EUR') {
                            (0, _tools.changeArrayJsonVentas)(global.variablesVentas, idTab, [null, null, null, null, null, monedas[i].Simbolo, null, null]);
                            //SimboloMonedaExtra = monedas[i].Simbolo
                            break;
                        }
                    }

                    if ($('#Cod_Moneda_Forma_Pago_' + idTab).val() == 'EUR') {
                        //if ($('input[name=Cod_Moneda_Forma_Pago_'+idTab+']:checked').val() == 'euros'){
                        $("#lbTotalCobrar_" + idTab).attr("data-value", "EUR");
                        $("#lbTotalRecibidos_" + idTab).attr("data-value", "EUR");
                        $("#lbVuelto_" + idTab).attr("data-value", "EUR");
                        $("#lbVueltoCalculado_" + idTab).attr("data-value", "EUR");
                        $("#lbUSD_" + idTab).text("EUR");
                        $("#divUSD_" + idTab).css("display", "block");
                        $("#laCambio_" + idTab).css("display", "block");
                        $("#lbVuelto_" + idTab).val(parseFloat($("#lbVuelto_" + idTab).val()).toFixed(0));
                        $("#divPEN_" + idTab).css("display", "block");
                    }

                    CalcularTotal(idTab);
                    CalcularTotalDescuentos(idTab);

                    //if ($('input[name=Cod_Moneda_Forma_Pago_'+idTab+']:checked').val() == 'soles'){
                    if ($('#Cod_Moneda_Forma_Pago_' + idTab).val() == 'PEN') {
                        $("#TotalCobrar_" + idTab).val((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total);
                    } else {
                        $("#TotalCobrar_" + idTab).val(parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total) / parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].TipodeCambio));
                    }
                    CalcularVuelto(idTab);
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CambioMonedaFormaPagoDolares(idTab) {
    var fecha = new Date();
    var mes = fecha.getMonth() + 1;
    var dia = fecha.getDate();
    var fecha_actual = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);
    var Cod_Moneda = 'USD';
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Cod_Moneda: Cod_Moneda,
            FechaHora: fecha_actual
        })
    };
    fetch(_constantes.URL + '/comprobantes_pago_api/get_variables_formas_pago', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == "ok") {
            var tipos_cambios = res.data.tipos_cambios;
            //TipodeCambio = parseFloat((tipos_cambios.length==0?'1':tipos_cambios[0].Venta)).toFixed(3)
            //TipodeCambio = parseFloat(TipodeCambio).toFixed(3)
            (0, _tools.changeArrayJsonVentas)(global.variablesVentas, idTab, [null, null, parseFloat(tipos_cambios.length == 0 ? '1' : tipos_cambios[0].Venta).toFixed(3), null, null, null, null, null]);
            $("#Tipo_Cambio_Venta_" + idTab).val((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].TipodeCambio);

            var parametrosMonedas = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({})
            };
            fetch(_constantes.URL + '/comprobantes_pago_api/get_monedas', parametrosMonedas).then(function (req) {
                return req.json();
            }).then(function (res) {
                if (res.respuesta == "ok") {
                    var monedas = res.data.monedas;
                    for (var i = 0; i < monedas.length; i++) {
                        if (monedas[i].Cod_Moneda == 'USD') {
                            (0, _tools.changeArrayJsonVentas)(global.variablesVentas, idTab, [null, null, null, null, null, monedas[i].Simbolo, null, null]);
                            //SimboloMonedaExtra = monedas[i].Simbolo
                            break;
                        }
                    }

                    //if ($('input[name=Cod_Moneda_Forma_Pago_'+idTab+']:checked').val() == 'dolares'){
                    if ($('#Cod_Moneda_Forma_Pago_' + idTab).val() == 'USD') {
                        $("#lbTotalCobrar_" + idTab).attr("data-value", "USD");
                        $("#lbTotalRecibidos_" + idTab).attr("data-value", "USD");
                        $("#lbVuelto_" + idTab).attr("data-value", "USD");
                        $("#lbVueltoCalculado_" + idTab).attr("data-value", "USD");
                        $("#lbUSD_" + idTab).text("USD");
                        $("#divUSD_" + idTab).css("display", "block");
                        $("#laCambio_" + idTab).css("display", "block");
                        $("#lbVuelto_" + idTab).val(parseFloat($("#lbVuelto_" + idTab).val()).toFixed(0));
                        $("#divPEN_" + idTab).css("display", "block");
                    }

                    CalcularTotal(idTab);
                    CalcularTotalDescuentos(idTab);

                    if ($('#Cod_Moneda_Forma_Pago_' + idTab).val() == 'PEN') {
                        //if ($('input[name=Cod_Moneda_Forma_Pago_'+idTab+']:checked').val() == 'soles'){
                        $("#TotalCobrar_" + idTab).val((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total);
                    } else {
                        $("#TotalCobrar_" + idTab).val(parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total) / parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].TipodeCambio));
                    }
                    CalcularVuelto(idTab);
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CambioMonedaVentas(idTab) {
    switch ($('#Cod_Moneda_Forma_Pago_' + idTab).val()) {
        case 'PEN':
            CambioMonedaFormaPagoSoles(idTab);
            break;
        case 'USD':
            CambioMonedaFormaPagoDolares(idTab);
            break;
        case 'EUR':
            CambioMonedaFormaPagoEuros(idTab);
            break;
    }
}

function CambioMonedaFormaPagoSoles(idTab) {
    //if ($('input[name=Cod_Moneda_Forma_Pago_'+idTab+']:checked').val() == 'soles'){
    if ($('#Cod_Moneda_Forma_Pago_' + idTab).val() == 'PEN') {
        $("#lbTotalCobrar_" + idTab).attr("data-value", "PEN");
        $("#lbTotalRecibidos_" + idTab).attr("data-value", "PEN");
        $("#lbVuelto_" + idTab).attr("data-value", "PEN");
        $("#lbVueltoCalculado_" + idTab).attr("data-value", "PEN");
        $("#divUSD_" + idTab).css("display", "none");
        $("#divTC_" + idTab).css("display", "none");
        $("#divPEN_" + idTab).css("display", "none");
        $("#lbVuelto_" + idTab).val(parseFloat($("#lbVuelto_" + idTab).val()).toFixed(2));
    }

    if ($('#Cod_Moneda_Forma_Pago_' + idTab).val() == 'PEN') {
        //if ($('input[name=Cod_Moneda_Forma_Pago_'+idTab+']:checked').val() == 'soles'){
        $("#TotalCobrar_" + idTab).val((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total);
    } else {
        $("#TotalCobrar_" + idTab).val(parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total) / parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].TipodeCambio));
    }
    CalcularVuelto(idTab);
}

function CambioCantidadVenta(idFila, idTab) {

    (0, _tools.changeDetallesArrayJsonVentas)(idTab, $('#' + idFila).find('td.Cod_Producto').text(), [null, null, null, null, null, null, null, null, parseFloat($('#tablaBodyProductosVentas_' + idTab + ' tr#' + idFila).find('td.Cantidad').find('input').val()).toFixed(2), null, null, null, null, null, null, null, null]);

    if ($('#' + idFila).find('td.Flag_Stock').text().toString() == "true") {

        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Cod_Producto: $('#' + idFila).find('td.Cod_Producto').text().toString(),
                Cod_Almacen: $("#Cod_Almacen_" + idTab).val(),
                Cod_TipoPrecio: $("#Cod_Precio_" + idTab).val()
            })
        };
        fetch(_constantes.URL + '/productos_serv_api/get_codigo_unidad_by_codP_codA_codTP', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == "ok") {
                if (res.data.producto.length > 0) {
                    var producto = res.data.producto[0];
                    if (parseFloat($('#' + idFila).find('td.Cantidad').find('input').val()) > parseFloat(producto.Stock_Act)) {
                        toastr.error('El stock maximo es de : ' + parseFloat(producto.Stock_Act).toFixed(0), 'Error', { timeOut: 5000 });
                        $('#' + idFila).find('td.Cantidad').find('input').val((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0]._CantidadOriginal);
                    }
                } else {
                    $('#' + idFila).find('td.Cantidad').find('input').val((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0]._CantidadOriginal);
                }
            } else {
                $('#' + idFila).find('td.Cantidad').find('input').val((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0]._CantidadOriginal);
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    }
    RecalcularSubtotales(idTab);
    RecalcularDescuentosTotales(idTab);
}

function CambioPrecioDescuentos(idFila, idTab) {

    (0, _tools.changeDetallesArrayJsonVentas)(idTab, $('#' + idFila).find('td.Cod_Producto').text(), [null, null, null, null, null, null, null, null, null, null, parseFloat($('#tablaBodyProductosVentas_' + idTab + ' tr#' + idFila).find('td.UnitarioBase').find('input').val()).toFixed(2), parseFloat($('#tablaBodyProductosVentas_' + idTab + ' tr#' + idFila).find('td.Descuentos').find('input').val()).toFixed(2), null, null, null, null, null]);

    var _Unitario = parseFloat($('#' + idFila).find('td.UnitarioBase').find('input').val());
    var _Descuento = parseFloat($('#' + idFila).find('td.Descuentos').find('input').val()) / 100;
    if (_Descuento.toString() == '') {
        $('#' + idFila).find('td.Descuentos').find('input').val('0.00');
        _Descuento = 0;
    }
    if (_Descuento != 0) {
        $('#' + idFila).find('td.Descuentos').find('input').css("background", "#dd4b39");
        $('#' + idFila).find('td.Descuentos').find('input').css("color", "white");
        $('#' + idFila).find('td.Descuentos').find('input').css("border-color", "#dd4b39");
    } else {

        $('#' + idFila).find('td.Descuentos').find('input').css("background", "white");
        $('#' + idFila).find('td.Descuentos').find('input').css("color", "#555");
        $('#' + idFila).find('td.Descuentos').find('input').css("border-color", "#98999c");
    }
    $('#' + idFila).find('td.DescuentoUnitario').text(_Unitario * _Descuento);
    RecalcularSubtotales(idTab);
    RecalcularDescuentosTotales(idTab);
}

function CambioTipoCambioVenta(idTab) {
    //TipodeCambio = parseFloat($("#Tipo_Cambio_Venta_"+idTab).val())
    (0, _tools.changeArrayJsonVentas)(global.variablesVentas, idTab, [null, null, parseFloat($("#Tipo_Cambio_Venta_" + idTab).val()), null, null, null, null, null]);
    CalcularTotal(idTab);
    CalcularTotalDescuentos(idTab);
    if ($('#Cod_Moneda_Forma_Pago_' + idTab).val() == 'PEN') {
        //if ($('input[name=Cod_Moneda_Forma_Pago_'+idTab+']:checked').val() == 'soles'){
        $("#TotalCobrar_" + idTab).val((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total);
    } else {
        $("#TotalCobrar_" + idTab).val(parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Total) / parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].TipodeCambio));
    }
    CalcularVuelto(idTab);
}

function AgregarProducto(producto, favoritos, idTab) {
    if (!arrayValidacion.includes($("#Cod_Almacen_" + idTab).val())) {
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Cod_Producto: producto.Cod_Producto,
                Cod_Almacen: $("#Cod_Almacen_" + idTab).val(),
                Cod_TipoPrecio: $("#Cod_Precio_" + idTab).val()
            })
        };
        fetch(_constantes.URL + '/productos_serv_api/get_codigo_unidad_by_codP_codA_codTP', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == "ok") {
                if (res.data.producto.length > 0) {
                    var dataProducto = res.data.producto[0];
                    ValidarStock(producto.Stock_Act, dataProducto, idTab, function (flag) {
                        if (flag) {
                            ExisteProducto(producto.Cod_Producto, idTab, function (flag, index) {
                                if (flag) {

                                    $('#tablaBodyProductosVentas_' + idTab + ' tr:eq(' + index + ')').find('td.Cantidad').find('input').val((parseFloat($('#tablaBodyProductosVentas_' + idTab + ' tr:eq(' + index + ')').find('td.Cantidad').find('input').val()) + 1).toFixed(2));
                                    $('#tablaBodyProductosVentas_' + idTab + ' tr:eq(' + index + ')').find('td.Precio').text((parseFloat($('#tablaBodyProductosVentas_' + idTab + ' tr:eq(' + index + ')').find('td.Cantidad').find('input').val()) * parseFloat(RecuperarPrecio(favoritos, dataProducto))).toFixed(2));
                                    $('#tablaBodyProductosVentas_' + idTab + ' tr:eq(' + index + ')').find('td.DescuentoTotal').text((parseFloat($('#tablaBodyProductosVentas_' + idTab + ' tr:eq(' + index + ')').find('td.DescuentoUnitario').text()) * parseFloat($('#tablaBodyProductosVentas_' + idTab + ' tr:eq(' + index + ')').find('td.Cantidad').find('input').val())).toFixed(2));

                                    (0, _tools.changeDetallesArrayJsonVentas)(idTab, $('#tablaBodyProductosVentas_' + idTab + ' tr:eq(' + index + ')').find('td.Cod_Producto').text(), [null, null, null, null, null, null, null, null, $('#tablaBodyProductosVentas_' + idTab + ' tr:eq(' + index + ')').find('td.Cantidad').find('input').val(), null, null, null, $('#tablaBodyProductosVentas_' + idTab + ' tr:eq(' + index + ')').find('td.Precio').text(), null, null, null, null]);
                                } else {
                                    var idFila = $('#tablaBodyProductosVentas_' + idTab + ' > tr').length;
                                    var fila = yo(_templateObject23, idFila + '' + idTab, dataProducto.Cod_Producto, dataProducto.Flag_Stock, dataProducto.Nom_Producto, function () {
                                        return FocusInOutCantidadVenta(idFila + '' + idTab, idTab);
                                    }, function () {
                                        return CambioCantidadVenta(idFila + '' + idTab, idTab);
                                    }, RecuperarPrecio(favoritos, dataProducto), RecuperarPrecio(favoritos, dataProducto), function () {
                                        return CambioPrecioDescuentos(idFila + '' + idTab, idTab);
                                    }, function () {
                                        return CambioPrecioDescuentos(idFila + '' + idTab, idTab);
                                    }, function () {
                                        return CambioPrecioDescuentos(idFila + '' + idTab, idTab);
                                    }, RecuperarPrecio(favoritos, dataProducto), function () {
                                        return EliminarFila(idFila + '' + idTab, idTab);
                                    });

                                    $('#tablaBodyProductosVentas_' + idTab).append(fila);

                                    (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, idTab)[0].Detalles.push({
                                        id_ComprobantePago: 0,
                                        id_Detalle: 0,
                                        Id_Producto: dataProducto.Id_Producto,
                                        Codigo: dataProducto.Cod_Producto,
                                        Descripcion: dataProducto.Nom_Producto,
                                        Almacen: $("#Cod_Almacen_" + idTab).val(),
                                        UM: dataProducto.Cod_UnidadMedida,
                                        Stock: dataProducto.Stock_Act,
                                        Cantidad: 1,
                                        Despachado: 1,
                                        PU: RecuperarPrecio(favoritos, dataProducto),
                                        Descuento: '0.00',
                                        Importe: RecuperarPrecio(favoritos, dataProducto),
                                        Cod_Manguera: $("#Cod_Precio_" + idTab).val(),
                                        Tipo: dataProducto.Cod_TipoOperatividad,
                                        Obs_ComprobanteD: '',
                                        Series: [],
                                        Nom_UnidadMedida: dataProducto.Cod_UnidadMedida,
                                        Des_Almacen: $("#Cod_Almacen_" + idTab).val() //dataProducto.Des_Almacen      
                                    });
                                    /*
                                        <tr id="${idFila}">
                                        <td class="id_ComprobantePago hidden"><input value="0"></td>
                                        <td class="id_Detalle hidden"><input value="${rows}"></td> 
                                        <td class="Id_Producto hidden"><input value="${flagGasto?'0':Id_Producto}"></td> 
                                        <td class="Codigo">${flagGasto?'':Cod_Producto}</td>
                                        <td class="Descripcion"><input type="text" class="form-control input-sm" value="${Nom_Producto}"></td>
                                        <td class="Almacen"><input type="text" class="form-control input-sm" value=${flagGasto?'':Cod_Almacen}></td> 
                                        <td class="UM"><input type="text" class="form-control input-sm" value=${flagGasto?'':Cod_UnidadMedida}></td>
                                        <td class="Stock hidden"><input type="number" class="form-control input-sm" value=${flagGasto?"0":Stock}></td> 
                                        <td class="Cantidad"><input type="number" class="form-control input-sm" value=${flagGasto?"1":Cantidad} onkeyup=${()=>EditarCantidad(idFila,CodLibro,variables)} onchange=${()=>EditarCantidad(idFila,CodLibro,variables)}></td> 
                                        <td class="Despachado hidden">${flagGasto?"1":Cantidad}</td> 
                                        <td class="PU"><input type="number" class="form-control input-sm" value=${flagGasto?Importe:Precio_Unitario} onkeyup=${()=>EditarPrecioUnitario(idFila,CodLibro,variables)} onchange=${()=>EditarPrecioUnitario(idFila,CodLibro,variables)}></td> 
                                        <td class="Descuento"><input type="number" class="form-control input-sm" value=${flagGasto?"0":Descuento} onkeyup=${()=>EditarDescuento(idFila,CodLibro,variables)} onchange=${()=>EditarDescuento(idFila,CodLibro,variables)} ></td> 
                                        <td class="Importe"><input type="number" class="form-control input-sm" value=${flagGasto?Importe:Importe}></td>
                                        <td class="Cod_Manguera hidden">${flagGasto?'':Cod_TipoPrecio}</td>  
                                        <td class="Tipo hidden">${flagGasto?'NGR':Cod_TipoOperatividad}</td> 
                                        <td class="Obs_ComprobanteD hidden"></td> 
                                        <td class="Series hidden"><input class="form-control" type="text" value=${JSON.stringify([])} name="Series"></td>
                                        <td>
                                        <div style="display:flex;">
                                            <button type="button" onclick="${()=>AsignarSeries(idFila,CodLibro)}" class="btn btn-primary btn-sm"><i class="fa fa-tasks"></i></a>  
                                            <button type="button" onclick="${()=>EliminarFila(idFila,CodLibro,variables)}" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>
                                        </div>
                                        </td>
                                    </tr>`
                                      */
                                }
                                CalcularTotal(idTab);
                                CalcularTotalDescuentos(idTab);
                            });
                        } else {
                            toastr.error('No existe stock para dicho producto', 'Error', { timeOut: 5000 });
                        }
                    });
                } else {
                    toastr.error('El producto seleccionado no existe para el almacen y precio seleccionado.', 'Error', { timeOut: 5000 });
                }
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    } else {
        toastr.error('Es necesario seleccionar un almacen.', 'Error', { timeOut: 5000 });
    }
}

function BuscarProductoCP(event, tipo, idTab) {
    if (tipo == 'blur') {
        if ($("#txtBusqueda_" + idTab).val().trim().length >= 3) {
            global.objProductoVentas = '';
            (0, _modales.BuscarProducto)(true, $("#txtBusqueda_" + idTab).val());
        }
    } else {
        if (event.which == 13) {
            if ($("#txtBusqueda_" + idTab).val().trim().length >= 3) {
                $("#Cod_Precio_" + idTab).focus();
                global.objProductoVentas = '';
                (0, _modales.BuscarProducto)(true, $("#txtBusqueda_" + idTab).val());
            }
        }
        //if(!$("#optEsGasto").is(":checked"))
        //    BuscarProducto(CodLibro == "14", $("#Nom_Producto").val())

        //$("#Nom_Producto").focusout()
    }
}

function BuscarClienteDoc(CodLibro, idTab) {
    var Nro_Documento = document.getElementById('Nro_Documento_' + idTab).value;
    if (Nro_Documento.trim().length > 3) {
        run_waitMe($('#div-cliente'), 1, "ios", "Buscando cliente...");
        var Cod_TipoDocumento = document.getElementById('Cod_TipoDoc_' + idTab).value;
        var Cod_TipoCliente = CodLibro == "08" ? "001" : "002";
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Nro_Documento: Nro_Documento, Cod_TipoDocumento: Cod_TipoDocumento, Cod_TipoCliente: Cod_TipoCliente
            })
        };

        fetch(_constantes.URL + '/clientes_api/get_cliente_by_documento', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == 'ok' && res.data.cliente.length > 0) {
                global.objClienteVenta = res.data.cliente[0];
                (0, _tools.changeArrayJsonVentas)(global.variablesVentas, idTab, [null, null, null, null, null, null, global.objClienteVenta, null]);
                if (global.objClienteVenta != '' && global.objClienteVenta) {
                    $("#Cod_TipoDoc_" + idTab).val(global.objClienteVenta.Cod_TipoDocumento);
                    $("#Cliente_" + idTab).val(global.objClienteVenta.Cliente);
                    $("#Direccion_" + idTab).val(global.objClienteVenta.Direccion);
                    $("#Nro_Documento_" + idTab).val(global.objClienteVenta.Nro_Documento);
                    $("#Cliente_" + idTab).attr("data-id", global.objClienteVenta.Id_ClienteProveedor);
                }
            }
            $('#div-cliente').waitMe('hide');
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            $('#div-cliente').waitMe('hide');
        });
    }
}

function EmisionRapida(idTab, pDetalles, pCod_Moneda, pCliente, pCod_Comprobante) {
    console.log((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Cliente);
    run_waitMe($('#main-contenido'), 1, "ios", "Realizando la venta...");
    var fecha = new Date();
    var mes = fecha.getMonth() + 1;
    var dia = fecha.getDate();
    var fecha_format = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia) + ' ' + [fecha.getHours() > 9 ? fecha.getHours() : '0' + fecha.getHours(), fecha.getMinutes() > 9 ? fecha.getMinutes() : '0' + fecha.getMinutes()].join(':');

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Cliente: (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Cliente,
            FormaPago: ObtenerFormaPago(idTab),
            Detalles: (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Detalles,
            Cod_Moneda: 'PEN',
            Total: (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Total,
            Obs_Comprobante: null,
            Fecha_Emision: fecha_format

        })
    };
    fetch(_constantes.URL + '/comprobantes_pago_api/venta_simple', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        console.log(res);
        if (res.respuesta == 'ok') {
            toastr.success('Se registro correctamente el comprobante', 'Confirmacion', { timeOut: 5000 });
            LimpiarVenta(idTab);
        } else {
            toastr.error(res.detalle_error, 'Error', { timeOut: 5000 });
        }
        $('#main-contenido').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#main-contenido').waitMe('hide');
    });
}

function ObtenerFormaPago(idTab) {
    if ($('input[name=Cod_FormaPago_Modal_' + idTab + ']:checked').val() == 'mastercard' || $('input[name=Cod_FormaPago_Modal_' + idTab + ']:checked').val() == 'visa') {
        if ($('input[name=Cod_FormaPago_Modal_' + idTab + ']:checked').val() == 'mastercard') {
            var listaFormaPago = [];
            listaFormaPago.push({
                id_ComprobantePago: 0,
                Item: 1,
                Des_FormaPago: 'VISA NET',
                Cod_FormaPago: '005',
                Cod_Moneda: 'PEN',
                TipoCambio: 1,
                Monto: parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Total) / 1,
                CuentaCajaBanco: $("#Nro_Tarjeta_" + idTab).val() == undefined ? '' : $("#Nro_Tarjeta_" + idTab).val()
            });
            return listaFormaPago;
        } else {
            var _listaFormaPago = [];
            _listaFormaPago.push({
                id_ComprobantePago: 0,
                Item: 1,
                Des_FormaPago: 'MASTERCARD',
                Cod_FormaPago: '006',
                Cod_Moneda: 'PEN',
                TipoCambio: 1,
                Monto: parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Total) / 1,
                CuentaCajaBanco: $("#Nro_Tarjeta_" + idTab).val() == undefined ? '' : $("#Nro_Tarjeta_" + idTab).val()
            });
            return _listaFormaPago;
        }
    } else {

        var _listaFormaPago2 = [];
        _listaFormaPago2.push({
            id_ComprobantePago: 0,
            Item: 1,
            Des_FormaPago: 'EFECTIVO',
            Cod_FormaPago: '008',
            Cod_Moneda: 'PEN',
            TipoCambio: 1,
            Monto: parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Total) / 1,
            CuentaCajaBanco: $("#Nro_Tarjeta_" + idTab).val() == undefined ? '' : $("#Nro_Tarjeta_" + idTab).val()
        });
        return _listaFormaPago2;
    }
}

function VentaSimpleSinME(idTab, _CodTipoComprobante) {

    if ((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Cliente != null && (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Cliente != '') {
        _CodTipoComprobante = (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Cliente.Cod_TipoComprobante;
    }
    EmisionRapida(idTab, (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Detalles, 'PEN', (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Cliente, _CodTipoComprobante);
}

function VentaSimpleConME(idTab, _CodTipoComprobante) {

    if ((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Cliente != null && (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Cliente != '') {
        _CodTipoComprobante = (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Cliente.Cod_TipoComprobante;
    }
    EmisionRapida(idTab, (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Detalles, 'PEN', (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Cliente, _CodTipoComprobante);
}

function NuevaVenta() {
    run_waitMe($('#main-contenido'), 1, "ios");
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({})
    };
    fetch(_constantes.URL + '/comprobantes_pago_api/get_variables_ventas', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        var variables = res.data;
        if (res.respuesta == 'ok') {
            VerNuevaVenta(variables, null);
        } else {
            toastr.error(res.detalle_error, 'Error', { timeOut: 5000 });
        }
        $('#main-contenido').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#main-contenido').waitMe('hide');
    });
}

function VentaSimple() {
    if ($("#Cliente_" + IdTabSeleccionado).val().trim() == '') {
        (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Cliente = null;
        $("#Cliente_" + IdTabSeleccionado).attr("data-id", null);
    }

    console.log(global.variablesVentas);
    var _CodTipoComprobante = "";
    if (!$('#tabs li:first').hasClass('active')) {
        if (IdTabSeleccionado != null) {
            var rows = $("#tablaBodyProductosVentas_" + IdTabSeleccionado + " > tr").length;
            //ComprobantePago('14',getObjectArrayJsonVentas(global.variablesVentas,IdTabSeleccionado)[0].Cliente,getObjectArrayJsonVentas(global.variablesVentas,IdTabSeleccionado)[0].Detalles)
            if (rows > 0) {
                // verificar cierre z ???
                if (parseFloat((0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Total) <= 700) {
                    if ($('#Cod_Moneda_Forma_Pago_' + IdTabSeleccionado).val() == 'USD' || $('#Cod_Moneda_Forma_Pago_' + IdTabSeleccionado).val() == 'EUR') {
                        //if($('input[name=Cod_Moneda_Forma_Pago_'+IdTabSeleccionado+']:checked').val() == 'dolares' || $('input[name=Cod_Moneda_Forma_Pago_'+IdTabSeleccionado+']:checked').val() == 'euros'){
                        if (parseFloat($("#TotalRecibidos_" + IdTabSeleccionado).val()) > 0) {
                            VentaSimpleConME(IdTabSeleccionado, _CodTipoComprobante);
                        } else {
                            CargarModalConfirmacion(IdTabSeleccionado, _CodTipoComprobante);
                        }
                    } else {
                        VentaSimpleSinME(IdTabSeleccionado, _CodTipoComprobante);
                    }
                } else {
                    if ($("#Cliente_" + IdTabSeleccionado).attr("data-id") == null) {
                        (0, _tools.LimpiarVariablesGlobales)();
                        (0, _comprobante_pago.ComprobantePago)('14', (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Cliente, (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Detalles);
                    } else {
                        if ($('#Cod_Moneda_Forma_Pago_' + IdTabSeleccionado).val() == 'USD' || $('#Cod_Moneda_Forma_Pago_' + IdTabSeleccionado).val() == 'EUR') {
                            //if($('input[name=Cod_Moneda_Forma_Pago_'+IdTabSeleccionado+']:checked').val() == 'dolares' || $('input[name=Cod_Moneda_Forma_Pago_'+IdTabSeleccionado+']:checked').val() == 'euros'){
                            if (parseFloat($("#TotalRecibidos_" + IdTabSeleccionado).val()) > 0) {
                                VentaSimpleConME(IdTabSeleccionado, _CodTipoComprobante);
                            } else {
                                CargarModalConfirmacion(IdTabSeleccionado, _CodTipoComprobante);
                            }
                        } else {
                            VentaSimpleSinME(IdTabSeleccionado, _CodTipoComprobante);
                        }
                    }
                }
            } else {
                toastr.error('No se puede Utilizar esta opcion sin haber ingresado al menos una venta.\n\n Ingrese la venta y vuelva a intentarlo.', 'Error', { timeOut: 5000 });
            }
        }
    } else {
        IdTabSeleccionado = null;
    }
}

function VentaCompleta() {
    console.log(global.variablesVentas);
    if (!$('#tabs li:first').hasClass('active')) {
        if (IdTabSeleccionado != null) {
            var rows = $("#tablaBodyProductosVentas_" + IdTabSeleccionado + " > tr").length;
            if (rows > 0) {
                (0, _tools.LimpiarVariablesGlobales)();
                (0, _comprobante_pago.ComprobantePago)('14', (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Cliente, (0, _tools.getObjectArrayJsonVentas)(global.variablesVentas, IdTabSeleccionado)[0].Detalles);
            } else {
                toastr.error('No se puede Utilizar esta opcion sin haber ingresado al menos una venta.\n\n Ingrese la venta y vuelva a intentarlo.', 'Error', { timeOut: 5000 });
            }
        }
    } else {
        IdTabSeleccionado = null;
    }
}

exports.NuevaVenta = NuevaVenta;
exports.VentaSimple = VentaSimple;
exports.VentaCompleta = VentaCompleta;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../../../../utility/tools":401,"../../../constantes_entorno/constantes":377,"../../mod_compras/comprobante_pago":383,"../../modales":395,"empty-element":338,"yo-yo":375}],393:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BuscarComprobantePago = undefined;

var _templateObject = _taggedTemplateLiteral(['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Buscar Comprobante de Pago</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <label>RUC o Razon Social</label>\n                            <div class="input-group">\n                                <input type="text" class="form-control" value="" id="txtBusquedaModalComprobantePago" data-id=null>\n                                <div class="input-group-btn">\n                                    <button type="button" class="btn btn-success" onclick="', '"><i class="fa fa-search"></i> Buscar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=row">\n                        <div class="col-md-12">\n                            <div class="form-group">\n                                <label>Comprobante</label>\n                                <select id="TipoComprobante"  class="form-control">\n                                    ', '\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label>Serie</label>\n                                <input type="text"  class="form-control required" id="SerieModalBusquedaComprobante">\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label>Numero</label>\n                                <input type="text"  class="form-control required" id="NumeroModalBusquedaComprobante">\n                            </div>\n                        </div>\n                    </div>                    \n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnAceptar" onclick="', '">Aceptar</button>\n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Buscar Comprobante de Pago</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <label>RUC o Razon Social</label>\n                            <div class="input-group">\n                                <input type="text" class="form-control" value="" id="txtBusquedaModalComprobantePago" data-id=null>\n                                <div class="input-group-btn">\n                                    <button type="button" class="btn btn-success" onclick="', '"><i class="fa fa-search"></i> Buscar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=row">\n                        <div class="col-md-12">\n                            <div class="form-group">\n                                <label>Comprobante</label>\n                                <select id="TipoComprobante"  class="form-control">\n                                    ', '\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label>Serie</label>\n                                <input type="text"  class="form-control required" id="SerieModalBusquedaComprobante">\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label>Numero</label>\n                                <input type="text"  class="form-control required" id="NumeroModalBusquedaComprobante">\n                            </div>\n                        </div>\n                    </div>                    \n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnAceptar" onclick="', '">Aceptar</button>\n                </div>\n            </div>\n        </div>']),
    _templateObject2 = _taggedTemplateLiteral(['<option value="', '">', '</option>'], ['<option value="', '">', '</option>']);

var _index = require('./index');

var _constantes = require('../../constantes_entorno/constantes');

var _tools = require('../../../utility/tools');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');


function VerBuscarComprobatePago(CodLibro, tipos_comprobantes) {
    (0, _tools.LimpiarVariablesGlobales)();
    var el = yo(_templateObject, function () {
        return (0, _index.BuscarCliente)("txtBusquedaModalComprobantePago", null, null);
    }, tipos_comprobantes.map(function (e) {
        return yo(_templateObject2, e.Cod_TipoComprobante, e.Nom_TipoComprobante);
    }), function () {
        return AceptarComprobante(CodLibro);
    });

    var modal_proceso = document.getElementById('modal-otros-procesos');
    empty(modal_proceso).appendChild(el);
    $('#modal-otros-procesos').modal();

    $('#modal-superior').on('hidden.bs.modal', function () {

        if (global.objCliente != '') {
            $("#txtBusquedaModalComprobantePago").val(global.objCliente.Cliente);
            $("#txtBusquedaModalComprobantePago").attr("data-id", global.objCliente.Id_ClienteProveedor);
        }
    });
}

function BuscarComprobantePago(CodLibro) {

    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            CodLibro: CodLibro
        })
    };
    fetch(_constantes.URL + '/comprobantes_pago_api/get_tipos_comprobantes', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var tipos_comprobantes = res.data.tipos_comprobantes;
            VerBuscarComprobatePago(CodLibro, tipos_comprobantes);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function AceptarComprobante(CodLibro) {
    if (CodLibro == "08") {
        var Id_Cliente = $("#txtBusquedaModalComprobantePago").attr("data-id");
        var Cod_TipoComprobante = $("#TipoComprobante").val();
        var Serie = $("#SerieModalBusquedaComprobante").val();
        var Numero = $("#NumeroModalBusquedaComprobante").val();
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            credentials: 'same-origin',
            body: JSON.stringify({
                Id_Cliente: Id_Cliente,
                Cod_TipoComprobante: Cod_TipoComprobante,
                Serie: Serie,
                Numero: Numero
            })
        };
        fetch(_constantes.URL + '/comprobantes_pago_api/get_comprobante_by_cliente', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == 'ok') {
                if (res.data.length > 0) {
                    global.objComprobantePagoDetalle = {
                        Cod_TipoComprobante: Cod_TipoComprobante,
                        Serie: Serie,
                        Numero: Numero
                    };
                    global.objComprobantePago = res.data.comprobante[0];
                } else {
                    toastr.error('No existe Comprobante', 'Error', { timeOut: 5000 });
                    $("#NumeroModalBusquedaComprobante").val("");
                    $("#NumeroModalBusquedaComprobante").focus();
                }
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    } else {

        var Cod_TipoComprobante = $("#TipoComprobante").val();
        var Serie = $("#SerieModalBusquedaComprobante").val();
        var Numero = $("#NumeroModalBusquedaComprobante").val();
        var _parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            credentials: 'same-origin',
            body: JSON.stringify({
                Cod_TipoComprobante: Cod_TipoComprobante,
                Serie: Serie,
                Numero: Numero,
                DocCliente: $("#txtBusquedaModalComprobantePago").val()
            })
        };
        fetch(_constantes.URL + '/comprobantes_pago_api/get_comprobante_by_tipo', _parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == 'ok') {
                if (res.data.length > 0) {
                    global.objComprobantePagoDetalle = {
                        Cod_TipoComprobante: Cod_TipoComprobante,
                        Serie: Serie,
                        Numero: Numero,
                        DocCliente: $("#txtBusquedaModalComprobantePago").val()
                    };
                    global.objComprobantePago = res.data.comprobante[0];
                } else {
                    toastr.error('No existe Comprobante', 'Error', { timeOut: 5000 });
                    $("#NumeroModalBusquedaComprobante").val("");
                    $("#NumeroModalBusquedaComprobante").focus();
                }
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    }
}

exports.BuscarComprobantePago = BuscarComprobantePago;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../../../utility/tools":401,"../../constantes_entorno/constantes":377,"./index":395,"empty-element":338,"yo-yo":375}],394:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BuscarCuentasPendientes = undefined;

var _templateObject = _taggedTemplateLiteral(['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Buscar Pendientes</strong></h4>\n                </div>\n                <div class="modal-body">\n                    \n                    <div class="row">\n                        <div class="col-sm-12 col-md-12">\n                            <div class="table-responsive" id="contenedorTablaClientesCuentas"> \n                            </div>\n                        </div>\n                    </div>\n                                  \n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button> \n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Buscar Pendientes</strong></h4>\n                </div>\n                <div class="modal-body">\n                    \n                    <div class="row">\n                        <div class="col-sm-12 col-md-12">\n                            <div class="table-responsive" id="contenedorTablaClientesCuentas"> \n                            </div>\n                        </div>\n                    </div>\n                                  \n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button> \n                </div>\n            </div>\n        </div>']),
    _templateObject2 = _taggedTemplateLiteral(['<table id="example" class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Doc</th>\n            <th>Cliente</th>\n            <th>Emision</th>\n            <th>Vencimiento</th>\n            <th>Documento</th> \n            <th>Moneda</th> \n            <th>Faltante</th>\n            <th>Opciones</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>'], ['<table id="example" class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Doc</th>\n            <th>Cliente</th>\n            <th>Emision</th>\n            <th>Vencimiento</th>\n            <th>Documento</th> \n            <th>Moneda</th> \n            <th>Faltante</th>\n            <th>Opciones</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>']),
    _templateObject3 = _taggedTemplateLiteral(['\n        <tr> \n            <td>', '</td>\n            <td>', '</td> \n            <td>', '</td> \n            <td>', '</td> \n            <td>', '</td> \n            <td>', '</td> \n            <td>', '</td>  \n            <td><button class="btn btn-xs btn-primary" data-dismiss="modal" onclick="', '"><i class="fa fa-check"></i> Elegir</button></td>\n        </tr>'], ['\n        <tr> \n            <td>', '</td>\n            <td>', '</td> \n            <td>', '</td> \n            <td>', '</td> \n            <td>', '</td> \n            <td>', '</td> \n            <td>', '</td>  \n            <td><button class="btn btn-xs btn-primary" data-dismiss="modal" onclick="', '"><i class="fa fa-check"></i> Elegir</button></td>\n        </tr>']);

var _index = require('./index');

var _constantes = require('../../constantes_entorno/constantes');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');


function VerBuscarCuentasPendientes(CodLibro, cuentas) {
    var el = yo(_templateObject);

    var modal_proceso = document.getElementById('modal-otros-procesos');
    empty(modal_proceso).appendChild(el);
    $('#modal-otros-procesos').modal();
    AgregarTabla(cuentas, CodLibro);
}

function AgregarTabla(cuentas, CodLibro) {

    var el = yo(_templateObject2, cuentas.map(function (c) {
        return yo(_templateObject3, c.Doc_Cliente, c.Nom_Cliente, c.FechaEmision, c.FechaVencimiento, c.Documento, c.Moneda, c.TotalFaltante, function () {
            return SeleccionarCuenta(c);
        });
    }));
    empty(document.getElementById('contenedorTablaClientesCuentas')).appendChild(el);

    $('#example').DataTable({
        "lengthChange": false,
        "oLanguage": {
            "sSearch": "Buscar:"
        }
    });

    $("#example_filter").find("input").keyup(function () {});
}

function SeleccionarCuenta(cuenta) {
    global.objCliente = cuenta;
}

function BuscarCuentasPendientes(Cod_Libro, Id_Cliente, FechaInicio, FechaFin) {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            Id_Cliente: Id_Cliente,
            Cod_Libro: Cod_Libro,
            FechaInicio: FechaInicio,
            FechaFin: FechaFin
        })
    };
    fetch(_constantes.URL + '/recibo_iegreso_api/get_cuentas_by_cobrar_pagar', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var cuentas = res.data.cuentas;
            VerBuscarCuentasPendientes(Cod_Libro, cuentas);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
    //VerBuscarCuentasPendientes(CodLibro)
}

exports.BuscarCuentasPendientes = BuscarCuentasPendientes;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../../constantes_entorno/constantes":377,"./index":395,"empty-element":338,"yo-yo":375}],395:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Buscar = exports.BuscarProducto = exports.AbrirModalObs = exports.BuscarCliente = exports.NuevoCliente = undefined;

var _templateObject = _taggedTemplateLiteral(['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Buscar Producto </strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-md-4">\n                            <div class="form-group">\n                                <label for="Cod_Categoria" id="lbCod_Categoria">Categoria</label>\n                                <select id="Cod_Categoria" class="form-control" onchange=', '>\n                                   \n                                </select>\n                            </div>\n                        </div>\n                        <div  class="col-md-4">\n                            <div class="form-group">\n                                <label for="Cod_Precio">Tipo Precio</label>\n                                <select id="Cod_Precio"  class="form-control">\n                                \n                                </select>\n                            </div>\n                        </div>\n                        <div  class="col-md-4">\n                            <div class="form-group">\n                                <label></label>\n                                <div class="checkbox" id="divSoloProductoStock">\n                                    <label>\n                                        <input type="checkbox" checked="checked" id="chbSoloProductoStock"> Solo productos con stock?\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <div class="input-group">\n                                <input type="text" class="form-control" value="', '" id="txtBusquedaProducto">\n                                <div class="input-group-btn">\n                                    <button type="button" class="btn btn-success" onclick="', '"><i class="fa fa-search"></i> Buscar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="table-responsive" id="contenedorTablaProductos">\n\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Buscar Producto </strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-md-4">\n                            <div class="form-group">\n                                <label for="Cod_Categoria" id="lbCod_Categoria">Categoria</label>\n                                <select id="Cod_Categoria" class="form-control" onchange=', '>\n                                   \n                                </select>\n                            </div>\n                        </div>\n                        <div  class="col-md-4">\n                            <div class="form-group">\n                                <label for="Cod_Precio">Tipo Precio</label>\n                                <select id="Cod_Precio"  class="form-control">\n                                \n                                </select>\n                            </div>\n                        </div>\n                        <div  class="col-md-4">\n                            <div class="form-group">\n                                <label></label>\n                                <div class="checkbox" id="divSoloProductoStock">\n                                    <label>\n                                        <input type="checkbox" checked="checked" id="chbSoloProductoStock"> Solo productos con stock?\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <div class="input-group">\n                                <input type="text" class="form-control" value="', '" id="txtBusquedaProducto">\n                                <div class="input-group-btn">\n                                    <button type="button" class="btn btn-success" onclick="', '"><i class="fa fa-search"></i> Buscar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="table-responsive" id="contenedorTablaProductos">\n\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                </div>\n            </div>\n        </div>']),
    _templateObject2 = _taggedTemplateLiteral(['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Buscar Cliente - Proveedor</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="radio">\n                                <label>\n                                    <input type="radio" id="optionsRadiosBuscar" name="optionsRadiosBuscar" value="nro"> Por Nro. Documento\n                                </label>\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="radio">\n                                <label>\n                                    <input type="radio" id="optionsRadiosBuscar" name="optionsRadiosBuscar" checked="checked" value="nombre"> Por Nombre o Cliente\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <div class="input-group">\n                                <input type="text" class="form-control" id="txtBuscarCliente">\n                                <div class="input-group-btn">\n                                    <button type="button" id="BuscarClienteModal" class="btn btn-success" onclick=', '><i class="fa fa-search"></i> Buscar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="table-responsive" id="contenedorTablaClientes">\n\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button> \n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Buscar Cliente - Proveedor</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="radio">\n                                <label>\n                                    <input type="radio" id="optionsRadiosBuscar" name="optionsRadiosBuscar" value="nro"> Por Nro. Documento\n                                </label>\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <label></label>\n                            <div class="radio">\n                                <label>\n                                    <input type="radio" id="optionsRadiosBuscar" name="optionsRadiosBuscar" checked="checked" value="nombre"> Por Nombre o Cliente\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-12">\n                            <div class="input-group">\n                                <input type="text" class="form-control" id="txtBuscarCliente">\n                                <div class="input-group-btn">\n                                    <button type="button" id="BuscarClienteModal" class="btn btn-success" onclick=', '><i class="fa fa-search"></i> Buscar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="table-responsive" id="contenedorTablaClientes">\n\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button> \n                </div>\n            </div>\n        </div>']),
    _templateObject3 = _taggedTemplateLiteral(['\n        <div class="modal-dialog modal-lg">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Nuevo Cliente</strong></h4>\n                </div>\n                <div class="modal-body" id="modal_form_nuevo_cliente">\n                    <div class="row">\n                        <div id="modal_error_nuevo_cliente" class="callout callout-danger hidden">\n                            <p> Es necesario llenar los campos marcados con rojo</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="Cod_TipoDocumento">Tipo de documento *</label>\n                                <select id="Cod_TipoDocumento"  class="form-control required">\n                                    ', '\n                                </select>\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="Nro_Documento_NC">Numero de Documento *</label>\n                                <input type="number"  class="form-control required" id="Nro_Documento_NC">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="Cliente_NC">Nombre Completo *</label>\n                                <input type="text"  class="form-control required" id="Cliente_NC">\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="DireccioN">Direccion *</label>\n                                <input type="text"  class="form-control required" id="DireccioN">\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="Email1">Correo Electronico</label>\n                                <input type="email"  class="form-control" id="Email1">\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="Telefono1">Telefono</label>\n                                <input type="text"  class="form-control" id="Telefono1">\n                            </div>\n                        </div>\n                    </div>\n                     \n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnGuardar" onclick=', '>Aceptar</button>\n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog modal-lg">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title"><strong>Nuevo Cliente</strong></h4>\n                </div>\n                <div class="modal-body" id="modal_form_nuevo_cliente">\n                    <div class="row">\n                        <div id="modal_error_nuevo_cliente" class="callout callout-danger hidden">\n                            <p> Es necesario llenar los campos marcados con rojo</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="Cod_TipoDocumento">Tipo de documento *</label>\n                                <select id="Cod_TipoDocumento"  class="form-control required">\n                                    ', '\n                                </select>\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="Nro_Documento_NC">Numero de Documento *</label>\n                                <input type="number"  class="form-control required" id="Nro_Documento_NC">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="Cliente_NC">Nombre Completo *</label>\n                                <input type="text"  class="form-control required" id="Cliente_NC">\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="DireccioN">Direccion *</label>\n                                <input type="text"  class="form-control required" id="DireccioN">\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="Email1">Correo Electronico</label>\n                                <input type="email"  class="form-control" id="Email1">\n                            </div>\n                        </div>\n                        <div class="col-sm-6">\n                            <div class="form-group">\n                                <label for="Telefono1">Telefono</label>\n                                <input type="text"  class="form-control" id="Telefono1">\n                            </div>\n                        </div>\n                    </div>\n                     \n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnGuardar" onclick=', '>Aceptar</button>\n                </div>\n            </div>\n        </div>']),
    _templateObject4 = _taggedTemplateLiteral(['<option style="text-transform:uppercase" value="', '">', '</option>'], ['<option style="text-transform:uppercase" value="', '">', '</option>']),
    _templateObject5 = _taggedTemplateLiteral(['<table id="example1" class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Documento</th>\n            <th>Cliente</th> \n            <th>Acciones</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>'], ['<table id="example1" class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Documento</th>\n            <th>Cliente</th> \n            <th>Acciones</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>']),
    _templateObject6 = _taggedTemplateLiteral(['\n        <tr>\n            <td>', '</td>\n            <td>', '</td> \n            <td><button class="btn btn-xs btn-primary" data-dismiss="modal" onclick="', '"><i class="fa fa-check"></i> Elegir</button></td>\n        </tr>'], ['\n        <tr>\n            <td>', '</td>\n            <td>', '</td> \n            <td><button class="btn btn-xs btn-primary" data-dismiss="modal" onclick="', '"><i class="fa fa-check"></i> Elegir</button></td>\n        </tr>']),
    _templateObject7 = _taggedTemplateLiteral(['<tabla class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Codigo</th>\n            <th>Almacen</th> \n            <th>Producto</th>\n            <th>Stock</th>\n            <th>Moneda</th>\n            <th>PU</th>\n            <th>UM</th> \n            <th>Acciones</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>'], ['<tabla class="table table-bordered table-striped">\n    <thead>\n        <tr>\n            <th>Codigo</th>\n            <th>Almacen</th> \n            <th>Producto</th>\n            <th>Stock</th>\n            <th>Moneda</th>\n            <th>PU</th>\n            <th>UM</th> \n            <th>Acciones</th>\n        </tr>\n    </thead>\n    <tbody>\n        ', '\n    </tbody>\n\n</table>']),
    _templateObject8 = _taggedTemplateLiteral(['\n        <tr>\n            <td>', '</td>\n            <td>', '</td>\n            <td>', '</td>  \n            <td>', '</td>  \n            <td>', '</td>  \n            <td>', '</td>  \n            <td>', '</td>\n            <td><button class="btn btn-xs btn-primary" data-dismiss="modal" onclick="', '"><i class="fa fa-check"></i> Elegir</button></td>\n        </tr>'], ['\n        <tr>\n            <td>', '</td>\n            <td>', '</td>\n            <td>', '</td>  \n            <td>', '</td>  \n            <td>', '</td>  \n            <td>', '</td>  \n            <td>', '</td>\n            <td><button class="btn btn-xs btn-primary" data-dismiss="modal" onclick="', '"><i class="fa fa-check"></i> Elegir</button></td>\n        </tr>']),
    _templateObject9 = _taggedTemplateLiteral(['<div>\n    <div class="modal-body">\n        ', '\n    </div>\n    <div class="modal-footer">\n        <button onclick="', '" class="btn btn-primary">Guardar</button>\n    </div></div>'], ['<div>\n    <div class="modal-body">\n        ', '\n    </div>\n    <div class="modal-footer">\n        <button onclick="', '" class="btn btn-primary">Guardar</button>\n    </div></div>']),
    _templateObject10 = _taggedTemplateLiteral(['\n        <div class="row">\n            <div class="col-sm-12">\n                <div class="form-group">\n                    <label for="">', '</label>\n                    <input id="', '"\n                    value=', '\n                    class="form-control" />\n                </div>\n            </div>\n        </div>'], ['\n        <div class="row">\n            <div class="col-sm-12">\n                <div class="form-group">\n                    <label for="">', '</label>\n                    <input id="', '"\n                    value=', '\n                    class="form-control" />\n                </div>\n            </div>\n        </div>']);

var _constantes = require('../../constantes_entorno/constantes');

var _tools = require('../../../utility/tools');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');


var aRequiereStock = true;
var aIdClienteProveedor = 0;
var aCodTipoProducto = null;
var arrayValidacion = [null, 'null', ''];

function BuscarProducto(_RequiereStock, text_busqueda) {
    (0, _tools.LimpiarVariablesGlobales)();
    aRequiereStock = _RequiereStock;
    var el = yo(_templateObject, function () {
        return Buscar();
    }, text_busqueda, function () {
        return Buscar();
    });

    var modal_proceso = document.getElementById('modal-superior');
    empty(modal_proceso).appendChild(el);
    $('#modal-superior').modal();
    CargarTipoPrecio();
    CargarCategoria();
    Buscar();
}

function BuscarCliente(idInputCliente, idInputDoc, Cod_TipoCliente) {
    (0, _tools.LimpiarVariablesGlobales)();
    var el = yo(_templateObject2, function () {
        return BusquedaClienteModal(idInputCliente, idInputDoc, Cod_TipoCliente);
    });

    var modal_proceso = document.getElementById('modal-superior');
    empty(modal_proceso).appendChild(el);
    $('#modal-superior').modal();
    $("#txtBuscarCliente").val($("#" + idInputCliente).val());
    BusquedaClienteModal(idInputCliente, idInputDoc, Cod_TipoCliente);
}

function NuevoCliente(documentos) {
    (0, _tools.LimpiarVariablesGlobales)();
    var el = yo(_templateObject3, documentos.map(function (e) {
        return yo(_templateObject4, e.Cod_TipoDoc, e.Nom_TipoDoc);
    }), function () {
        return GuardarNuevoCliente();
    });

    var modal_proceso = document.getElementById('modal-superior');
    empty(modal_proceso).appendChild(el);
    $('#modal-superior').modal();
}

function AgregarTabla(clientes, idInputCliente, idInputDoc) {
    var el = yo(_templateObject5, clientes.map(function (u) {
        return yo(_templateObject6, u.Nro_Documento, u.Cliente, function () {
            return SeleccionarCliente(u, idInputCliente, idInputDoc);
        });
    }));
    empty(document.getElementById('contenedorTablaClientes')).appendChild(el);
}

function AgregarTablaProductos(productos) {
    var el = yo(_templateObject7, productos.map(function (u) {
        return yo(_templateObject8, u.Cod_Producto, u.Des_Almacen, u.Nom_Producto, u.Stock_Act, u.Nom_UnidadMoneda, u.Precio_Compra, u.Nom_UnidadMedida, function () {
            return SeleccionarProducto(u);
        });
    }));
    empty(document.getElementById('contenedorTablaProductos')).appendChild(el);
}

function LlenarCategorias(categorias) {
    var html = '<option value=null>Seleccione una Categoria</option>';
    for (var i = 0; i < categorias.length; i++) {
        html = html + '<option value="' + categorias[i].Cod_Categoria + '">' + categorias[i].Des_Categoria + '</option>';
    }

    $("#Cod_Categoria").html('');
    $("#Cod_Categoria").html(html);
}

function LlenarPrecios(precios) {
    var html = '';
    for (var i = 0; i < precios.length; i++) {
        html = html + '<option value="' + precios[i].Cod_Precio + '">' + precios[i].Nom_Precio + '</option>';
    }

    $("#Cod_Precio").html('');
    $("#Cod_Precio").html(html);
}

function AbrirModalObs(diagrama, obs_global_xml, id_modal, id_modal_body) {
    var xml = obs_global_xml != null ? obs_global_xml : '';
    var parser = new DOMParser();
    var xmlDoc = parser.parseFromString(xml, "text/xml");
    var el = yo(_templateObject9, diagrama.map(function (e) {
        return yo(_templateObject10, e.Nom_Elemento, e.Cod_Elemento, getValueXML(xmlDoc, e.Cod_Elemento));
    }), function () {
        return GuardarObs_Recibo(diagrama, obs_global_xml, id_modal);
    });
    var obs_xml = document.getElementById(id_modal_body);
    empty(obs_xml).appendChild(el);
    $('#' + id_modal).modal();
}

function GuardarObs_Recibo(diagramas, obs_global_xml, id_modal) {
    var OBS = '<Registro>';
    for (var i = 0; i < diagramas.length; i++) {
        OBS += '<' + diagramas[i].Cod_Elemento + '>' + document.getElementById(diagramas[i].Cod_Elemento).value + '</' + diagramas[i].Cod_Elemento + '>';
    }
    obs_global_xml = OBS + '</Registro>';
    $('#' + id_modal).modal('hide');
}

function getValueXML(xmlDoc, TAG) {
    if (xmlDoc.getElementsByTagName(TAG).length > 0 && xmlDoc.getElementsByTagName(TAG)[0].childNodes.length > 0) {
        return xmlDoc.getElementsByTagName(TAG)[0].childNodes[0].nodeValue;
    } else {
        return '';
    }
}

function SeleccionarProducto(producto) {
    global.objProducto = producto;
    global.objProductoVentas = producto;
}

function SeleccionarCliente(cliente, idInputCliente, idInputDoc) {
    if (idInputCliente != null) $("#" + idInputCliente).val(cliente.Cliente);

    if (idInputDoc != null) $("#" + idInputDoc).val(cliente.Nro_Documento);

    global.objCliente = cliente;
    global.objClienteVenta = cliente;

    if (idInputCliente != null) $("#" + idInputCliente).attr("data-id", cliente.Id_ClienteProveedor);
    $("#Cod_TipoDoc").val(cliente.Cod_TipoDocumento);
}

function GuardarNuevoCliente() {
    if (ValidacionCampos("modal_error_nuevo_cliente", "modal_form_nuevo_cliente")) {
        run_waitMe($('#modal-superior'), 1, "ios", "Registrando cliente...");
        var Cod_TipoDocumento = $("#Cod_TipoDocumento").val();
        var Nro_Documento = $("#Nro_Documento_NC").val();
        var Cliente = $("#Cliente_NC").val();
        var DireccioN = $("#DireccioN").val();
        var Email1 = $("#Email1").val();
        var Telefono1 = $("#Telefono1").val();
        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            credentials: 'same-origin',
            body: JSON.stringify({
                Cod_TipoDocumento: Cod_TipoDocumento,
                Nro_Documento: Nro_Documento,
                Cliente: Cliente,
                DireccioN: DireccioN,
                Email1: Email1,
                Telefono1: Telefono1
            })
        };
        fetch(_constantes.URL + '/clientes_api/guardar_cliente_2', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            $('#modal-superior').modal('hide');
            $('#modal-superior').waitMe('hide');
            if (res.respuesta == 'ok') {
                toastr.success('Se registro correctamente el cliente', 'Confirmacion', { timeOut: 5000 });
                $('#modal-superior').modal('hide');
            } else {
                toastr.error('No se pudo registrar correctamente el cliente', 'Error', { timeOut: 5000 });
            }
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            $('#modal-superior').waitMe('hide');
        });
    }
}

function CargarCategoria() {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({})
    };
    fetch(_constantes.URL + '/categorias_api/get_categoriaspadre', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') LlenarCategorias(res.data.categoriaspadre);else LlenarCategorias([]);
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function CargarTipoPrecio() {
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({})
    };
    fetch(_constantes.URL + '/productos_serv_api/get_precios', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') LlenarPrecios(res.data.precios);else LlenarPrecios([]);
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function Buscar() {
    if (aIdClienteProveedor == 0) {
        BusquedaProducto();
    } else {
        BusquedaXIdClienteProveedor();
    }
}

function BusquedaProducto() {
    if ($("#txtBusquedaProducto").val().trim().length >= 2) {
        var Buscar = $("#txtBusquedaProducto").val().replace(/" "/g, "%");
        var Cod_Precio = $("#Cod_Precio").val();
        var Cod_Categoria = arrayValidacion.includes($("#Cod_Categoria").val()) ? null : $("#Cod_Categoria").val();

        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Buscar: Buscar,
                CodTipoProducto: aCodTipoProducto,
                Cod_Categoria: Cod_Categoria,
                Cod_Precio: Cod_Precio,
                Flag_RequiereStock: aRequiereStock
            })
        };
        fetch(_constantes.URL + '/productos_serv_api/buscar_producto_caja_actual', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            if (res.respuesta == 'ok') {
                var productos = res.data.productos;
                if (productos.length > 0) AgregarTablaProductos(productos);else empty(document.getElementById('contenedorTablaProductos'));
            } else empty(document.getElementById('contenedorTablaProductos'));
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    } else {
        console.log("busqueda de producto con lenght mayor a 2");
    }
}

function BusquedaXIdClienteProveedor() {
    if ($("#txtBusquedaProducto").val().trim().length >= 2) {
        var Buscar = $("#txtBusquedaProducto").val().replace(/" "/g, "%");
        var Cod_Categoria = $("#Cod_Categoria").val();

        var parametros = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Buscar: Buscar,
                CodTipoProducto: aCodTipoProducto,
                Cod_Categoria: Cod_Categoria
            })
        };
        fetch(_constantes.URL + '/productos_serv_api/buscar_producto_by_id_cliente_caja_actual', parametros).then(function (req) {
            return req.json();
        }).then(function (res) {
            console.log(res);
            if (res.respuesta == 'ok') {
                var productos = res.data.productos;
                if (productos.length > 0) AgregarTablaProductos(productos);else empty(document.getElementById('contenedorTablaProductos'));
            } else empty(document.getElementById('contenedorTablaProductos'));
        }).catch(function (e) {
            console.log(e);
            toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        });
    }
}

function BusquedaClienteModal(idInputCliente, idInputDoc, Cod_TipoCliente) {
    var txtBuscarCliente = $("#txtBuscarCliente").val();
    if (txtBuscarCliente.length >= 4) {
        if ($('input[name=optionsRadiosBuscar]:checked').val() == 'nombre') {
            var Cliente = txtBuscarCliente;
            var parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Cliente: Cliente,
                    Cod_TipoCliente: Cod_TipoCliente
                })
            };
            fetch(_constantes.URL + '/clientes_api/get_cliente_by_nombre', parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                console.log(res);
                if (res.respuesta == 'ok') {
                    var clientes = res.data.cliente;
                    if (clientes.length > 0) AgregarTabla(clientes, idInputCliente, idInputDoc);else empty(document.getElementById('contenedorTablaClientes'));
                } else empty(document.getElementById('contenedorTablaClientes'));
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        } else {
            var Nro_Documento = txtBuscarCliente;
            var Cod_TipoDocumento = '';
            var _parametros = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Nro_Documento: Nro_Documento,
                    Cod_TipoDocumento: Cod_TipoDocumento,
                    Cod_TipoCliente: Cod_TipoCliente
                })
            };
            fetch(_constantes.URL + '/clientes_api/get_cliente_by_documento', _parametros).then(function (req) {
                return req.json();
            }).then(function (res) {
                if (res.respuesta == 'ok') {
                    var clientes = res.data.cliente;
                    if (clientes.length > 0) AgregarTabla(clientes, idInputCliente, idInputDoc);else empty(document.getElementById('contenedorTablaClientes'));
                } else empty(document.getElementById('contenedorTablaClientes'));
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        }
    }
}

exports.NuevoCliente = NuevoCliente;
exports.BuscarCliente = BuscarCliente;
exports.AbrirModalObs = AbrirModalObs;
exports.BuscarProducto = BuscarProducto;
exports.Buscar = Buscar;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../../../utility/tools":401,"../../constantes_entorno/constantes":377,"empty-element":338,"yo-yo":375}],396:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _templateObject = _taggedTemplateLiteral(['\n    \n        <div class="modal-dialog" style="height: 90%;">\n            <div class="modal-content modal-lg" style="height: 100%;">\n                <div class="modal-header text-center">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h3 class="modal-title"><strong>', '</strong></h3>\n                    <h4 class="modal-title"><strong>', '</strong></h4>\n                    <h4 class="modal-title"><strong>', '</strong></h4>\n                </div>\n                <div class="modal-body text-center" id="divPDF" style="height: 80%;">\n                    \n                </div>\n                <div class="modal-footer">\n                    <div class="btn-toolbar pull-right">\n                        <div class="btn-group">\n                            <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button> \n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- /.modal-content -->\n        </div>'], ['\n    \n        <div class="modal-dialog" style="height: 90%;">\n            <div class="modal-content modal-lg" style="height: 100%;">\n                <div class="modal-header text-center">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h3 class="modal-title"><strong>', '</strong></h3>\n                    <h4 class="modal-title"><strong>', '</strong></h4>\n                    <h4 class="modal-title"><strong>', '</strong></h4>\n                </div>\n                <div class="modal-body text-center" id="divPDF" style="height: 80%;">\n                    \n                </div>\n                <div class="modal-footer">\n                    <div class="btn-toolbar pull-right">\n                        <div class="btn-group">\n                            <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button> \n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- /.modal-content -->\n        </div>']);

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');

function CargarPDFModal(titulo, subtitulo, subtitulo_extra, callback) {
    var el = yo(_templateObject, titulo, subtitulo, subtitulo_extra);

    var modal_proceso = document.getElementById('modal-alerta');
    empty(modal_proceso).appendChild(el);
    run_waitMe($('#divPDF'), 1, "ios", "Cargando vista previa comprobante...");

    if ($('#modal-alerta').hasClass('in')) {
        callback(true);
    } else {

        $('#modal-alerta').modal();
        $("#modal-alerta").off('shown.bs.modal').on("shown.bs.modal", function () {
            callback(true);
        });
    }
}

exports.CargarPDFModal = CargarPDFModal;

},{"empty-element":338,"yo-yo":375}],397:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BuscarPorSerie = exports.AsignarSeriesModal = undefined;

var _templateObject = _taggedTemplateLiteral(['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Busqueda por Serie</strong></h4>\n                </div>\n                <div class="modal-body">\n                    \n                    \n                    <div class="row">\n                        <div class="col-md-4">\n                            <div class="form-group"> \n                                <select id="Cod_AlmacenBuscarSerie" class="form-control">\n                                    ', '\n                                </select>\n                            </div>\n                        </div>\n                        <div  class="col-md-6">\n                            <div class="form-group">\n                                <input type="text" id="txtBuscarSerie"  placeholder="Ingrese la serie para realizar la busqueda" class="form-control" onkeypress=', '>\n                            </div>\n                        </div>\n                        <div  class="col-md-2">\n                            <div class="form-group">\n                               <button class="btn btn-success" onclick=', '><i class="fa fa-search"></i> Buscar</button>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <p></p>\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="table-responsive" id="divTablaSeries">\n                                <table id="tablaSeries" class="table table-bordered table-hover">\n                                    <thead>\n                                        <th>Codigo</th>\n                                        <th>Producto</th>\n                                        <th>Serie</th>\n                                        <th>Observacion</th>\n                                    </thead>\n                                   \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button> \n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Busqueda por Serie</strong></h4>\n                </div>\n                <div class="modal-body">\n                    \n                    \n                    <div class="row">\n                        <div class="col-md-4">\n                            <div class="form-group"> \n                                <select id="Cod_AlmacenBuscarSerie" class="form-control">\n                                    ', '\n                                </select>\n                            </div>\n                        </div>\n                        <div  class="col-md-6">\n                            <div class="form-group">\n                                <input type="text" id="txtBuscarSerie"  placeholder="Ingrese la serie para realizar la busqueda" class="form-control" onkeypress=', '>\n                            </div>\n                        </div>\n                        <div  class="col-md-2">\n                            <div class="form-group">\n                               <button class="btn btn-success" onclick=', '><i class="fa fa-search"></i> Buscar</button>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <p></p>\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="table-responsive" id="divTablaSeries">\n                                <table id="tablaSeries" class="table table-bordered table-hover">\n                                    <thead>\n                                        <th>Codigo</th>\n                                        <th>Producto</th>\n                                        <th>Serie</th>\n                                        <th>Observacion</th>\n                                    </thead>\n                                   \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button> \n                </div>\n            </div>\n        </div>']),
    _templateObject2 = _taggedTemplateLiteral(['<option value=', '>', '</option>'], ['<option value=', '>', '</option>']),
    _templateObject3 = _taggedTemplateLiteral(['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Series</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-md-6">\n                        </div>\n                        <div class="col-md-4 col-md-offset-2"> \n                            <button class="btn btn-success btn-sm btn-block" onclick=', '>Generar Series</button>\n                        </div>\n                    </div>\n                    <p></p>\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="table-responsive">\n                                <table id="tablaSeries" class="table table-bordered table-hover">\n                                    <thead>\n                                        <th>Series</th>\n                                        <th>Vencimiento</th>\n                                        <th>Observaciones</th>\n                                    </thead>\n                                    <tbody id="tablaBodySeries">\n    \n                                        ', '\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnAceptar" onclick=', '>Aceptar</button>\n                </div>\n            </div>\n        </div>'], ['\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Series</strong></h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-md-6">\n                        </div>\n                        <div class="col-md-4 col-md-offset-2"> \n                            <button class="btn btn-success btn-sm btn-block" onclick=', '>Generar Series</button>\n                        </div>\n                    </div>\n                    <p></p>\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="table-responsive">\n                                <table id="tablaSeries" class="table table-bordered table-hover">\n                                    <thead>\n                                        <th>Series</th>\n                                        <th>Vencimiento</th>\n                                        <th>Observaciones</th>\n                                    </thead>\n                                    <tbody id="tablaBodySeries">\n    \n                                        ', '\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="modal-footer text-center"> \n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-info" id="btnAceptar" onclick=', '>Aceptar</button>\n                </div>\n            </div>\n        </div>']),
    _templateObject4 = _taggedTemplateLiteral(['\n                                        <tr>\n                                            <td class="Serie"><input class="form-control" value=""></td>\n                                            <td class="Fecha"><input class="form-control" type="date" value="', '"></td>\n                                            <td class="Observacion"><input class="form-control" type="text"></td>\n                                        </tr>\n                                        '], ['\n                                        <tr>\n                                            <td class="Serie"><input class="form-control" value=""></td>\n                                            <td class="Fecha"><input class="form-control" type="date" value="', '"></td>\n                                            <td class="Observacion"><input class="form-control" type="text"></td>\n                                        </tr>\n                                        ']),
    _templateObject5 = _taggedTemplateLiteral(['\n                                        <tr>\n                                            <td class="Serie"><input class="form-control" value="', '"></td>\n                                            <td class="Fecha"><input class="form-control" type="date" value="', '"></td>\n                                            <td class="Observacion"><input class="form-control" type="text" value="', '"></td>\n                                        </tr>\n                                        '], ['\n                                        <tr>\n                                            <td class="Serie"><input class="form-control" value="', '"></td>\n                                            <td class="Fecha"><input class="form-control" type="date" value="', '"></td>\n                                            <td class="Observacion"><input class="form-control" type="text" value="', '"></td>\n                                        </tr>\n                                        ']),
    _templateObject6 = _taggedTemplateLiteral(['\n        <div class="modal-dialog modal-sm">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Generar Series</strong></h4>\n                </div>\n                <div class="modal-body">\n\n\n                <form>\n                    <div class="form-group row">\n                        <label class="col-sm-5 col-form-label">Serie Inicial</label>\n                        <div class="col-sm-7">\n                            <input type="text" class="form-control" id="SerieInicial">\n                        </div>\n                    </div>\n                    <div class="form-group row"> \n                        <div class="radio col-sm-5 col-form-label">\n                            <label>\n                                <input type="radio" id="optionsGenerarSerie" name="optionsGenerarSerie" checked="checked" value="Cantidad" onchange="', '">Cantidad\n                            </label>\n                        </div>\n                         \n                        <div class="col-sm-7">\n                            <input type="number" class="form-control" id="Cantidad">\n                        </div>\n                    </div>\n\n                    <div class="form-group row"> \n                        <div class="radio col-sm-5 col-form-label">\n                            <label>\n                                <input type="radio" id="optionsGenerarSerie" name="optionsGenerarSerie" value="SerieFinal" onchange="', '">Serie Final\n                            </label>\n                        </div>\n                        \n                        <div class="col-sm-7">\n                            <input type="text" class="form-control" id="SerieFinal" onkeypress="', '" disabled>\n                        </div>\n                    </div>\n \n\n                    <div class="form-group row"> \n                        <div class="radio col-sm-4 col-form-label text-right">\n                            <label>\n                                a\n                            </label>\n                        </div>\n                        \n                        <div class="col-sm-4">\n                            <input type="number" class="form-control" id="Dias" value="0">\n                        </div>\n                        <div class="radio col-sm-4 col-form-label text-left">\n                            <label>\n                                Dia(s)\n                            </label>\n                        </div>\n                    </div>\n                 \n                </form>\n \n                    <div class="modal-footer text-center"> \n                        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                        <button type="button" class="btn btn-info" id="btnAceptar" onclick=', '>Aceptar</button>\n                    </div>\n                </div>              \n            </div>\n        </div>'], ['\n        <div class="modal-dialog modal-sm">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button> \n                    <h4 class="modal-title"><strong>Generar Series</strong></h4>\n                </div>\n                <div class="modal-body">\n\n\n                <form>\n                    <div class="form-group row">\n                        <label class="col-sm-5 col-form-label">Serie Inicial</label>\n                        <div class="col-sm-7">\n                            <input type="text" class="form-control" id="SerieInicial">\n                        </div>\n                    </div>\n                    <div class="form-group row"> \n                        <div class="radio col-sm-5 col-form-label">\n                            <label>\n                                <input type="radio" id="optionsGenerarSerie" name="optionsGenerarSerie" checked="checked" value="Cantidad" onchange="', '">Cantidad\n                            </label>\n                        </div>\n                         \n                        <div class="col-sm-7">\n                            <input type="number" class="form-control" id="Cantidad">\n                        </div>\n                    </div>\n\n                    <div class="form-group row"> \n                        <div class="radio col-sm-5 col-form-label">\n                            <label>\n                                <input type="radio" id="optionsGenerarSerie" name="optionsGenerarSerie" value="SerieFinal" onchange="', '">Serie Final\n                            </label>\n                        </div>\n                        \n                        <div class="col-sm-7">\n                            <input type="text" class="form-control" id="SerieFinal" onkeypress="', '" disabled>\n                        </div>\n                    </div>\n \n\n                    <div class="form-group row"> \n                        <div class="radio col-sm-4 col-form-label text-right">\n                            <label>\n                                a\n                            </label>\n                        </div>\n                        \n                        <div class="col-sm-4">\n                            <input type="number" class="form-control" id="Dias" value="0">\n                        </div>\n                        <div class="radio col-sm-4 col-form-label text-left">\n                            <label>\n                                Dia(s)\n                            </label>\n                        </div>\n                    </div>\n                 \n                </form>\n \n                    <div class="modal-footer text-center"> \n                        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>\n                        <button type="button" class="btn btn-info" id="btnAceptar" onclick=', '>Aceptar</button>\n                    </div>\n                </div>              \n            </div>\n        </div>']),
    _templateObject7 = _taggedTemplateLiteral(['<table class="table table-bordered table-striped" id="tablaSeries">\n                <thead>\n                    <th>Codigo</th>\n                    <th>Producto</th>\n                    <th>Serie</th>\n                    <th>Observacion</th>\n                </thead>\n                <tbody>\n                    \n                    \n                </tbody>\n\n            </table>'], ['<table class="table table-bordered table-striped" id="tablaSeries">\n                <thead>\n                    <th>Codigo</th>\n                    <th>Producto</th>\n                    <th>Serie</th>\n                    <th>Observacion</th>\n                </thead>\n                <tbody>\n                    \n                    \n                </tbody>\n\n            </table>']);

var _constantes = require('../../constantes_entorno/constantes');

var _tools = require('../../../utility/tools');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var empty = require('empty-element');
var yo = require('yo-yo');


var aCantidad = 0;
var NroDias = 60;
var aStock;

function VerBuscarPorSerie(almacenes) {

    var el = yo(_templateObject, almacenes.map(function (e) {
        return yo(_templateObject2, e.Cod_Almacen, e.Des_Almacen);
    }), function () {
        return BuscarSerie(event);
    }, function () {
        return BuscarSerie(event);
    });

    var modal_proceso = document.getElementById('modal-otros-procesos');
    empty(modal_proceso).appendChild(el);
    $('#modal-otros-procesos').modal();
}

function VerAsignarSeries(_Series, fecha, Stock, Cantidad) {

    var el = yo(_templateObject3, function () {
        return VerGenerarSeries(_Series, fecha, Stock, Cantidad);
    }, _Series.length == 0 ? yo(_templateObject4, fecha) : _Series.map(function (e) {
        return yo(_templateObject5, e.Serie, e.Fecha, e.Observacion);
    }), function () {
        return AceptarAsignarSerie();
    });

    var modal_proceso = document.getElementById('modal-otros-procesos');
    empty(modal_proceso).appendChild(el);
    $('#modal-otros-procesos').modal();
}

function VerGenerarSeries(_Series, fecha, Stock, Cantidad) {
    (0, _tools.LimpiarVariablesGlobales)();
    var el = yo(_templateObject6, function () {
        return CambioGenerarSerie();
    }, function () {
        return CambioGenerarSerie();
    }, function () {
        return CambioSerieFinal();
    }, function () {
        return AceptarGenerarSerie();
    });

    var modal_proceso = document.getElementById('modal-superior');
    empty(modal_proceso).appendChild(el);
    $('#modal-superior').modal();
}

function LlenarTablaSeries(productos) {

    if (productos.length == 1) {
        if (parseInt(productos[0].Stock) == 1) {
            var el = yo(_templateObject7);

            empty(document.getElementById('divTablaSeries')).appendChild(el);
            $("#txtBuscarSerie").val("");
            $("#txtBuscarSerie").focus();
        } else {
            toastr.error('El producto ya fue despachado de este Almacen', 'Error', { timeOut: 5000 });
            $("#txtBuscarSerie").val("");
            $("#txtBuscarSerie").focus();
        }
    } else {
        toastr.error('El producto ya se encuentra en este Almacen', 'Error', { timeOut: 5000 });
        $("#txtBuscarSerie").val("");
        $("#txtBuscarSerie").focus();
    }
}

function CambioGenerarSerie() {
    if ($("input[name=optionsGenerarSerie]:checked").val() == "Cantidad") {
        $("#SerieFinal").attr("disabled", true);
        $("#Cantidad").attr("disabled", false);
        $("#Cantidad").val("");
        $("#SerieFinal").val("");
    } else {
        $("#SerieFinal").attr("disabled", false);
        $("#Cantidad").val("");
        $("#SerieFinal").val("");
    }
}

function CambioSerieFinal() {
    try {
        $("#Cantidad").val(parseInt($("#SerieFinal").val()) - parseInt($("#SerieInicial").val()));
    } catch (e) {
        $("#Cantidad").val("0");
    }
}

function NumeroCeros(pCantidad) {
    switch (pCantidad) {
        case 1:
            return "0";
        case 2:
            return "00";
        case 3:
            return "000";
        case 4:
            return "0000";
        case 5:
            return "00000";
        case 6:
            return "000000";
        case 7:
            return "0000000";
        case 8:
            return "00000000";
        case 9:
            return "000000000";
        case 10:
            return "0000000000";
        case 11:
            return "00000000000";
        case 12:
            return "000000000000";
        case 13:
            return "0000000000000";
        case 14:
            return "00000000000000";
        case 15:
            return "000000000000000";
        case 16:
            return "0000000000000000";
        case 17:
            return "00000000000000000";
        case 18:
            return "000000000000000000";
        default:
            return "";

    }
}

function BuscarSerie(evente) {
    if (event.which == 13) {
        if ($("#txtBuscarSerie").val().trim() != '' && $("#txtBuscarSerie").val().length > 6) {
            TraerTOPXSerie();
        }
    }
}

function TraerTOPXSerie() {
    run_waitMe($('#modal-otros-procesos'), 3, "ios");
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Serie: $("#txtBuscarSerie").val(),
            Cod_Almacen: $("#Cod_AlmacenBuscarSerie").val()
        })
    };
    fetch(_constantes.URL + '/series_api/get_TOP_by_serie', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            LlenarTablaSeries(res.data.productos);
        }
        $('#modal-otros-procesos').waitMe('hide');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#modal-otros-procesos').waitMe('hide');
    });
}

function AceptarGenerarSerie() {
    var pSerieInicial = "";
    var pPreFijo = "";
    var pNumero = "";
    if ($('input[name=optionsGenerarSerie]:checked').val() == 'SerieFinal') {
        pSerieInicial = $("#SerieInicial").val();
        pPreFijo = ExtraerTextoIzquierda(pSerieInicial);
        pNumero = ExtraerNumeroDerecha(pSerieInicial);
        $('#tablaBodySeries tr').each(function () {
            //pPreFijo + (Int64.Parse(pNumero) + j).ToString(NumeroCeros(pNumero.Length));
            $(this).find("td.Serie").find('input').val(pPreFijo + NumeroCeros(pNumero.length) + (parseInt(pNumero) + 1));
            Date.prototype.addDays = function (days) {
                var dat = new Date(this.valueOf());
                dat.setDate(dat.getDate() + days);
                return dat;
            };
            var _fecha = new Date();
            _fecha.addDays(parseInt($("#Dias").val()));
            var mes = _fecha.getMonth() + 1;
            var dia = _fecha.getDate();
            var fecha_now = _fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);

            $(this).find("td.Fecha").find('input').val(fecha_now);
        });
    } else {
        pSerieInicial = $("#SerieInicial").val();
        pPreFijo = ExtraerTextoIzquierda(pSerieInicial);
        pNumero = ExtraerNumeroDerecha(pSerieInicial);
        $('#tablaBodySeries tr').each(function () {
            //pPreFijo + (Int64.Parse(pNumero) + j).ToString(NumeroCeros(pNumero.Length));
            $(this).find("td.Serie").find('input').val(pPreFijo + NumeroCeros(pNumero.length) + (parseInt(pNumero) + 1));
            Date.prototype.addDays = function (days) {
                var dat = new Date(this.valueOf());
                dat.setDate(dat.getDate() + days);
                return dat;
            };
            var _fecha = new Date();
            _fecha.addDays(parseInt($("#Dias").val()));
            var mes = _fecha.getMonth() + 1;
            var dia = _fecha.getDate();
            var fecha_now = _fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);

            $(this).find("td.Fecha").find('input').val(fecha_now);
        });
    }
    /*var pSerieInicial = "";
    var pPreFijo = "";
    var pNumero = "";
    pSerieInicial = $("#SerieInicial").val()
    pPreFijo = ExtraerTextoIzquierda(pSerieInicial)
    pNumero = ExtraerNumeroDerecha(pSerieInicial)
    $('#tablaBodySeries tr').each(function () {
        //pPreFijo + (Int64.Parse(pNumero) + j).ToString(NumeroCeros(pNumero.Length));
        $(this).find("td.Serie").find('input').val(pPreFijo + NumeroCeros(pNumero.length) + (parseInt(pNumero) + 1))
        Date.prototype.addDays = function (days) {
            var dat = new Date(this.valueOf());
            dat.setDate(dat.getDate() + days);
            return dat;
        }
        const _fecha = new Date()
        _fecha.addDays(parseInt($("#Dias").val()))
        const mes = _fecha.getMonth() + 1
        const dia = _fecha.getDate()
        var fecha_now = _fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia)
          $(this).find("td.Fecha").find('input').val(fecha_now)
      })*/

    $("#modal-superior").modal('hide');
}

function AceptarAsignarSerie() {
    var arraySeries = [];
    if (EsValido()) {
        $('#tablaBodySeries tr').each(function () {
            var data = {};
            data['Serie'] = $(this).find("td.Serie").find('input').val();
            data['Fecha'] = $(this).find("td.Fecha").find('input').val();
            data['Observacion'] = $(this).find("td.Observacion").find('input').val();
            arraySeries.push(data);
            $('#modal-otros-procesos').modal('hide');
            global.arraySeries = arraySeries;
        });
    } else {
        toastr.error('Debe de ingresar todas las series antes de salir de esta ventana', 'Error', { timeOut: 5000 });
    }
}

function ExtraerTextoIzquierda(pSerie) {
    try {
        var _Serie = parseInt(pSerie);
        return "";
    } catch (e) {
        return pSerie.substring(0, 1) + ExtraerTextoIzquierda(pSerie.substring(1, pSerie.Length - 1));
    }
}

function ExtraerNumeroDerecha(pSerie) {
    try {
        var _Serie = parseInt(pSerie);
        return pSerie;
    } catch (e) {
        return ExtraerNumeroDerecha(pSerie.substring(1, pSerie.Length - 1));
    }
}

function EsValido() {
    var _EsValido = false;
    $('#tablaBodySeries tr').each(function () {
        if ($(this).find("td.Serie").find('input').val().trim() == "") {
            return false;
        } else {
            _EsValido = true;
        }
    });
    return _EsValido;
}

function AsignarSeriesModal(Cod_Almacen, Id_Producto, Cantidad, NroDias, _Series, fecha, Stock) {
    $('#modal-otros-procesos').waitMe('hide');
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Id_Producto: Id_Producto,
            Cod_Almacen: Cod_Almacen
        })
    };
    fetch(_constantes.URL + '/series_api/get_variables_series', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            Date.prototype.addDays = function (days) {
                var dat = new Date(this.valueOf());
                dat.setDate(dat.getDate() + days);
                return dat;
            };
            var _fecha = new Date();
            _fecha.addDays(NroDias);
            var mes = _fecha.getMonth() + 1;
            var dia = _fecha.getDate();
            var fecha_now = _fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia);
            VerAsignarSeries(_Series, fecha_now, Stock, Cantidad);
            $('#modal-otros-procesos').waitMe('hide');
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#modal-otros-procesos').waitMe('hide');
    });

    //VerAsignarSeries(CodAlmacen, IdProducto,Cantidad,NroDias)
}

function BuscarPorSerie() {
    run_waitMe($('#modal-otros-procesos'), 3, "ios");
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({})
    };
    fetch(_constantes.URL + '/almacenes_api/get_almacenes_by_caja', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var almacenes = res.data.almacenes;
            VerBuscarPorSerie(almacenes);
            $('#modal-otros-procesos').waitMe('hide');
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#modal-otros-procesos').waitMe('hide');
    });
}

exports.AsignarSeriesModal = AsignarSeriesModal;
exports.BuscarPorSerie = BuscarPorSerie;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../../../utility/tools":401,"../../constantes_entorno/constantes":377,"empty-element":338,"yo-yo":375}],398:[function(require,module,exports){
'use strict';

var _templateObject = _taggedTemplateLiteral(['\n        <div>\n            <section class="content-header" id="sectionModals">\n \n                <div class="modal fade" id="modal-alerta" style="z-index: 999999;">\n                     \n                </div>\n\n                <div class="modal modal-default fade" id="modal-justificacion" style="display: none;overflow: auto;">\n                     \n                </div>\n\n                <div class="modal fade" id="modal-superior" style="display: none;z-index: 1052;overflow: auto;" >\n                     \n                </div> \n\n                <div class="modal fade" id="modal-otros-procesos" style="display: none;z-index: 1051;overflow: auto;" >\n                     \n                </div>\n\n                <div class="modal fade" id="modal-proceso" style="overflow: auto;">\n                    \n                </div>\n            </section>\n            <section class="content">\n                <div class="row">\n                    <div class="col-md-12"> \n                        <div class="nav-tabs-custom">\n                            <ul class="nav nav-tabs" id="tabs">\n                                <li class="active"><a href="#tab_1" id="id_1" data-toggle="tab" aria-expanded="true" onclick=', '>Movimientos</a></li>\n                            </ul>\n                            <div class="tab-content" id="tabs_contents">\n                                <div class="tab-pane active" id="tab_1">\n                                    \n                                    <div class="box box-primary">\n                                        <div class="box-header"> \n                                            <h3 class="box-title">Movimientos de Caja ', '>  \n                                             </h3>\n                                        </div>\n                                        <!-- /.box-header -->\n                                        <div class="box-body">\n                                            <div class="table-responsive">\n                                            <table id="tablaMovimientos" class="table table-bordered table-striped">\n                                                <thead>\n                                                    <tr>\n                                                        <th>E</th>\n                                                        <th>Fecha/Hora</th>\n                                                        <th>D</th>\n                                                        <th>Documento</th>\n                                                        <th>Cliente/Proveedor</th>\n                                                        <th>Descripcion</th>\n                                                        <th>Plan</th>\n                                                        <th>Cantidad</th>\n                                                        <th>PU</th>\n                                                        <th>Ingreso</th>\n                                                        <th>Egreso</th>\n                                                        <th>Acciones</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                ', '\n                                                </tbody>\n                    \n                                            </table>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>'], ['\n        <div>\n            <section class="content-header" id="sectionModals">\n \n                <div class="modal fade" id="modal-alerta" style="z-index: 999999;">\n                     \n                </div>\n\n                <div class="modal modal-default fade" id="modal-justificacion" style="display: none;overflow: auto;">\n                     \n                </div>\n\n                <div class="modal fade" id="modal-superior" style="display: none;z-index: 1052;overflow: auto;" >\n                     \n                </div> \n\n                <div class="modal fade" id="modal-otros-procesos" style="display: none;z-index: 1051;overflow: auto;" >\n                     \n                </div>\n\n                <div class="modal fade" id="modal-proceso" style="overflow: auto;">\n                    \n                </div>\n            </section>\n            <section class="content">\n                <div class="row">\n                    <div class="col-md-12"> \n                        <div class="nav-tabs-custom">\n                            <ul class="nav nav-tabs" id="tabs">\n                                <li class="active"><a href="#tab_1" id="id_1" data-toggle="tab" aria-expanded="true" onclick=', '>Movimientos</a></li>\n                            </ul>\n                            <div class="tab-content" id="tabs_contents">\n                                <div class="tab-pane active" id="tab_1">\n                                    \n                                    <div class="box box-primary">\n                                        <div class="box-header"> \n                                            <h3 class="box-title">Movimientos de Caja ', '>  \n                                             </h3>\n                                        </div>\n                                        <!-- /.box-header -->\n                                        <div class="box-body">\n                                            <div class="table-responsive">\n                                            <table id="tablaMovimientos" class="table table-bordered table-striped">\n                                                <thead>\n                                                    <tr>\n                                                        <th>E</th>\n                                                        <th>Fecha/Hora</th>\n                                                        <th>D</th>\n                                                        <th>Documento</th>\n                                                        <th>Cliente/Proveedor</th>\n                                                        <th>Descripcion</th>\n                                                        <th>Plan</th>\n                                                        <th>Cantidad</th>\n                                                        <th>PU</th>\n                                                        <th>Ingreso</th>\n                                                        <th>Egreso</th>\n                                                        <th>Acciones</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                ', '\n                                                </tbody>\n                    \n                                            </table>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>']),
    _templateObject2 = _taggedTemplateLiteral(['\n                                                <tr>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>\n                                                    ', '\n                                                    </td>\n                                                </tr>'], ['\n                                                <tr>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>', '</td>\n                                                    <td>\n                                                    ', '\n                                                    </td>\n                                                </tr>']),
    _templateObject3 = _taggedTemplateLiteral(['<div class="btn-group">\n                                                            <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                                                            Elegir una accion <span class="caret"></span>\n                                                            </button>\n                                                            <ul class="dropdown-menu">\n                                                                <li><a href="javascript:void(0)" onclick=', ' ><i class="fa fa-times-circle"></i>Anular</a></li>\n                                                                <li><a href="javascript:void(0)" onclick=', ' ><i class="fa fa-print"></i>Reimprimir</a></li>\n                                                                <li><a href="javascript:void(0)" ><i class="fa fa-refresh"></i>Cambiar Plan</a></li>\n                                                                <li><a href="javascript:void(0)" onclick=', '><i class="fa fa-calendar"></i>Cambiar Turno</a></li>\n                                                                <li><a href="javascript:void(0)" onclick=', '><i class="fa fa-close"></i> Eliminar</a></li>\n                                                            </ul>\n                                                        </div>'], ['<div class="btn-group">\n                                                            <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                                                            Elegir una accion <span class="caret"></span>\n                                                            </button>\n                                                            <ul class="dropdown-menu">\n                                                                <li><a href="javascript:void(0)" onclick=', ' ><i class="fa fa-times-circle"></i>Anular</a></li>\n                                                                <li><a href="javascript:void(0)" onclick=', ' ><i class="fa fa-print"></i>Reimprimir</a></li>\n                                                                <li><a href="javascript:void(0)" ><i class="fa fa-refresh"></i>Cambiar Plan</a></li>\n                                                                <li><a href="javascript:void(0)" onclick=', '><i class="fa fa-calendar"></i>Cambiar Turno</a></li>\n                                                                <li><a href="javascript:void(0)" onclick=', '><i class="fa fa-close"></i> Eliminar</a></li>\n                                                            </ul>\n                                                        </div>']),
    _templateObject4 = _taggedTemplateLiteral(['\n                                                    <div class="btn-group">\n                                                        <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                                                        Elegir una accion <span class="caret"></span>\n                                                        </button>\n                                                        <ul class="dropdown-menu"> \n                                                            <li><a href="javascript:void(0)" onclick=', ' ><i class="fa fa-print"></i>Reimprimir</a></li>\n                                                        </ul>\n                                                    </div>\n                                                    '], ['\n                                                    <div class="btn-group">\n                                                        <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                                                        Elegir una accion <span class="caret"></span>\n                                                        </button>\n                                                        <ul class="dropdown-menu"> \n                                                            <li><a href="javascript:void(0)" onclick=', ' ><i class="fa fa-print"></i>Reimprimir</a></li>\n                                                        </ul>\n                                                    </div>\n                                                    ']),
    _templateObject5 = _taggedTemplateLiteral(['\n        <div class="row">\n            <div class="col-sm-7"></div>\n            <div class="col-sm-5">\n                <table class="table table-bordered">\n                    <thead>\n                        <tr>\n                            <th>Moneda</th>\n                            <th>Saldo Inicial</th>\n                            <th>Ingresos</th>\n                            <th>Egresos</th>\n                            <th>Saldo Final</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        ', '\n                    </tbody>\n                </table>\n            </div>\n        </div>'], ['\n        <div class="row">\n            <div class="col-sm-7"></div>\n            <div class="col-sm-5">\n                <table class="table table-bordered">\n                    <thead>\n                        <tr>\n                            <th>Moneda</th>\n                            <th>Saldo Inicial</th>\n                            <th>Ingresos</th>\n                            <th>Egresos</th>\n                            <th>Saldo Final</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        ', '\n                    </tbody>\n                </table>\n            </div>\n        </div>']),
    _templateObject6 = _taggedTemplateLiteral(['\n                            <tr>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                            </tr>\n                        '], ['\n                            <tr>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                            </tr>\n                        ']),
    _templateObject7 = _taggedTemplateLiteral([' \n            <div class="modal-dialog">\n                <div class="modal-content">\n                    <div class="modal-header">\n                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                            <span aria-hidden="true">\xD7</span>\n                        </button>\n                        <h4 class="modal-title">', '</h4>\n                    </div>\n                    <div class="modal-body">\n                        <div class="row">\n                            <div id="modal_error" class="callout callout-danger hidden">\n                                <p> Es necesario llenar los campos marcados con rojo</p>\n                            </div>\n                        </div>\n                        <p>', '</p>\n                        <div class="row" id="modal_form">\n                            <div class="col-md-12">\n                                <div class="form-group">\n                                    <input type="text" id="txtJustificacion" class="form-control required">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="modal-footer">\n                        <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                        <button type="button" class="btn btn-primary" id="btnExtornarAnular" onclick=', '>Aceptar</button>\n                    </div>\n                </div>\n                <!-- /.modal-content -->\n            </div>'], [' \n            <div class="modal-dialog">\n                <div class="modal-content">\n                    <div class="modal-header">\n                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                            <span aria-hidden="true">\xD7</span>\n                        </button>\n                        <h4 class="modal-title">', '</h4>\n                    </div>\n                    <div class="modal-body">\n                        <div class="row">\n                            <div id="modal_error" class="callout callout-danger hidden">\n                                <p> Es necesario llenar los campos marcados con rojo</p>\n                            </div>\n                        </div>\n                        <p>', '</p>\n                        <div class="row" id="modal_form">\n                            <div class="col-md-12">\n                                <div class="form-group">\n                                    <input type="text" id="txtJustificacion" class="form-control required">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="modal-footer">\n                        <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                        <button type="button" class="btn btn-primary" id="btnExtornarAnular" onclick=', '>Aceptar</button>\n                    </div>\n                </div>\n                <!-- /.modal-content -->\n            </div>']),
    _templateObject8 = _taggedTemplateLiteral(['\n                <div>\n                    \n                    <div class="modal fade" id="modal-alerta" style="z-index: 999999;">\n                     \n                    </div>\n\n                    <div class="modal modal-default fade" id="modal-justificacion" style="display: none;overflow: auto;">\n                        \n                    </div>\n\n                    <div class="modal fade" id="modal-otros-procesos" style="display: none;z-index: 1051;overflow: auto;">\n                     \n                    </div>\n\n                    <div class="modal fade" id="modal-superior" style="display: none;z-index: 1051;overflow: auto;" >\n                        \n                    </div>\n                    <div class="modal fade" id="modal-proceso" style="overflow: auto;">\n                        \n                    </div>\n                </div>'], ['\n                <div>\n                    \n                    <div class="modal fade" id="modal-alerta" style="z-index: 999999;">\n                     \n                    </div>\n\n                    <div class="modal modal-default fade" id="modal-justificacion" style="display: none;overflow: auto;">\n                        \n                    </div>\n\n                    <div class="modal fade" id="modal-otros-procesos" style="display: none;z-index: 1051;overflow: auto;">\n                     \n                    </div>\n\n                    <div class="modal fade" id="modal-superior" style="display: none;z-index: 1051;overflow: auto;" >\n                        \n                    </div>\n                    <div class="modal fade" id="modal-proceso" style="overflow: auto;">\n                        \n                    </div>\n                </div>']),
    _templateObject9 = _taggedTemplateLiteral(['<div class="box box-primary">\n                    <div class="box-header">\n                        <h3 class="box-title">Movimientos de Caja ', '</h3>\n                    </div>\n                    <!-- /.box-header -->\n                    <div class="box-body">\n                        <div class="table-responsive">\n                        <table id="tablaMovimientos" class="table table-bordered table-striped">\n                            <thead>\n                                <tr>\n                                    <th>E</th>\n                                    <th>Fecha/Hora</th>\n                                    <th>D</th>\n                                    <th>Documento</th>\n                                    <th>Cliente/Proveedor</th>\n                                    <th>Descripcion</th>\n                                    <th>Plan</th>\n                                    <th>Cantidad</th>\n                                    <th>PU</th>\n                                    <th>Ingreso</th>\n                                    <th>Egreso</th>\n                                    <th>Acciones</th>\n                                </tr>\n                            </thead>\n                            <tbody class="context-menu-one">\n                            ', '\n                            </tbody>\n\n                        </table>\n                        </div>\n                    </div>\n                </div>'], ['<div class="box box-primary">\n                    <div class="box-header">\n                        <h3 class="box-title">Movimientos de Caja ', '</h3>\n                    </div>\n                    <!-- /.box-header -->\n                    <div class="box-body">\n                        <div class="table-responsive">\n                        <table id="tablaMovimientos" class="table table-bordered table-striped">\n                            <thead>\n                                <tr>\n                                    <th>E</th>\n                                    <th>Fecha/Hora</th>\n                                    <th>D</th>\n                                    <th>Documento</th>\n                                    <th>Cliente/Proveedor</th>\n                                    <th>Descripcion</th>\n                                    <th>Plan</th>\n                                    <th>Cantidad</th>\n                                    <th>PU</th>\n                                    <th>Ingreso</th>\n                                    <th>Egreso</th>\n                                    <th>Acciones</th>\n                                </tr>\n                            </thead>\n                            <tbody class="context-menu-one">\n                            ', '\n                            </tbody>\n\n                        </table>\n                        </div>\n                    </div>\n                </div>']),
    _templateObject10 = _taggedTemplateLiteral(['\n                            <tr>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>\n\n                                ', '\n                                </td>\n                            </tr>'], ['\n                            <tr>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>', '</td>\n                                <td>\n\n                                ', '\n                                </td>\n                            </tr>']),
    _templateObject11 = _taggedTemplateLiteral(['<div class="btn-group">\n                                        <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                                        Elegir una accion <span class="caret"></span>\n                                        </button>\n                                        <ul class="dropdown-menu">\n                                            <li><a href="javascript:void(0)" onclick=', ' ><i class="fa fa-times-circle"></i>Anular</a></li>\n                                            <li><a href="javascript:void(0)" onclick=', ' ><i class="fa fa-print"></i>Reimprimir</a></li>\n                                            <li><a href="javascript:void(0)"  ><i class="fa fa-refresh"></i>Cambiar Plan</a></li>\n                                            <li><a href="javascript:void(0)" onclick=', '><i class="fa fa-calendar"></i>Cambiar Turno</a></li>\n                                            <li><a href="javascript:void(0)" onclick=', '><i class="fa fa-close"></i> Eliminar</a></li>\n                                        </ul>\n                                    </div>'], ['<div class="btn-group">\n                                        <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                                        Elegir una accion <span class="caret"></span>\n                                        </button>\n                                        <ul class="dropdown-menu">\n                                            <li><a href="javascript:void(0)" onclick=', ' ><i class="fa fa-times-circle"></i>Anular</a></li>\n                                            <li><a href="javascript:void(0)" onclick=', ' ><i class="fa fa-print"></i>Reimprimir</a></li>\n                                            <li><a href="javascript:void(0)"  ><i class="fa fa-refresh"></i>Cambiar Plan</a></li>\n                                            <li><a href="javascript:void(0)" onclick=', '><i class="fa fa-calendar"></i>Cambiar Turno</a></li>\n                                            <li><a href="javascript:void(0)" onclick=', '><i class="fa fa-close"></i> Eliminar</a></li>\n                                        </ul>\n                                    </div>']),
    _templateObject12 = _taggedTemplateLiteral(['\n                                <div class="btn-group">\n                                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" disabled>\n                                    Elegir una accion <span class="caret"></span>\n                                    </button>\n                                </div>\n                                '], ['\n                                <div class="btn-group">\n                                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" disabled>\n                                    Elegir una accion <span class="caret"></span>\n                                    </button>\n                                </div>\n                                ']),
    _templateObject13 = _taggedTemplateLiteral(['\n                <div class="row">\n                    <div class="col-sm-7"></div>\n                    <div class="col-sm-5">\n                        <table class="table table-bordered">\n                            <thead>\n                                <tr>\n                                    <th>Moneda</th>\n                                    <th>Saldo Inicial</th>\n                                    <th>Ingresos</th>\n                                    <th>Egresos</th>\n                                    <th>Saldo Final</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                ', '\n                            </tbody>\n                        </table>\n                    </div>\n                </div>'], ['\n                <div class="row">\n                    <div class="col-sm-7"></div>\n                    <div class="col-sm-5">\n                        <table class="table table-bordered">\n                            <thead>\n                                <tr>\n                                    <th>Moneda</th>\n                                    <th>Saldo Inicial</th>\n                                    <th>Ingresos</th>\n                                    <th>Egresos</th>\n                                    <th>Saldo Final</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                ', '\n                            </tbody>\n                        </table>\n                    </div>\n                </div>']),
    _templateObject14 = _taggedTemplateLiteral(['\n                                    <tr>\n                                        <td>', '</td>\n                                        <td>', '</td>\n                                        <td>', '</td>\n                                        <td>', '</td>\n                                        <td>', '</td>\n                                    </tr>\n                                '], ['\n                                    <tr>\n                                        <td>', '</td>\n                                        <td>', '</td>\n                                        <td>', '</td>\n                                        <td>', '</td>\n                                        <td>', '</td>\n                                    </tr>\n                                ']),
    _templateObject15 = _taggedTemplateLiteral(['\n        <div class="modal-dialog modal-sm">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title" id="txtTitulo">Cambiar Manguera </h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="form-group">\n                                <label for="Manguera">Seleccione una manguera</label>\n                                <select id="Manguera" class="form-control">\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                        \n                </div>\n                <div class="modal-footer">\n                    <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-primary" id="btnCambiarTurno" onclick=', '>Aceptar</button>\n                </div>\n            </div>\n            <!-- /.modal-content -->\n        </div>'], ['\n        <div class="modal-dialog modal-sm">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">\xD7</span>\n                    </button>\n                    <h4 class="modal-title" id="txtTitulo">Cambiar Manguera </h4>\n                </div>\n                <div class="modal-body">\n                    <div class="row">\n                        <div class="col-md-12">\n                            <div class="form-group">\n                                <label for="Manguera">Seleccione una manguera</label>\n                                <select id="Manguera" class="form-control">\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                        \n                </div>\n                <div class="modal-footer">\n                    <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                    <button type="button" class="btn btn-primary" id="btnCambiarTurno" onclick=', '>Aceptar</button>\n                </div>\n            </div>\n            <!-- /.modal-content -->\n        </div>']),
    _templateObject16 = _taggedTemplateLiteral(['\n    <div class="modal-dialog modal-sm">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title">Seleccione el turno </h4>\n            </div>\n            <div class="modal-body">\n                <div class="row">\n                    <div class="col-md-12">\n                        <div class="form-group">\n                        <label for="Gestion">Gestion</label>\n                            <input type="number" id="Gestion" value=', ' class="form-control" onkeyup=', ' onchange=', '>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-12">\n                        <div class="form-group">\n                        <label for="Periodo">Periodo</label>\n                            <select id="Periodo" class="form-control" onchange=', '>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-12">\n                        <div class="form-group">\n                        <label for="Turno">Turno</label>\n                            <select id="Turno" class="form-control">\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                <button type="button" class="btn btn-primary" id="btnCambiarTurno" onclick=', '>Aceptar</button>\n            </div>\n        </div>\n        <!-- /.modal-content -->\n    </div>'], ['\n    <div class="modal-dialog modal-sm">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">\xD7</span>\n                </button>\n                <h4 class="modal-title">Seleccione el turno </h4>\n            </div>\n            <div class="modal-body">\n                <div class="row">\n                    <div class="col-md-12">\n                        <div class="form-group">\n                        <label for="Gestion">Gestion</label>\n                            <input type="number" id="Gestion" value=', ' class="form-control" onkeyup=', ' onchange=', '>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-12">\n                        <div class="form-group">\n                        <label for="Periodo">Periodo</label>\n                            <select id="Periodo" class="form-control" onchange=', '>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-12">\n                        <div class="form-group">\n                        <label for="Turno">Turno</label>\n                            <select id="Turno" class="form-control">\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                <button type="button" class="btn btn-primary" id="btnCambiarTurno" onclick=', '>Aceptar</button>\n            </div>\n        </div>\n        <!-- /.modal-content -->\n    </div>']),
    _templateObject17 = _taggedTemplateLiteral(['\n            <div class="modal-dialog">\n                <div class="modal-content">\n                    <div class="modal-header">\n                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                            <span aria-hidden="true">\xD7</span>\n                        </button>\n                        <h4 class="modal-title">Se eliminara el dato seleccionado</h4>\n                    </div>\n                    <div class="modal-body">\n                        <p>\xBFEsta seguro de eliminar este comprobante?</p>\n                    </div>\n                    <div class="modal-footer">\n                        <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                        <button type="button" class="btn btn-primary" onclick=', '>Aceptar</button>\n                    </div>\n                </div>\n                <!-- /.modal-content -->\n            </div>'], ['\n            <div class="modal-dialog">\n                <div class="modal-content">\n                    <div class="modal-header">\n                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                            <span aria-hidden="true">\xD7</span>\n                        </button>\n                        <h4 class="modal-title">Se eliminara el dato seleccionado</h4>\n                    </div>\n                    <div class="modal-body">\n                        <p>\xBFEsta seguro de eliminar este comprobante?</p>\n                    </div>\n                    <div class="modal-footer">\n                        <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                        <button type="button" class="btn btn-primary" onclick=', '>Aceptar</button>\n                    </div>\n                </div>\n                <!-- /.modal-content -->\n            </div>']),
    _templateObject18 = _taggedTemplateLiteral(['\n            <div class="modal-dialog">\n                <div class="modal-content">\n                    <div class="modal-header">\n                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                            <span aria-hidden="true">\xD7</span>\n                        </button>\n                        <h4 class="modal-title">Se eliminara el dato seleccionado</h4>\n                    </div>\n                    <div class="modal-body">\n                        <p>\xBFEsta seguro de extornar este comprobante?</p>\n                    </div>\n                    <div class="modal-footer">\n                        <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                        <button type="button" class="btn btn-primary" onclick=', '>Aceptar</button>\n                    </div>\n                </div>\n                <!-- /.modal-content -->\n            </div>'], ['\n            <div class="modal-dialog">\n                <div class="modal-content">\n                    <div class="modal-header">\n                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                            <span aria-hidden="true">\xD7</span>\n                        </button>\n                        <h4 class="modal-title">Se eliminara el dato seleccionado</h4>\n                    </div>\n                    <div class="modal-body">\n                        <p>\xBFEsta seguro de extornar este comprobante?</p>\n                    </div>\n                    <div class="modal-footer">\n                        <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancelar</button>\n                        <button type="button" class="btn btn-primary" onclick=', '>Aceptar</button>\n                    </div>\n                </div>\n                <!-- /.modal-content -->\n            </div>']),
    _templateObject19 = _taggedTemplateLiteral(['\n        ', ''], ['\n        ', '']),
    _templateObject20 = _taggedTemplateLiteral(['\n             <option value="', '">', '</option>\n        '], ['\n             <option value="', '">', '</option>\n        ']),
    _templateObject21 = _taggedTemplateLiteral(['\n    ', ''], ['\n    ', '']),
    _templateObject22 = _taggedTemplateLiteral(['\n         <option value="', '">', '</option>\n    '], ['\n         <option value="', '">', '</option>\n    ']);

var _constantes = require('../../constantes_entorno/constantes');

var _pdf = require('../modales/pdf');

var _tools = require('../../../utility/tools');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var yo = require('yo-yo');
var empty = require('empty-element');


function Ver(Flag_Cerrado, movimientos, saldos, callback) {
    var el = yo(_templateObject, function () {
        return refrescar_movimientos_caja();
    }, Flag_Cerrado ? ' - EL TURNO ESTA CERRADO' : '', movimientos.map(function (u) {
        return yo(_templateObject2, u.ID, u.Fecha_Reg.split('.')[0], u.ID, u.Documento, u.Cliente, u.Movimiento, u.Cod_Manguera, u.Cantidad, u.PrecioUnitario, u.Ingreso, u.Egreso, !Flag_Cerrado ? yo(_templateObject3, function () {
            return AbrirModalConfirmacion('extornar', u);
        }, function () {
            return VerFormatoDocumento(u);
        }, function () {
            return AbrirModalCambiarTurno(u);
        }, function () {
            return AbrirModalConfirmacion('eliminar', u);
        }) : yo(_templateObject4, function () {
            return VerFormatoDocumento(u);
        }));
    }));
    var footer_element = yo(_templateObject5, saldos.map(function (s) {
        return yo(_templateObject6, s.Moneda, s.SaldoInicial, s.Ingresos, s.Egresos, s.SaldoFinal);
    }));
    var container = document.getElementById('main-contenido');
    empty(container).appendChild(el);
    var footer = document.getElementById('content_footer');
    empty(footer).appendChild(footer_element);
    $('#tablaMovimientos').DataTable({
        "lengthChange": false,
        "order": [[1, "desc"]],
        "oLanguage": {
            "sSearch": "Buscar:"
        }
    });
    callback(true);
}

function GenerarPDF(titulo, subtitulo, subtitulo_extra, arrayData) {
    (0, _pdf.CargarPDFModal)(titulo, subtitulo, subtitulo_extra, function (flag) {
        if (flag) {
            jsreport.serverUrl = _constantes.URL_REPORT;
            var request = {
                template: {
                    name: arrayData.nombreTemplate,
                    recipe: "chrome-pdf",
                    engine: 'handlebars',
                    chrome: {
                        width: arrayData.ancho,
                        height: arrayData.alto
                    }
                },
                data: arrayData.cuerpo
            };

            jsreport.renderAsync(request).then(function (res) {
                jsreport.render(document.getElementById('divPDF'), request);
            }).catch(function (e) {
                toastr.error('Hubo un error al generar el documento. Intentelo mas tarde', 'Error', { timeOut: 5000 });
                $('#modal-alerta').modal('hide');
            });
        }
    });
}

function VerModalJustificacion(titulo, descripcion, movimiento, flag) {
    var el = yo(_templateObject7, titulo, descripcion, function () {
        return ExtornarAnular(movimiento, flag);
    });

    var modal_justificacion = document.getElementById('modal-justificacion');
    empty(modal_justificacion).appendChild(el);
    $('#modal-justificacion').modal();
}

function VerTabCaja(Flag_Cerrado, movimientos, saldos) {
    var sectionModals = yo(_templateObject8);

    var el = yo(_templateObject9, Flag_Cerrado ? ' - EL TURNO ESTA CERRADO' : '', movimientos.map(function (u) {
        return yo(_templateObject10, u.ID, u.Fecha_Reg.split('.')[0], u.ID, u.Documento, u.Cliente, u.Movimiento, u.Cod_Manguera, u.Cantidad, u.PrecioUnitario, u.Ingreso, u.Egreso, !Flag_Cerrado ? yo(_templateObject11, function () {
            return AbrirModalConfirmacion('extornar', u);
        }, function () {
            return VerFormatoDocumento(u);
        }, function () {
            return AbrirModalCambiarTurno(u);
        }, function () {
            return AbrirModalConfirmacion('eliminar', u);
        }) : yo(_templateObject12));
    }));

    var sectionFooter = yo(_templateObject13, saldos.map(function (s) {
        return yo(_templateObject14, s.Moneda, s.SaldoInicial, s.Ingresos, s.Egresos, s.SaldoFinal);
    }));

    var sectionModalsElement = document.getElementById('sectionModals');
    empty(sectionModalsElement).appendChild(sectionModals);
    var container = document.getElementById('tab_1');
    empty(container).appendChild(el);
    $("#tab_1").click();
    $('#content_footer').html(sectionFooter);

    $('#tablaMovimientos').DataTable({
        "lengthChange": false,
        "order": [[1, "desc"]],
        "oLanguage": {
            "sSearch": "Buscar:"
        }
    });
}

function AbrirModalManguera(movimiento) {
    var el = yo(_templateObject15, function () {
        return GuardarManguera(movimiento);
    });
    var modal_proceso = document.getElementById('modal-alerta');
    empty(modal_proceso).appendChild(el);
    $('#modal-alerta').modal();
}

function AbrirModalCambiarTurno(movimiento) {

    var fecha = new Date();
    var anio = fecha.getFullYear();

    var el = yo(_templateObject16, anio, function () {
        return TraerPeriodos();
    }, function () {
        return TraerPeriodos();
    }, function () {
        return TraerTurnos();
    }, function () {
        return GuardarCambioTurno(movimiento);
    });
    var modal_proceso = document.getElementById('modal-alerta');
    empty(modal_proceso).appendChild(el);
    $('#modal-alerta').modal();
    TraerPeriodos();
}

function AbrirModalConfirmacion(flag, movimiento) {
    var el = '';
    if (flag == "eliminar") {
        el = yo(_templateObject17, function () {
            return AceptarConfirmacion(flag, movimiento);
        });
    } else {
        el = yo(_templateObject18, function () {
            return AceptarConfirmacion(flag, movimiento);
        });
    }

    var modal_proceso = document.getElementById('modal-alerta');
    empty(modal_proceso).appendChild(el);
    $('#modal-alerta').modal();
}

function LlenarPeriodo(periodos, idSelect) {
    var el = yo(_templateObject19, periodos.map(function (e) {
        return yo(_templateObject20, e.Cod_Periodo, e.Nom_Periodo);
    }));
    $("#" + idSelect).html('');
    $("#" + idSelect).html(el);
}

function LlenarTurnos(turnos, idSelect) {
    var el = yo(_templateObject19, turnos.map(function (e) {
        return yo(_templateObject20, e.Cod_Turno, e.Des_Turno);
    }));
    $("#" + idSelect).html('');
    $("#" + idSelect).html(el);
}

function LlenarManguera(mangueras, idSelect) {
    var el = yo(_templateObject21, mangueras.map(function (e) {
        return yo(_templateObject22, e.Cod_Turno, e.Des_Turno);
    }));
    $("#" + idSelect).html('');
    $("#" + idSelect).html(el);
}

function TraerPeriodos() {
    var Gestion = $("#Gestion").val();
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Gestion: Gestion
        })
    };
    fetch(_constantes.URL + '/empresa_api/get_periodos_by_gestion', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        LlenarPeriodo(res.data.periodos, 'Periodo');
        TraerTurnos();
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function TraerTurnos() {
    var Cod_Periodo = $("#Periodo").val();
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            Cod_Periodo: Cod_Periodo
        })
    };
    fetch(_constantes.URL + '/empresa_api/get_turnos_by_periodo', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        LlenarTurnos(res.data.turnos, 'Turno');
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function GuardarCambioTurno(movimiento) {
    var id_ComprobantePago = movimiento.ID;
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            id_ComprobantePago: id_ComprobantePago
        })
    };
    switch (movimiento.Entidad) {
        case "CAJ_COMPROBANTE_PAGO":

            var id_ComprobantePago = movimiento.ID;
            var Cod_Turno = $("#Turno").val();
            var parametrosCP = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                credentials: 'same-origin',
                body: JSON.stringify({
                    id_ComprobantePago: id_ComprobantePago,
                    Cod_Turno: Cod_Turno
                })
            };

            fetch(_constantes.URL + '/turnos_api/cambiar_comprobante_by_turno', parametrosCP).then(function (req) {
                return req.json();
            }).then(function (res) {
                $("#modal-alerta").modal("hide");
                refrescar_movimientos_caja();
                if (res.respuesta == 'ok') {
                    toastr.success('Se modifico correctamente el turno', 'Confirmacion', { timeOut: 5000 });
                } else {
                    toastr.error('No se pudo modificar el turno', 'Error', { timeOut: 5000 });
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
            break;
        case "CAJ_CAJA_MOVIMIENTOS":

            var Id_MovimientoCaja = movimiento.ID;
            var Cod_TurnoActual = $("#Turno").val();
            var parametrosCM = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                credentials: 'same-origin',
                body: JSON.stringify({
                    Id_MovimientoCaja: Id_MovimientoCaja,
                    Cod_TurnoActual: Cod_TurnoActual
                })
            };

            fetch(_constantes.URL + '/turnos_api/cambiar_movimientos_by_turno', parametrosCM).then(function (req) {
                return req.json();
            }).then(function (res) {
                $("#modal-alerta").modal("hide");
                refrescar_movimientos_caja();
                if (res.respuesta == 'ok') {
                    toastr.success('Se modifico correctamente el turno', 'Confirmacion', { timeOut: 5000 });
                } else {
                    toastr.error('No se pudo modificar el turno', 'Error', { timeOut: 5000 });
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
            break;
        case "ALM_ALMACEN_MOV":

            var Id_AlmacenMov = movimiento.ID;
            var Cod_TurnoActual = $("#Turno").val();
            var parametrosAM = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                credentials: 'same-origin',
                body: JSON.stringify({
                    Id_AlmacenMov: Id_AlmacenMov,
                    Cod_TurnoActual: Cod_TurnoActual
                })
            };

            fetch(_constantes.URL + '/turnos_api/cambiar_almacen_by_turno', parametrosAM).then(function (req) {
                return req.json();
            }).then(function (res) {
                $("#modal-alerta").modal("hide");
                refrescar_movimientos_caja();
                if (res.respuesta == 'ok') {
                    toastr.success('Se modifico correctamente el turno', 'Confirmacion', { timeOut: 5000 });
                } else {
                    toastr.error('No se pudo modificar el turno', 'Error', { timeOut: 5000 });
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
            break;
    }
}

function AceptarConfirmacion(flag, movimiento) {
    $("#modal-alerta").modal("hide");
    if (flag == "eliminar") {
        VerModalJustificacion("Ingrese una justificacion de eliminacion", "Por ejemplo : Por error de ingreso en monto", movimiento, flag);
    } else {
        VerModalJustificacion("Ingrese una justificacion del extorno / anulacion", "Por ejemplo : Por error de ingreso en", movimiento, flag);
    }
}

function VerFormatoDocumento(movimiento) {
    var entidad = movimiento.Entidad;
    var id_Movimiento = movimiento.ID;
    switch (entidad) {
        case 'CAJ_CAJA_MOVIMIENTOS':
            var descripcion = movimiento.Descripcion;
            if (descripcion != 'REQUIERE DE AUTORIZACION') {} else {
                toastr.error('No Puede imprimir un documento que Requiere de Autorizacion. Comuniquese con su Administrador.', 'Error', { timeOut: 5000 });
            }
            break;
        case 'CAJ_COMPROBANTE_PAGO':
            PrepararImpresion(id_Movimiento, function (flag) {
                if (!flag) {
                    toastr.error('No Puede imprimir el comprobante. Comuniquese con su Administrador.', 'Error', { timeOut: 5000 });
                }
            });
            break;
        case 'ALM_ALMACEN_MOV':
            break;
    }
}

function ExtornarAnular(movimiento, flag) {
    var id_Movimiento = movimiento.ID;
    var entidad = movimiento.Entidad;
    var MotivoAnulacion = $("#txtJustificacion").val();
    var fecha = new Date();
    var mes = fecha.getMonth() + 1;
    var dia = fecha.getDate();
    var fecha_format = fecha.getFullYear() + '-' + (mes > 9 ? mes : '0' + mes) + '-' + (dia > 9 ? dia : '0' + dia) + ' ' + [fecha.getHours() > 9 ? fecha.getHours() : '0' + fecha.getHours(), fecha.getMinutes() > 9 ? fecha.getMinutes() : '0' + fecha.getMinutes()].join(':');

    var parametros = {};
    if (ValidacionCampos('modal_error', 'modal_form')) {
        if (flag == "extornar") {
            switch (entidad) {
                case "CAJ_CAJA_MOVIMIENTOS":
                    parametros = {
                        method: 'POST',
                        headers: {
                            Accept: 'application/json',
                            'Content-Type': 'application/json'
                        },
                        credentials: 'same-origin',
                        body: JSON.stringify({
                            id_Movimiento: id_Movimiento
                        })
                    };
                    fetch(_constantes.URL + '/movimientos_caja_api/extornar_movimiento', parametros).then(function (req) {
                        return req.json();
                    }).then(function (res) {
                        $("#modal-justificacion").modal("hide");
                        //refrescar_movimientos_caja()
                        if (res.respuesta == 'ok') {
                            refrescar_movimientos_caja();
                            toastr.success('Se anulo correctamente el movimiento', 'Confirmacion', { timeOut: 5000 });
                        } else {
                            toastr.error('No se pudo anular correctamente el movimiento', 'Error', { timeOut: 5000 });
                        }
                    }).catch(function (e) {
                        console.log(e);
                        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                    });
                    break;
                case "CAJ_COMPROBANTE_PAGO":
                    console.log("CAJ_COMPROBANTE_PAGO");
                    parametros = {
                        method: 'POST',
                        headers: {
                            Accept: 'application/json',
                            'Content-Type': 'application/json'
                        },
                        credentials: 'same-origin',
                        body: JSON.stringify({
                            id_ComprobantePago: id_Movimiento
                        })
                    };
                    fetch(_constantes.URL + '/comprobantes_pago_api/get_comprobante_pago', parametros).then(function (req) {
                        return req.json();
                    }).then(function (res) {
                        var comprobante_pago = res.data.comprobante_pago[0];
                        var id_ComprobantePago = comprobante_pago.id_ComprobantePago;
                        if (comprobante_pago.Cod_TipoComprobante == 'TKF' || comprobante_pago.Cod_TipoComprobante == 'TKB') {
                            parametros = {
                                method: 'POST',
                                headers: {
                                    Accept: 'application/json',
                                    'Content-Type': 'application/json'
                                },
                                credentials: 'same-origin',
                                body: JSON.stringify({
                                    id_ComprobantePago: id_Movimiento,
                                    Fecha: fecha_format,
                                    MotivoAnulacion: MotivoAnulacion
                                })
                            };
                            fetch(_constantes.URL + '/comprobantes_pago_api/extornar_comprobante_pago', parametros).then(function (req) {
                                return req.json();
                            }).then(function (res) {
                                $("#modal-justificacion").modal("hide");
                                if (res.respuesta == 'ok') {
                                    PrepararImpresion(id_ComprobantePago, function (flag) {
                                        if (flag) toastr.success('Se anulo correctamente el comprobante', 'Confirmacion', { timeOut: 5000 });
                                        refrescar_movimientos_caja();
                                    });
                                } else {
                                    toastr.error('No se pudo anular correctamente el comprobante', 'Error', { timeOut: 5000 });
                                }
                            }).catch(function (e) {
                                console.log(e);
                                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                            });
                        } else {
                            if (comprobante_pago.Cod_TipoComprobante == 'FE' || comprobante_pago.Cod_TipoComprobante == 'BE') {
                                parametros = {
                                    method: 'POST',
                                    headers: {
                                        Accept: 'application/json',
                                        'Content-Type': 'application/json'
                                    },
                                    credentials: 'same-origin',
                                    body: JSON.stringify({
                                        id_ComprobantePago: id_Movimiento,
                                        Fecha: fecha_format,
                                        MotivoAnulacion: MotivoAnulacion
                                    })
                                };
                                fetch(_constantes.URL + '/comprobantes_pago_api/extornar_comprobante_pago', parametros).then(function (req) {
                                    return req.json();
                                }).then(function (res) {
                                    $("#modal-justificacion").modal("hide");
                                    if (res.respuesta == 'ok') {
                                        PrepararImpresion(id_ComprobantePago, function (flag) {
                                            if (flag) toastr.success('Se anulo correctamente el comprobante', 'Confirmacion', { timeOut: 5000 });
                                            refrescar_movimientos_caja();
                                        });
                                    } else {
                                        toastr.error('No se pudo anular correctamente el comprobante', 'Error', { timeOut: 5000 });
                                    }
                                }).catch(function (e) {
                                    console.log(e);
                                    toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                                });
                            } else {

                                parametros = {
                                    method: 'POST',
                                    headers: {
                                        Accept: 'application/json',
                                        'Content-Type': 'application/json'
                                    },
                                    credentials: 'same-origin',
                                    body: JSON.stringify({
                                        id_ComprobantePago: id_Movimiento,
                                        Fecha: fecha_format,
                                        MotivoAnulacion: MotivoAnulacion
                                    })
                                };
                                fetch(_constantes.URL + '/comprobantes_pago_api/extornar_comprobante_pago', parametros).then(function (req) {
                                    return req.json();
                                }).then(function (res) {
                                    $("#modal-justificacion").modal("hide");
                                    if (res.respuesta == 'ok') {
                                        PrepararImpresion(id_ComprobantePago, function (flag) {
                                            if (flag) toastr.success('Se anulo correctamente el comprobante', 'Confirmacion', { timeOut: 5000 });
                                            refrescar_movimientos_caja();
                                        });
                                    } else {
                                        toastr.error('No se pudo anular correctamente el comprobante', 'Error', { timeOut: 5000 });
                                    }
                                }).catch(function (e) {
                                    console.log(e);
                                    toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                                });
                            }
                        }
                        /*$("#modal-justificacion").modal("hide")  
                        if (res.respuesta == 'ok') { 
                            refrescar_movimientos_caja()
                            toastr.success('Se anulo correctamente el comprobante','Confirmacion',{timeOut: 5000})
                        }else{
                            toastr.error('No se pudo anular correctamente el comprobante','Error',{timeOut: 5000})
                        }*/
                    }).catch(function (e) {
                        console.log(e);
                        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                    });
                    break;
                case "ALM_ALMACEN_MOV":
                    var Id_Almacen_Mov = id_Movimiento;
                    parametros = {
                        method: 'POST',
                        headers: {
                            Accept: 'application/json',
                            'Content-Type': 'application/json'
                        },
                        credentials: 'same-origin',
                        body: JSON.stringify({
                            Id_Almacen_Mov: Id_Almacen_Mov
                        })
                    };
                    fetch(_constantes.URL + '/movimientos_caja_api/extornar_movimiento_almacen', parametros).then(function (req) {
                        return req.json();
                    }).then(function (res) {
                        $("#modal-justificacion").modal("hide");
                        //refrescar_movimientos_caja()
                        if (res.respuesta == 'ok') {
                            refrescar_movimientos_caja();
                            toastr.success('Se anulo correctamente el movimiento', 'Confirmacion', { timeOut: 5000 });
                        } else {
                            toastr.error('No se pudo anular correctamente el movimiento', 'Error', { timeOut: 5000 });
                        }
                    }).catch(function (e) {
                        console.log(e);
                        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                    });
                    break;
                case "CAJ_FORMA_PAGO":
                    var id_ComprobantePago = id_Movimiento;
                    var Item = movimiento.Item;
                    parametros = {
                        method: 'POST',
                        headers: {
                            Accept: 'application/json',
                            'Content-Type': 'application/json'
                        },
                        credentials: 'same-origin',
                        body: JSON.stringify({
                            id_ComprobantePago: id_ComprobantePago,
                            Item: Item
                        })
                    };
                    fetch(_constantes.URL + '/movimientos_caja_api/extornar_movimiento_almacen', parametros).then(function (req) {
                        return req.json();
                    }).then(function (res) {
                        $("#modal-justificacion").modal("hide");
                        //refrescar_movimientos_caja()
                        if (res.respuesta == 'ok') {
                            refrescar_movimientos_caja();
                            toastr.success('Se anulo correctamente el movimiento', 'Confirmacion', { timeOut: 5000 });
                        } else {
                            toastr.error('No se pudo anular correctamente el movimiento', 'Error', { timeOut: 5000 });
                        }
                    }).catch(function (e) {
                        console.log(e);
                        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                    });
                    break;

            }
        } else {

            switch (entidad) {
                case "CAJ_CAJA_MOVIMIENTOS":
                    parametros = {
                        method: 'POST',
                        headers: {
                            Accept: 'application/json',
                            'Content-Type': 'application/json'
                        },
                        credentials: 'same-origin',
                        body: JSON.stringify({
                            id_Movimiento: id_Movimiento

                        })
                    };
                    fetch(_constantes.URL + '/movimientos_caja_api/eliminar_movimiento', parametros).then(function (req) {
                        return req.json();
                    }).then(function (res) {
                        $("#modal-justificacion").modal("hide");
                        //refrescar_movimientos_caja()
                        if (res.respuesta == 'ok') {
                            refrescar_movimientos_caja();
                            toastr.success('Se elimino correctamente el movimiento', 'Confirmacion', { timeOut: 5000 });
                        } else {
                            toastr.error('No se pudo eliminar correctamente el movimiento', 'Error', { timeOut: 5000 });
                        }
                    }).catch(function (e) {
                        console.log(e);
                        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                    });
                    break;
                case "CAJ_COMPROBANTE_PAGO":
                    var Justificacion = $("#txtJustificacion").val();
                    var id_ComprobantePago = id_Movimiento;
                    parametros = {
                        method: 'POST',
                        headers: {
                            Accept: 'application/json',
                            'Content-Type': 'application/json'
                        },
                        credentials: 'same-origin',
                        body: JSON.stringify({
                            id_ComprobantePago: id_ComprobantePago,
                            Justificacion: Justificacion
                        })
                    };
                    fetch(_constantes.URL + '/movimientos_caja_api/eliminar_movimiento', parametros).then(function (req) {
                        return req.json();
                    }).then(function (res) {
                        $("#modal-justificacion").modal("hide");
                        //refrescar_movimientos_caja()
                        if (res.respuesta == 'ok') {
                            refrescar_movimientos_caja();
                            toastr.success('Se elimino correctamente el comprobante', 'Confirmacion', { timeOut: 5000 });
                        } else {
                            toastr.error('No se pudo eliminar correctamente el comprobante', 'Error', { timeOut: 5000 });
                        }
                    }).catch(function (e) {
                        console.log(e);
                        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                    });
                    break;
                case "ALM_ALMACEN_MOV":
                    var Id_AlmacenMov = id_Movimiento;
                    parametros = {
                        method: 'POST',
                        headers: {
                            Accept: 'application/json',
                            'Content-Type': 'application/json'
                        },
                        credentials: 'same-origin',
                        body: JSON.stringify({
                            Id_AlmacenMov: Id_AlmacenMov
                        })
                    };
                    fetch(_constantes.URL + '/movimientos_caja_api/eliminar_movimiento_almacen', parametros).then(function (req) {
                        return req.json();
                    }).then(function (res) {
                        $("#modal-justificacion").modal("hide");
                        //refrescar_movimientos_caja()
                        if (res.respuesta == 'ok') {
                            refrescar_movimientos_caja();
                            toastr.success('Se elimino correctamente el movimiento', 'Confirmacion', { timeOut: 5000 });
                        } else {
                            toastr.error('No se pudo eliminar correctamente el movimiento', 'Error', { timeOut: 5000 });
                        }
                    }).catch(function (e) {
                        console.log(e);
                        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
                    });
                    break;

            }
        }
    }
}

function RecuperarNombreComprobante(CodTipoComprobante) {
    switch (CodTipoComprobante) {
        case "BE":
            return "BOLETA ELECTRONICA";
        case "FE":
            return "FACTURA ELECTRONICA";
        case "NCE":
            return "NOTA DE CREDITO ELECTRONICA";
        case "NDE":
            return "NOTA DE DEBITO ELECTRONICO";
        case "TKB":
            return "TICKET BOLETA";
        case "TKF":
            return "TICKET FACTURA";
        case "NP":
            return "NOTA DE PEDIDO";
        default:
            return " ";
    }
}

function FormatearDataDetalles(indiceDetalles, arrayDetalles, arrayNuevo, callback) {
    if (indiceDetalles < arrayDetalles.length) {
        arrayNuevo.push({
            'DESCRIPCION': arrayDetalles[indiceDetalles].Descripcion,
            'UNIDAD': arrayDetalles[indiceDetalles].Nom_UnidadMedida,
            'CANTIDAD': arrayDetalles[indiceDetalles].Cantidad,
            'PRECIO_UNITARIO': arrayDetalles[indiceDetalles].PrecioUnitario,
            'DESCUENTO': arrayDetalles[indiceDetalles].Descuento,
            'SUBTOTAL': arrayDetalles[indiceDetalles].Sub_Total
        });
        FormatearDataDetalles(indiceDetalles + 1, arrayDetalles, arrayNuevo, callback);
    } else {
        callback(arrayNuevo);
    }
}

function FormatearDataObservaciones(obs_string, indiceObs, obs_xml, callback) {
    var xml = obs_xml != null ? obs_xml : '';
    var xmlDoc = parser.parseFromString(xml, "text/xml");
    if (xmlDoc.getElementsByTagName('REGISTRO').length > 0 && indiceObs < xmlDoc.getElementsByTagName('REGISTRO')[0].childNodes.length > 0) {
        obs_string = obs_string + ' ' + xmlDoc.getElementsByTagName('REGISTRO')[0].childNodes[indiceObs].nodeName + ':' + xmlDoc.getElementsByTagName('REGISTRO')[0].childNodes[indiceObs].nodeValue;
        FormatearDataObservaciones(obs_string, indexedDB + 1, obs_xml, callback);
        // return xmlDoc.getElementsByTagName(TAG)[0].childNodes[0].nodeValue
    } else {
        callback(obs_string);
    }
}

function PrepararImpresion(id_ComprobantePago, callback) {
    var parametrosC = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            id_ComprobantePago: id_ComprobantePago
        })
    };
    fetch(_constantes.URL + '/comprobantes_pago_api/get_comprobante_pago', parametrosC).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            var dataComprobante = res.data.comprobante_pago[0];

            var parametrosDC = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    id_ComprobantePago: id_ComprobantePago
                })
            };
            fetch(_constantes.URL + '/comprobantes_pago_api/get_detalle_by_comprobante_pago', parametrosDC).then(function (req) {
                return req.json();
            }).then(function (res) {
                if (res.respuesta == 'ok') {
                    callback(true);
                    var dataDetallesComprobante = res.data.detalles_comprobante_pago;
                    var dataEmpresa = res.empresa[0];
                    var arrayNuevo = [];
                    var obs_string = '';
                    FormatearDataDetalles(0, dataDetallesComprobante, arrayNuevo, function (arrayJson) {
                        FormatearDataObservaciones(obs_string, 0, dataComprobante.Obs_Comprobante, function (data_string) {
                            if (dataComprobante.Cod_Libro == '14') {
                                var arrayData = {
                                    nombreTemplate: dataComprobante.Cod_TipoComprobante == 'TKF' || dataComprobante.Cod_TipoComprobante == 'TKB' ? _constantes.NOMBRES_DOC[0].TKF : dataArray['nombreTemplate'] = _constantes.NOMBRES_DOC[1].FE,
                                    ancho: dataComprobante.Cod_TipoComprobante == 'TKF' || dataComprobante.Cod_TipoComprobante == 'TKB' ? _constantes.NOMBRES_DOC[0].ancho : _constantes.NOMBRES_DOC[1].ancho,
                                    alto: dataComprobante.Cod_TipoComprobante == 'TKF' || dataComprobante.Cod_TipoComprobante == 'TKB' ? _constantes.NOMBRES_DOC[0].alto : _constantes.NOMBRES_DOC[1].alto,
                                    cuerpo: {
                                        COD_TIPOCOMPROBANTE: dataComprobante.Cod_TipoComprobante,
                                        DOCUMENTO: RecuperarNombreComprobante(dataComprobante.Cod_TipoComprobante),
                                        SERIE: dataComprobante.Serie,
                                        NUMERO: dataComprobante.Numero,
                                        FLAG_ANULADO: dataComprobante.Flag_Anulado,
                                        MOTIVO_ANULACION: dataComprobante.MotivoAnulacion,
                                        CLIENTE: dataComprobante.Nom_Cliente,
                                        COD_DOCCLIENTE: dataComprobante.Cod_TipoDoc,
                                        RUC_CLIENTE: dataComprobante.Doc_Cliente,
                                        DIRECCION_CLIENTE: dataComprobante.Direccion_Cliente,
                                        FECHA_EMISION: dataComprobante.FechaEmision,
                                        FECHA_VENCIMIENTO: dataComprobante.FechaVencimiento,
                                        FORMA_PAGO: dataComprobante.Cod_FormaPago,
                                        GLOSA: dataComprobante.Glosa,
                                        OBSERVACIONES: data_string,
                                        MONEDA_ABREV: dataComprobante.Cod_Moneda == "PEN" ? "S/" : dataComprobante.Cod_Moneda == "USD" ? "$" : "â‚¬",
                                        MONEDA: dataComprobante.Cod_Moneda == "PEN" ? "SOLES" : dataComprobante.Cod_Moneda == "USD" ? "DOLARES" : "EUROS",
                                        ESCRITURA_MONTO: "SON: " + (0, _tools.ConvertirCadena)(parseFloat(dataComprobante.Total), dataComprobante.Cod_Moneda == "PEN" ? "S/" : dataComprobante.Cod_Moneda == "USD" ? "$" : "â‚¬"),
                                        GRAVADAS: (parseFloat(dataComprobante.Total) - parseFloat(dataComprobante.Impuesto)).toFixed(2),
                                        EXONERADAS: '0',
                                        GRATUITAS: '0',
                                        INAFECTAS: '0',
                                        DESCUENTO: '0',
                                        DES_IMPUESTO: dataEmpresa.Des_Impuesto,
                                        IMPUESTO: dataEmpresa.Por_Impuesto,
                                        IGV: parseFloat(dataComprobante.Impuesto).toFixed(2),
                                        TOTAL: parseFloat(dataComprobante.Total).toFixed(2),
                                        DETALLES: arrayJson
                                    }
                                };

                                GenerarPDF(arrayData.detalle.DOCUMENTO.toString().toUpperCase(), arrayData.detalle.SERIE + "-" + arrayData.detalle.NUMERO, "TOTAL: " + arrayData.detalle.MONEDA_ABREV + " " + arrayData.detalle.TOTAL, arrayData);
                            }
                        });

                        /*EnviarImpresion(dataComprobante.Cod_Libro,
                                        dataComprobante.Cod_TipoComprobante,
                                        RecuperarNombreComprobante(dataComprobante.Cod_TipoComprobante),
                                        dataComprobante.Serie,
                                        dataComprobante.Numero,
                                        true,
                                        dataComprobante.MotivoAnulacion,
                                        dataComprobante.Nom_Cliente,
                                        dataComprobante.COd_TipoDoc,
                                        dataComprobante.Doc_Cliente,
                                        dataComprobante.Direccion_Cliente,
                                        dataComprobante.FechaEmision,
                                        dataComprobante.FechaVencimiento,
                                        dataComprobante.Cod_FormaPago,
                                        dataComprobante.Glosa,*/
                    });
                } else {
                    toastr.error('No se pudo recuperar los detalles del comprobante', 'Error', { timeOut: 5000 });
                    callback(false);
                }
            }).catch(function (e) {
                console.log(e);
                toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
            });
        } else {
            toastr.error('No se pudo recuperar el comprobante', 'Error', { timeOut: 5000 });
            callback(false);
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
    });
}

function refrescar_movimientos_caja() {
    run_waitMe($('#main-contenido'), 1, "ios");
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({})
    };
    fetch(_constantes.URL + '/movimientos_caja_api/get_movimientos', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {

            VerTabCaja(res.arqueo != null ? res.arqueo.Flag_Cerrado : true, res.data.movimientos, res.data.saldos, function (flag) {
                $('#main-contenido').waitMe('hide');
            });
        } else {
            toastr.error('Ocurrio un error. Actualice la pagina e intentelo nuevamente', 'Error', { timeOut: 5000 });
            $('#main-contenido').waitMe('hide');
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#main-contenido').waitMe('hide');
    });
}

module.exports = function movimientos_caja(ctx, next) {
    run_waitMe($('#main-contenido'), 1, "ios");
    var parametros = {
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({})
    };
    fetch(_constantes.URL + '/movimientos_caja_api/get_movimientos', parametros).then(function (req) {
        return req.json();
    }).then(function (res) {
        if (res.respuesta == 'ok') {
            Ver(res.arqueo != null ? res.arqueo.Flag_Cerrado : true, res.data.movimientos, res.data.saldos, function (flag) {
                $('#main-contenido').waitMe('hide');
            });
        } else {
            toastr.error('Ocurrio un error. Actualice la pagina e intentelo nuevamente', 'Error', { timeOut: 5000 });
            $('#main-contenido').waitMe('hide');
        }
    }).catch(function (e) {
        console.log(e);
        toastr.error('La conexion esta muy lenta. IntÃ©ntelo nuevamente refrescando la pantalla', 'Error', { timeOut: 5000 });
        $('#main-contenido').waitMe('hide');
    });
    next();
};

module.exports.refrescar_movimientos = function refrescar_movimientos() {
    refrescar_movimientos_caja();
};

},{"../../../utility/tools":401,"../../constantes_entorno/constantes":377,"../modales/pdf":396,"empty-element":338,"yo-yo":375}],399:[function(require,module,exports){
(function (process,global){
'use strict';

function dbConfig() {

    return config = {

        user: process.env.user_database || global.userDB,
        password: process.env.password_database || global.passwordDB,
        server: process.env.server_database || global.serverDB,
        database: process.env.name_database || global.DB
    };
}

function dbMaster() {
    return config = {
        user: process.env.user_database || 'sa',
        password: process.env.password_database || 'paleC0nsult0res',
        server: process.env.server_database || 'localhost',
        database: process.env.name_database || 'PALERPmaster'
    };
}
module.exports = { dbConfig: dbConfig, dbMaster: dbMaster };

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"_process":9}],400:[function(require,module,exports){
"use strict";

var sql = require("mssql");
var md5 = require("md5");

var _require = require('./conexion_sql'),
    dbConfig = _require.dbConfig,
    dbMaster = _require.dbMaster;

//var dbConfig = require('./conexion_sql').dbConfig()
//var dbMaster = require('./conexion_sql').dbMaster()

//Procedimientos Almacenados

var Ejecutar_Procedimientos_DBMaster = function Ejecutar_Procedimientos_DBMaster(res, procedimientos, respuesta_previa) {
    Ejecutar_SP_SQL_DBMaster(res, procedimientos, 0, respuesta_previa);
};
var Ejecutar_SP_SQL_DBMaster = function Ejecutar_SP_SQL_DBMaster(res, procedimientos, posicion, respuesta_previa) {
    var dbConn = new sql.Connection(dbMaster());
    dbConn.connect(function (err) {
        if (err) {
            console.log("Error while connecting database :- " + err);
            return res.json({ respuesta: 'error' });
        }
        // creacion Request object
        var request = new sql.Request(dbConn);
        // parametros para procedimiento
        var param = procedimientos[posicion].parametros;
        for (i = 0; i < param.length; i++) {
            request.input(param[i].nom_parametro, param[i].tipo_parametro || sql.NVarChar, param[i].valor_parametro);
        }

        request.execute(procedimientos[posicion].sp_name, function (err, result) {
            dbConn.close();
            if (err) {
                console.log("Error while querying database :- " + err);
                return res.json({ respuesta: 'error', detalle_error: err });
            }
            procedimientos[posicion].data = result[0];
            if (posicion + 1 < procedimientos.length) Ejecutar_SP_SQL(res, procedimientos, posicion + 1, respuesta_previa);else {
                data = {};
                for (j = 0; j < procedimientos.length; j++) {
                    data[procedimientos[j].nom_respuesta] = procedimientos[j].data;
                }
                if (respuesta_previa) {
                    for (i = 0; i < respuesta_previa.length; i++) {
                        data[respuesta_previa[i].nombre] = respuesta_previa[i].valor;
                    }
                }
                res.json({ respuesta: 'ok', data: data });
            }
        });
    });
};

var EXEC_SQL_DBMaster = function EXEC_SQL_DBMaster(sp_name, parametros, next) {
    var dbConn = new sql.Connection(dbMaster());
    dbConn.connect(function (err) {
        if (err) {
            return next({ err: err });
        }
        var request = new sql.Request(dbConn);
        var param = parametros;
        for (i = 0; i < param.length; i++) {
            request.input(param[i].nom_parametro, param[i].tipo_parametro || sql.NVarChar, param[i].valor_parametro);
        }
        request.execute(sp_name, function (err, result) {
            dbConn.close();
            if (err) {
                return next({ err: err });
            }
            next({ result: result[0] });
        });
    });
};

var EXEC_QUERY_DBMaster = function EXEC_QUERY_DBMaster(query, parametros, next) {
    var dbConn = new sql.Connection(dbMaster());
    dbConn.connect(function (err) {
        if (err) {
            return next({ err: err });
        }
        var request = new sql.Request(dbConn);
        var param = parametros;
        for (i = 0; i < param.length; i++) {
            request.input(param[i].nom_parametro, param[i].tipo_parametro || sql.NVarChar, param[i].valor_parametro);
        }
        request.query(query, function (err, result) {
            dbConn.close();
            if (err) {
                return next({ err: err });
            }
            next({ result: result });
        });
    });
};

var Ejecutar_Procedimientos = function Ejecutar_Procedimientos(req, res, procedimientos, respuesta_previa) {
    Ejecutar_SP_SQL(req, res, procedimientos, 0, respuesta_previa);
};
var Ejecutar_SP_SQL = function Ejecutar_SP_SQL(req, res, procedimientos, posicion, respuesta_previa) {
    var dbConn = new sql.Connection(dbConfig());
    dbConn.connect(function (err) {
        if (err) {
            console.log("Error while connecting database :- " + err);
            return res.json({ respuesta: 'error' });
        }
        // creacion Request object
        var request = new sql.Request(dbConn);
        // parametros para procedimiento
        var param = procedimientos[posicion].parametros;
        for (i = 0; i < param.length; i++) {
            request.input(param[i].nom_parametro, param[i].tipo_parametro || sql.NVarChar, param[i].valor_parametro);
        }

        request.execute(procedimientos[posicion].sp_name, function (err, result) {
            dbConn.close();
            if (err) {
                console.log("Error while querying database :- " + err);
                return res.json({ respuesta: 'error', detalle_error: err });
            }
            procedimientos[posicion].data = result[0];
            if (posicion + 1 < procedimientos.length) Ejecutar_SP_SQL(req, res, procedimientos, posicion + 1, respuesta_previa);else {
                data = {};
                for (j = 0; j < procedimientos.length; j++) {
                    data[procedimientos[j].nom_respuesta] = procedimientos[j].data;
                }
                if (respuesta_previa) {
                    for (i = 0; i < respuesta_previa.length; i++) {
                        data[respuesta_previa[i].nombre] = respuesta_previa[i].valor;
                    }
                }
                return res.json({ respuesta: 'ok', arqueo: req.app.locals.arqueo ? req.app.locals.arqueo[0] : null, empresa: req.app.locals.empresa ? req.app.locals.empresa[0] : null, caja: req.app.locals.caja ? req.app.locals.caja[0] : null, turno: req.app.locals.turno ? req.app.locals.turno[0] : null, data: data });
            }
        });
    });
};
var LOGIN_SQL = function LOGIN_SQL(Cod_Usuarios, Contrasena, next) {
    var dbConn = new sql.Connection(dbConfig());
    dbConn.connect(function (err) {
        if (err) {
            return next({ err: err });
        }
        var request = new sql.Request(dbConn);
        request.input('Cod_Usuarios', Cod_Usuarios.toUpperCase());
        request.execute('usp_PRI_USUARIO_TXPK', function (err, result) {
            dbConn.close();
            if (err) {
                return next({ err: err });
            }
            Contrasena = md5(Contrasena);
            usuario = result[0];
            if (usuario.length == 0) return next({ err: 'Revise sus datos ingresados' });
            if (usuario.length > 0 && usuario[0].Contrasena != Contrasena) return next({ err: 'Revise sus datos ingresados' });
            next({ Cod_Usuarios: usuario[0].Cod_Usuarios, Nick: usuario[0].Nick });
        });
    });
};

var EXEC_QUERY = function EXEC_QUERY(query, parametros, next) {
    var dbConn = new sql.Connection(dbConfig());
    dbConn.connect(function (err) {
        if (err) {
            return next({ err: err });
        }
        var request = new sql.Request(dbConn);
        var param = parametros;
        for (i = 0; i < param.length; i++) {
            request.input(param[i].nom_parametro, param[i].tipo_parametro || sql.NVarChar, param[i].valor_parametro);
        }
        request.query(query, function (err, result) {
            dbConn.close();
            if (err) {
                return next({ err: err });
            }
            next({ result: result });
        });
    });
};

var EXEC_SQL = function EXEC_SQL(sp_name, parametros, next) {
    //console.log(dbConfig())
    var dbConn = new sql.Connection(dbConfig());
    dbConn.connect(function (err) {
        if (err) {
            return next({ err: err });
        }
        var request = new sql.Request(dbConn);
        var param = parametros;
        for (i = 0; i < param.length; i++) {
            request.input(param[i].nom_parametro, param[i].tipo_parametro || sql.NVarChar, param[i].valor_parametro);
        }
        request.execute(sp_name, function (err, result) {
            dbConn.close();
            if (err) {
                return next({ err: err });
            }
            next({ result: result[0] });
        });
    });
};

var EXEC_SQL_OUTPUT = function EXEC_SQL_OUTPUT(sp_name, parametros, next) {
    var arrayParamOutPut = [];
    var arrayResulOutPut = [];
    var dbConn = new sql.Connection(dbConfig());
    dbConn.connect(function (err) {
        if (err) {
            return next({ err: err });
        }
        var request = new sql.Request(dbConn);
        var param = parametros;
        for (i = 0; i < param.length; i++) {
            if (param[i].tipo) {
                request.output(param[i].nom_parametro, param[i].tipo_parametro || sql.Int, param[i].valor_parametro);
                arrayParamOutPut.push({ parametro: param[i].nom_parametro });
                //paramOutPut = param[i].nom_parametro
            } else request.input(param[i].nom_parametro, param[i].tipo_parametro || sql.NVarChar, param[i].valor_parametro);
        }
        request.execute(sp_name, function (err, result) {

            dbConn.close();
            if (err) {
                return next({ err: err });
            }
            LlenarArregloOutPut(0, arrayResulOutPut, arrayParamOutPut, request, function (arrayResult) {

                return next({ result: arrayResult });
            });

            //return next({result:request.parameters[paramOutPut].value})
        });
    });
};

function LlenarArregloOutPut(i, arrayResulOutPut, arrayParamOutPut, request, callback) {
    if (i < arrayParamOutPut.length) {
        arrayResulOutPut.push({
            valor: request.parameters[arrayParamOutPut[i].parametro].value
        });
        LlenarArregloOutPut(i + 1, arrayResulOutPut, arrayParamOutPut, request, callback);
    } else {
        callback(arrayResulOutPut);
    }
}

module.exports = { Ejecutar_Procedimientos: Ejecutar_Procedimientos, LOGIN_SQL: LOGIN_SQL, EXEC_SQL: EXEC_SQL, EXEC_SQL_OUTPUT: EXEC_SQL_OUTPUT, Ejecutar_Procedimientos_DBMaster: Ejecutar_Procedimientos_DBMaster, EXEC_SQL_DBMaster: EXEC_SQL_DBMaster, EXEC_QUERY_DBMaster: EXEC_QUERY_DBMaster, EXEC_QUERY: EXEC_QUERY };

},{"./conexion_sql":399,"md5":346,"mssql":348}],401:[function(require,module,exports){
(function (global){
"use strict";

//import { URL } from '../src/constantes_entorno/constantes'  
var _require = require('./exec_sp_sql'),
    EXEC_SQL_DBMaster = _require.EXEC_SQL_DBMaster;

var sUnidades = ["", "UNO", "DOS", "TRES", "CUATRO", "CINCO", "SEIS", "SIETE", "OCHO", "NUEVE", "DIEZ", "ONCE", "DOCE", "TRECE", "CATORCE", "QUINCE", "DIECISEIS", "DIECISIETE", "DIECIOCHO", "DIECINUEVE", "VEINTE", "VEINTIUN", "VEINTIDOS", "VEINTITRES", "VEINTICUATRO", "VEINTICINCO", "VEINTISEIS", "VEINTISIETE", "VEINTIOCHO", "VEINTINUEVE"];

var sDecenas = ["", "DIEZ", "VEINTE", "TREINTE", "CUARENTA", "CINCUENTA", "SESENTA", "SETENTA", "OCHENTA", "NOVENTA"];

var sCentenas = ["", "CIENTO", "DOCIENTOS", "TRESCIENTOS", "CUATROCIENTOS", "QUINIENTOS", "SEISCIENTOS", "SETECIENTOS", "OCHOCIENTOS", "NOVECIENTOS"];

function Numeros(dNumAux, dFactor) {
    var dCociente = dNumAux / dFactor;
    var dNumero = 0;
    var iNumero = 0;
    var sNumero = "";
    var sTexto = "";

    if (dCociente >= 100) {
        dNumero = dCociente / 100;
        sNumero = dNumero.toString();
        iNumero = parseInt(sNumero[0].toString());
        sTexto += sCentenas[iNumero] + " ";
    }

    dCociente = dCociente % 100;
    if (dCociente >= 30) {
        dNumero = dCociente / 10;
        sNumero = dNumero.toString();
        iNumero = parseInt(sNumero[0].toString());
        if (iNumero > 0) sTexto += sDecenas[iNumero] + " ";

        dNumero = dCociente % 10;
        sNumero = dNumero.toString();
        iNumero = parseInt(sNumero[0].toString());
        if (iNumero > 0) sTexto += "y " + sUnidades[iNumero] + " ";
    } else {
        dNumero = dCociente;
        sNumero = dNumero.toString();
        if (sNumero.Length > 1) {
            if (sNumero[1] != '.') iNumero = parseInt(sNumero[0].toString() + sNumero[1].toString());else iNumero = parseInt(sNumero[0].toString());
        } else iNumero = parseInt(sNumero[0].toString());
        sTexto += sUnidades[iNumero] + " ";
    }

    return sTexto;
}

function ConvertirCadena(sNumero) {
    var dNumero;
    var dNumAux = 0;
    var x;
    var sAux;
    var sResultado = " ";
    try {
        dNumero = parseFloat(sNumero);
    } catch (e) {
        return "";
    }

    if (dNumero > 999999999999) return "";

    if (dNumero > 999999999) {
        dNumAux = dNumero % 1000000000000;
        sResultado += Numeros(dNumAux, 1000000000) + " MIL ";
    }

    if (dNumero > 999999) {
        dNumAux = dNumero % 1000000000;
        sResultado += Numeros(dNumAux, 1000000) + " MILLONES ";
    }

    if (dNumero > 999) {
        dNumAux = dNumero % 1000000;
        sResultado += Numeros(dNumAux, 1000) + " MIL ";
    }

    dNumAux = dNumero % 1000;
    sResultado += Numeros(dNumAux, 1);

    sAux = dNumero.toString();

    if (sAux.indexOf(".") >= 0) sResultado += ObtenerDecimales(sAux);
    sAux = sResultado;
    x = sResultado[1].toString();
    sResultado = x.toString();

    for (var i = 2; i < sAux.Length; i++) {
        sResultado += sAux[i].toString();
    }return sResultado;
}

function ConvertirCadena(dNumero, TipoMoneda) {
    var dNumAux = 0;
    var sAux;
    var sResultado = " ";

    if (dNumero > 999999999999) return "";

    if (dNumero > 999999999) {
        dNumAux = dNumero % 1000000000000;
        sResultado += Numeros(dNumAux, 1000000000) + " MIL ";
    }

    if (dNumero > 999999) {
        dNumAux = dNumero % 1000000000;
        sResultado += Numeros(dNumAux, 1000000) + " MILLONES ";
    }

    if (dNumero > 999) {
        dNumAux = dNumero % 1000000;
        sResultado += Numeros(dNumAux, 1000) + " MIL ";
    }

    dNumAux = dNumero % 1000;
    sResultado += Numeros(dNumAux, 1);
    sAux = dNumero.toString();
    var sNumPuntos = [];
    var Numero = 0;

    sNumPuntos = sAux.split('.');

    try {
        Numero = parseInt(sNumPuntos[1]);
        if (sNumPuntos[1].Length == 1) {
            Numero *= 10;
        }
    } catch (e) {
        Numero = 0;
    }
    sResultado += "CON ";
    sResultado += Numero + "00";

    sResultado += "/100 " + TipoMoneda;
    return sResultado;
}

function UnObfuscateString(cadena) {
    if (cadena != null && cadena != "") {
        var sTemp = "";
        var sEnd = "";
        var sStart = "";
        var iLoop = 0;
        var iLen = 0;
        var iMiddle = 0;
        var iRemainder = 0;

        var iLen = cadena.length;
        var iRemainder = iLen % 2;
        var iMiddle = parseInt(iLen / 2);

        for (iLoop = iMiddle + iRemainder; iLoop >= 1; iLoop += -1) {
            if (iRemainder == 0) {
                sTemp += cadena.substr(iLoop + iMiddle - 1, 1); //Strings.Mid(cadena, iLoop + iMiddle, 1);
            }

            sTemp += cadena.substr(iLoop - 1, 1); //Strings.Mid(cadena, iLoop, 1);
            if (iRemainder == 1 & iLoop != 1) {
                sTemp += cadena.substr(iLoop + iMiddle - 1, 1); //Strings.Mid(cadena, iLoop + iMiddle, 1);
            }
        }
        return sTemp;
    } else {
        return "";
    }
}

function getObjectArrayJsonVentas(arrayJson, pIdTab) {
    var objects = [];
    for (var i in arrayJson) {
        if (arrayJson[i].idTab == pIdTab) {
            objects.push({
                idTab: arrayJson[i].idTab,
                Total: arrayJson[i].Total,
                TotalDescuentos: arrayJson[i].TotalDescuentos,
                TipodeCambio: arrayJson[i].TipodeCambio,
                _CantidadOriginal: arrayJson[i]._CantidadOriginal,
                SimboloMoneda: arrayJson[i].SimboloMoneda,
                SimboloMonedaExtra: arrayJson[i].SimboloMonedaExtra,
                Cliente: arrayJson[i].Cliente,
                Detalles: arrayJson[i].Detalles
            });
            break;
        }
    }
    return objects;
}

function changeArrayJsonVentas(arrayJson, pIdTab, arrayCambios) {
    for (var i in global.variablesVentas) {
        if (global.variablesVentas[i].idTab == pIdTab) {
            global.variablesVentas[i].Total = arrayCambios[0] != null ? arrayCambios[0] : global.variablesVentas[i].Total;
            global.variablesVentas[i].TotalDescuentos = arrayCambios[1] != null ? arrayCambios[1] : global.variablesVentas[i].TotalDescuentos;
            global.variablesVentas[i].TipodeCambio = arrayCambios[2] != null ? arrayCambios[2] : global.variablesVentas[i].TipodeCambio;
            global.variablesVentas[i]._CantidadOriginal = arrayCambios[3] != null ? arrayCambios[3] : global.variablesVentas[i]._CantidadOriginal;
            global.variablesVentas[i].SimboloMoneda = arrayCambios[4] != null ? arrayCambios[4] : global.variablesVentas[i].SimboloMoneda;
            global.variablesVentas[i].SimboloMonedaExtra = arrayCambios[5] != null ? arrayCambios[5] : global.variablesVentas[i].SimboloMonedaExtra;
            global.variablesVentas[i].Cliente = arrayCambios[6] != null ? arrayCambios[6] : global.variablesVentas[i].Cliente;
            global.variablesVentas[i].Detalles = arrayCambios[7] != null ? arrayCambios[7] : global.variablesVentas[i].Detalles;
            break;
        }
    }
}

function changeDetallesArrayJsonVentas(pIdTab, pCodigo, arrayCambios) {
    for (var i in global.variablesVentas) {
        if (global.variablesVentas[i].idTab == pIdTab) {
            for (var j in global.variablesVentas[i].Detalles) {
                if (global.variablesVentas[i].Detalles[j].Codigo == pCodigo) {
                    global.variablesVentas[i].Detalles[j].id_ComprobantePago = arrayCambios[0] != null ? arrayCambios[0] : global.variablesVentas[i].Detalles[j].id_ComprobantePago;
                    global.variablesVentas[i].Detalles[j].id_Detalle = arrayCambios[1] != null ? arrayCambios[1] : global.variablesVentas[i].Detalles[j].id_Detalle;
                    global.variablesVentas[i].Detalles[j].Id_Producto = arrayCambios[2] != null ? arrayCambios[2] : global.variablesVentas[i].Detalles[j].Id_Producto;
                    global.variablesVentas[i].Detalles[j].Codigo = arrayCambios[3] != null ? arrayCambios[3] : global.variablesVentas[i].Detalles[j].Codigo;
                    global.variablesVentas[i].Detalles[j].Descripcion = arrayCambios[4] != null ? arrayCambios[4] : global.variablesVentas[i].Detalles[j].Descripcion;
                    global.variablesVentas[i].Detalles[j].Almacen = arrayCambios[5] != null ? arrayCambios[5] : global.variablesVentas[i].Detalles[j].Almacen;
                    global.variablesVentas[i].Detalles[j].UM = arrayCambios[6] != null ? arrayCambios[6] : global.variablesVentas[i].Detalles[j].UM;
                    global.variablesVentas[i].Detalles[j].Stock = arrayCambios[7] != null ? arrayCambios[7] : global.variablesVentas[i].Detalles[j].Stock;
                    global.variablesVentas[i].Detalles[j].Cantidad = arrayCambios[8] != null ? arrayCambios[8] : global.variablesVentas[i].Detalles[j].Cantidad;
                    global.variablesVentas[i].Detalles[j].Despachado = arrayCambios[9] != null ? arrayCambios[9] : global.variablesVentas[i].Detalles[j].Despachado;
                    global.variablesVentas[i].Detalles[j].PU = arrayCambios[10] != null ? arrayCambios[10] : global.variablesVentas[i].Detalles[j].PU;
                    global.variablesVentas[i].Detalles[j].Descuento = arrayCambios[11] != null ? arrayCambios[11] : global.variablesVentas[i].Detalles[j].Descuento;
                    global.variablesVentas[i].Detalles[j].Importe = arrayCambios[12] != null ? arrayCambios[12] : global.variablesVentas[i].Detalles[j].Importe;
                    global.variablesVentas[i].Detalles[j].Cod_Manguera = arrayCambios[13] != null ? arrayCambios[13] : global.variablesVentas[i].Detalles[j].Cod_Manguera;
                    global.variablesVentas[i].Detalles[j].Tipo = arrayCambios[14] != null ? arrayCambios[14] : global.variablesVentas[i].Detalles[j].Tipo;
                    global.variablesVentas[i].Detalles[j].Obs_ComprobanteD = arrayCambios[15] != null ? arrayCambios[15] : global.variablesVentas[i].Detalles[j].Obs_ComprobanteD;
                    break;
                }
            }
        }
    }
}

function deleteElementArrayJsonVentas(arrayJson, pIdTab, pCodigo) {
    for (var i in arrayJson) {
        if (arrayJson[i].idTab == pIdTab) {
            if (pCodigo != undefined) {
                for (var j in arrayJson[i].Detalles) {
                    if (arrayJson[i].Detalles[j].Codigo == pCodigo) {
                        arrayJson[i].Detalles.splice(j, 1);
                        break;
                    }
                }
            } else {
                arrayJson.splice(i, 1);
                break;
            }
        }
    }
}

function BloquearControles(event) {
    event.preventDefault();
    event.stopPropagation();
}

function LimpiarVariablesGlobales() {
    global.objClienteVenta = '';
    global.objProductoVentas = '';
    global.objProducto = '';
}

function CambiarCadenaConexion(cadena) {
    console.log(cadena);
    var posicionDataSource = cadena.search("Data Source=");
    var posicionInitial = cadena.search(";Initial Catalog=");
    var posicionUser = cadena.search(";user id=");
    var posicionPassword = cadena.search("; password=");

    if (cadena != null && cadena != "") {
        global.userDB = cadena.substring(posicionUser + ";user id=".length, posicionPassword);
        global.passwordDB = cadena.substring(posicionPassword + "; password=".length, cadena.length - 1);
        global.serverDB = cadena.substring(posicionDataSource + "Data Source=".length, posicionInitial).indexOf('.\\') != -1 ? 'localhost' : cadena.substring(posicionDataSource + "Data Source=".length, posicionInitial);
        global.DB = cadena.substring(posicionInitial + ";Initial Catalog=".length, posicionUser);
    } else {
        global.userDB = '';
        global.passwordDB = '';
        global.serverDB = '';
        global.DB = '';
    }
}

function TraerConexion(req, res, callback) {
    parametros = [{ nom_parametro: 'RUC', valor_parametro: req.body.RUC }];

    EXEC_SQL_DBMaster('USP_PRI_EMPRESA_TXRUC', parametros, function (m) {
        if (m.err) {
            return false;
        } else {
            if (m.result.length > 0) {
                if (m.result[0].CadenaConexion != null) {
                    CambiarCadenaConexion(UnObfuscateString(m.result[0].CadenaConexion));
                    callback(true);
                } else {
                    callback(false);
                }
            } else {
                callback(false);
            }
        }
    });
}

function VerificarDigitos(ruc) {
    //11 dÃ­gitos y empieza en 10,15,16,17 o 20
    if (!(ruc >= 1e10 && ruc < 11e9 || ruc >= 15e9 && ruc < 18e9 || ruc >= 2e10 && ruc < 21e9)) return false;

    for (var suma = -(ruc % 10 < 2), i = 0; i < 11; i++, ruc = ruc / 10 | 0) {
        suma += ruc % 10 * (i % 7 + (i / 7 | 0) + 1);
    }return suma % 11 === 0;
}

function RUCValido(ruc) {
    if ((ruc = Number(ruc)) && ruc % 1 === 0 && VerificarDigitos(ruc)) {
        return true;
    } else {
        return false;
    }
}

function EmailValido(valor) {
    if (/^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i.test(valor)) {
        return true;
    } else {
        return false;
    }
}

module.exports = { ConvertirCadena: ConvertirCadena, UnObfuscateString: UnObfuscateString, CambiarCadenaConexion: CambiarCadenaConexion, TraerConexion: TraerConexion, BloquearControles: BloquearControles, getObjectArrayJsonVentas: getObjectArrayJsonVentas, changeArrayJsonVentas: changeArrayJsonVentas, changeDetallesArrayJsonVentas: changeDetallesArrayJsonVentas, deleteElementArrayJsonVentas: deleteElementArrayJsonVentas, LimpiarVariablesGlobales: LimpiarVariablesGlobales, RUCValido: RUCValido, EmailValido: EmailValido };

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./exec_sp_sql":400}]},{},[379])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
